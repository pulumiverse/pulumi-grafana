// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDashboards(args?: GetDashboardsArgs, opts?: pulumi.InvokeOptions): Promise<GetDashboardsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("grafana:index/getDashboards:getDashboards", {
        "folderIds": args.folderIds,
        "folderUids": args.folderUids,
        "limit": args.limit,
        "orgId": args.orgId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getDashboards.
 */
export interface GetDashboardsArgs {
    /**
     * @deprecated Use `folderUids` instead.
     */
    folderIds?: number[];
    folderUids?: string[];
    limit?: number;
    orgId?: string;
    tags?: string[];
}

/**
 * A collection of values returned by getDashboards.
 */
export interface GetDashboardsResult {
    readonly dashboards: outputs.GetDashboardsDashboard[];
    /**
     * @deprecated Use `folderUids` instead.
     */
    readonly folderIds?: number[];
    readonly folderUids?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly limit?: number;
    readonly orgId?: string;
    readonly tags?: string[];
}
export function getDashboardsOutput(args?: GetDashboardsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDashboardsResult> {
    return pulumi.output(args).apply((a: any) => getDashboards(a, opts))
}

/**
 * A collection of arguments for invoking getDashboards.
 */
export interface GetDashboardsOutputArgs {
    /**
     * @deprecated Use `folderUids` instead.
     */
    folderIds?: pulumi.Input<pulumi.Input<number>[]>;
    folderUids?: pulumi.Input<pulumi.Input<string>[]>;
    limit?: pulumi.Input<number>;
    orgId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
