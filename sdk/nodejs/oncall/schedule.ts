// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/schedules/)
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import grafana:onCall/schedule:Schedule name "{{ id }}"
 * ```
 */
export class Schedule extends pulumi.CustomResource {
    /**
     * Get an existing Schedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScheduleState, opts?: pulumi.CustomResourceOptions): Schedule {
        return new Schedule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'grafana:onCall/schedule:Schedule';

    /**
     * Returns true if the given object is an instance of Schedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Schedule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Schedule.__pulumiType;
    }

    /**
     * Enable overrides via web UI (it will ignore ical*url*overrides).
     */
    declare public readonly enableWebOverrides: pulumi.Output<boolean | undefined>;
    /**
     * The URL of external iCal calendar which override primary events.
     */
    declare public readonly icalUrlOverrides: pulumi.Output<string | undefined>;
    /**
     * The URL of the external calendar iCal file.
     */
    declare public readonly icalUrlPrimary: pulumi.Output<string | undefined>;
    /**
     * The schedule's name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The list of ID's of on-call shifts.
     */
    declare public readonly shifts: pulumi.Output<string[] | undefined>;
    /**
     * The Slack-specific settings for a schedule.
     */
    declare public readonly slack: pulumi.Output<outputs.onCall.ScheduleSlack | undefined>;
    /**
     * The ID of the OnCall team (using the `grafana.onCall.getTeam` datasource).
     */
    declare public readonly teamId: pulumi.Output<string | undefined>;
    /**
     * The schedule's time zone.
     */
    declare public readonly timeZone: pulumi.Output<string | undefined>;
    /**
     * The schedule's type. Valid values are `ical`, `calendar`, `web`.
     */
    declare public readonly type: pulumi.Output<string>;

    /**
     * Create a Schedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScheduleArgs | ScheduleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScheduleState | undefined;
            resourceInputs["enableWebOverrides"] = state?.enableWebOverrides;
            resourceInputs["icalUrlOverrides"] = state?.icalUrlOverrides;
            resourceInputs["icalUrlPrimary"] = state?.icalUrlPrimary;
            resourceInputs["name"] = state?.name;
            resourceInputs["shifts"] = state?.shifts;
            resourceInputs["slack"] = state?.slack;
            resourceInputs["teamId"] = state?.teamId;
            resourceInputs["timeZone"] = state?.timeZone;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as ScheduleArgs | undefined;
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["enableWebOverrides"] = args?.enableWebOverrides;
            resourceInputs["icalUrlOverrides"] = args?.icalUrlOverrides;
            resourceInputs["icalUrlPrimary"] = args?.icalUrlPrimary;
            resourceInputs["name"] = args?.name;
            resourceInputs["shifts"] = args?.shifts;
            resourceInputs["slack"] = args?.slack;
            resourceInputs["teamId"] = args?.teamId;
            resourceInputs["timeZone"] = args?.timeZone;
            resourceInputs["type"] = args?.type;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Schedule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Schedule resources.
 */
export interface ScheduleState {
    /**
     * Enable overrides via web UI (it will ignore ical*url*overrides).
     */
    enableWebOverrides?: pulumi.Input<boolean>;
    /**
     * The URL of external iCal calendar which override primary events.
     */
    icalUrlOverrides?: pulumi.Input<string>;
    /**
     * The URL of the external calendar iCal file.
     */
    icalUrlPrimary?: pulumi.Input<string>;
    /**
     * The schedule's name.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of ID's of on-call shifts.
     */
    shifts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Slack-specific settings for a schedule.
     */
    slack?: pulumi.Input<inputs.onCall.ScheduleSlack>;
    /**
     * The ID of the OnCall team (using the `grafana.onCall.getTeam` datasource).
     */
    teamId?: pulumi.Input<string>;
    /**
     * The schedule's time zone.
     */
    timeZone?: pulumi.Input<string>;
    /**
     * The schedule's type. Valid values are `ical`, `calendar`, `web`.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Schedule resource.
 */
export interface ScheduleArgs {
    /**
     * Enable overrides via web UI (it will ignore ical*url*overrides).
     */
    enableWebOverrides?: pulumi.Input<boolean>;
    /**
     * The URL of external iCal calendar which override primary events.
     */
    icalUrlOverrides?: pulumi.Input<string>;
    /**
     * The URL of the external calendar iCal file.
     */
    icalUrlPrimary?: pulumi.Input<string>;
    /**
     * The schedule's name.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of ID's of on-call shifts.
     */
    shifts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Slack-specific settings for a schedule.
     */
    slack?: pulumi.Input<inputs.onCall.ScheduleSlack>;
    /**
     * The ID of the OnCall team (using the `grafana.onCall.getTeam` datasource).
     */
    teamId?: pulumi.Input<string>;
    /**
     * The schedule's time zone.
     */
    timeZone?: pulumi.Input<string>;
    /**
     * The schedule's type. Valid values are `ical`, `calendar`, `web`.
     */
    type: pulumi.Input<string>;
}
