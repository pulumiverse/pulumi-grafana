// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/users/)
 */
export function getLabel(args: GetLabelArgs, opts?: pulumi.InvokeOptions): Promise<GetLabelResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("grafana:onCall/getLabel:getLabel", {
        "key": args.key,
        "value": args.value,
    }, opts);
}

/**
 * A collection of arguments for invoking getLabel.
 */
export interface GetLabelArgs {
    /**
     * The key for the label.
     */
    key: string;
    /**
     * The value of the label.
     */
    value: string;
}

/**
 * A collection of values returned by getLabel.
 */
export interface GetLabelResult {
    /**
     * The ID of the label.
     */
    readonly id: string;
    /**
     * The key for the label.
     */
    readonly key: string;
    /**
     * The value of the label.
     */
    readonly value: string;
}
/**
 * * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/users/)
 */
export function getLabelOutput(args: GetLabelOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLabelResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("grafana:onCall/getLabel:getLabel", {
        "key": args.key,
        "value": args.value,
    }, opts);
}

/**
 * A collection of arguments for invoking getLabel.
 */
export interface GetLabelOutputArgs {
    /**
     * The key for the label.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the label.
     */
    value: pulumi.Input<string>;
}
