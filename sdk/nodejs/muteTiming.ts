// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MuteTiming extends pulumi.CustomResource {
    /**
     * Get an existing MuteTiming resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MuteTimingState, opts?: pulumi.CustomResourceOptions): MuteTiming {
        return new MuteTiming(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'grafana:index/muteTiming:MuteTiming';

    /**
     * Returns true if the given object is an instance of MuteTiming.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MuteTiming {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MuteTiming.__pulumiType;
    }

    /**
     * Allow modifying the mute timing from other sources than Terraform or the Grafana API.
     */
    public readonly disableProvenance!: pulumi.Output<boolean | undefined>;
    /**
     * The time intervals at which to mute notifications. Use an empty block to mute all the time.
     */
    public readonly intervals!: pulumi.Output<outputs.MuteTimingInterval[] | undefined>;
    /**
     * The name of the mute timing.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Organization ID. If not set, the Org ID defined in the provider block will be used.
     */
    public readonly orgId!: pulumi.Output<string | undefined>;

    /**
     * Create a MuteTiming resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: MuteTimingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MuteTimingArgs | MuteTimingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MuteTimingState | undefined;
            resourceInputs["disableProvenance"] = state ? state.disableProvenance : undefined;
            resourceInputs["intervals"] = state ? state.intervals : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
        } else {
            const args = argsOrState as MuteTimingArgs | undefined;
            resourceInputs["disableProvenance"] = args ? args.disableProvenance : undefined;
            resourceInputs["intervals"] = args ? args.intervals : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MuteTiming.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MuteTiming resources.
 */
export interface MuteTimingState {
    /**
     * Allow modifying the mute timing from other sources than Terraform or the Grafana API.
     */
    disableProvenance?: pulumi.Input<boolean>;
    /**
     * The time intervals at which to mute notifications. Use an empty block to mute all the time.
     */
    intervals?: pulumi.Input<pulumi.Input<inputs.MuteTimingInterval>[]>;
    /**
     * The name of the mute timing.
     */
    name?: pulumi.Input<string>;
    /**
     * The Organization ID. If not set, the Org ID defined in the provider block will be used.
     */
    orgId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MuteTiming resource.
 */
export interface MuteTimingArgs {
    /**
     * Allow modifying the mute timing from other sources than Terraform or the Grafana API.
     */
    disableProvenance?: pulumi.Input<boolean>;
    /**
     * The time intervals at which to mute notifications. Use an empty block to mute all the time.
     */
    intervals?: pulumi.Input<pulumi.Input<inputs.MuteTimingInterval>[]>;
    /**
     * The name of the mute timing.
     */
    name?: pulumi.Input<string>;
    /**
     * The Organization ID. If not set, the Org ID defined in the provider block will be used.
     */
    orgId?: pulumi.Input<string>;
}
