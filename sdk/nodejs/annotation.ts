// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Annotation extends pulumi.CustomResource {
    /**
     * Get an existing Annotation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AnnotationState, opts?: pulumi.CustomResourceOptions): Annotation {
        return new Annotation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'grafana:index/annotation:Annotation';

    /**
     * Returns true if the given object is an instance of Annotation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Annotation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Annotation.__pulumiType;
    }

    /**
     * The ID of the dashboard on which to create the annotation. Deprecated: Use dashboardUid instead.
     *
     * @deprecated Use dashboardUid instead.
     */
    public readonly dashboardId!: pulumi.Output<number | undefined>;
    /**
     * The ID of the dashboard on which to create the annotation.
     */
    public readonly dashboardUid!: pulumi.Output<string | undefined>;
    /**
     * The Organization ID. If not set, the Org ID defined in the provider block will be used.
     */
    public readonly orgId!: pulumi.Output<string | undefined>;
    /**
     * The ID of the dashboard panel on which to create the annotation.
     */
    public readonly panelId!: pulumi.Output<number | undefined>;
    /**
     * The tags to associate with the annotation.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * The text to associate with the annotation.
     */
    public readonly text!: pulumi.Output<string>;
    /**
     * The RFC 3339-formatted time string indicating the annotation's time.
     */
    public readonly time!: pulumi.Output<string>;
    /**
     * The RFC 3339-formatted time string indicating the annotation's end time.
     */
    public readonly timeEnd!: pulumi.Output<string>;

    /**
     * Create a Annotation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AnnotationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AnnotationArgs | AnnotationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AnnotationState | undefined;
            resourceInputs["dashboardId"] = state ? state.dashboardId : undefined;
            resourceInputs["dashboardUid"] = state ? state.dashboardUid : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["panelId"] = state ? state.panelId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["text"] = state ? state.text : undefined;
            resourceInputs["time"] = state ? state.time : undefined;
            resourceInputs["timeEnd"] = state ? state.timeEnd : undefined;
        } else {
            const args = argsOrState as AnnotationArgs | undefined;
            if ((!args || args.text === undefined) && !opts.urn) {
                throw new Error("Missing required property 'text'");
            }
            resourceInputs["dashboardId"] = args ? args.dashboardId : undefined;
            resourceInputs["dashboardUid"] = args ? args.dashboardUid : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["panelId"] = args ? args.panelId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["text"] = args ? args.text : undefined;
            resourceInputs["time"] = args ? args.time : undefined;
            resourceInputs["timeEnd"] = args ? args.timeEnd : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Annotation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Annotation resources.
 */
export interface AnnotationState {
    /**
     * The ID of the dashboard on which to create the annotation. Deprecated: Use dashboardUid instead.
     *
     * @deprecated Use dashboardUid instead.
     */
    dashboardId?: pulumi.Input<number>;
    /**
     * The ID of the dashboard on which to create the annotation.
     */
    dashboardUid?: pulumi.Input<string>;
    /**
     * The Organization ID. If not set, the Org ID defined in the provider block will be used.
     */
    orgId?: pulumi.Input<string>;
    /**
     * The ID of the dashboard panel on which to create the annotation.
     */
    panelId?: pulumi.Input<number>;
    /**
     * The tags to associate with the annotation.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The text to associate with the annotation.
     */
    text?: pulumi.Input<string>;
    /**
     * The RFC 3339-formatted time string indicating the annotation's time.
     */
    time?: pulumi.Input<string>;
    /**
     * The RFC 3339-formatted time string indicating the annotation's end time.
     */
    timeEnd?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Annotation resource.
 */
export interface AnnotationArgs {
    /**
     * The ID of the dashboard on which to create the annotation. Deprecated: Use dashboardUid instead.
     *
     * @deprecated Use dashboardUid instead.
     */
    dashboardId?: pulumi.Input<number>;
    /**
     * The ID of the dashboard on which to create the annotation.
     */
    dashboardUid?: pulumi.Input<string>;
    /**
     * The Organization ID. If not set, the Org ID defined in the provider block will be used.
     */
    orgId?: pulumi.Input<string>;
    /**
     * The ID of the dashboard panel on which to create the annotation.
     */
    panelId?: pulumi.Input<number>;
    /**
     * The tags to associate with the annotation.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The text to associate with the annotation.
     */
    text: pulumi.Input<string>;
    /**
     * The RFC 3339-formatted time string indicating the annotation's time.
     */
    time?: pulumi.Input<string>;
    /**
     * The RFC 3339-formatted time string indicating the annotation's end time.
     */
    timeEnd?: pulumi.Input<string>;
}
