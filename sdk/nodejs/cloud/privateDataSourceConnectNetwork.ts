// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * * [Official documentation](https://grafana.com/docs/grafana-cloud/connect-externally-hosted/private-data-source-connect/)
 * * [API documentation](https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#create-an-access-policy)
 *
 * Required access policy scopes:
 *
 * * accesspolicies:read
 * * accesspolicies:write
 * * accesspolicies:delete
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as grafana from "@pulumiverse/grafana";
 *
 * const current = grafana.cloud.getStack({
 *     slug: "<your slug>",
 * });
 * const test = new grafana.cloud.PrivateDataSourceConnectNetwork("test", {
 *     region: "prod-us-east-0",
 *     name: "my-pdc",
 *     displayName: "My PDC",
 *     stackIdentifier: current.then(current => current.id),
 * });
 * const testPrivateDataSourceConnectNetworkToken = new grafana.cloud.PrivateDataSourceConnectNetworkToken("test", {
 *     pdcNetworkId: test.pdcNetworkId,
 *     region: test.region,
 *     name: "my-pdc-token",
 *     displayName: "My PDC Token",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import grafana:cloud/privateDataSourceConnectNetwork:PrivateDataSourceConnectNetwork name "{{ region }}:{{ policyId }}"
 * ```
 */
export class PrivateDataSourceConnectNetwork extends pulumi.CustomResource {
    /**
     * Get an existing PrivateDataSourceConnectNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivateDataSourceConnectNetworkState, opts?: pulumi.CustomResourceOptions): PrivateDataSourceConnectNetwork {
        return new PrivateDataSourceConnectNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'grafana:cloud/privateDataSourceConnectNetwork:PrivateDataSourceConnectNetwork';

    /**
     * Returns true if the given object is an instance of PrivateDataSourceConnectNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrivateDataSourceConnectNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivateDataSourceConnectNetwork.__pulumiType;
    }

    /**
     * Creation date of the private data source connect network.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * Display name of the PDC network. Defaults to the name.
     */
    declare public readonly displayName: pulumi.Output<string | undefined>;
    /**
     * Name of the PDC network.**Note:** The name must be lowercase and can contain hyphens or underscores. See full requirements here: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#request-body
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * ID of the private data source connect network.
     */
    declare public /*out*/ readonly pdcNetworkId: pulumi.Output<string>;
    /**
     * The region where your stack is deployed. Use the instances list API to get the region for your instance - use the regionSlug property: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-stacks
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The identifier of the stack.
     */
    declare public readonly stackIdentifier: pulumi.Output<string>;
    /**
     * Last update date of the private data source connect network.
     */
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;

    /**
     * Create a PrivateDataSourceConnectNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrivateDataSourceConnectNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrivateDataSourceConnectNetworkArgs | PrivateDataSourceConnectNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrivateDataSourceConnectNetworkState | undefined;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["name"] = state?.name;
            resourceInputs["pdcNetworkId"] = state?.pdcNetworkId;
            resourceInputs["region"] = state?.region;
            resourceInputs["stackIdentifier"] = state?.stackIdentifier;
            resourceInputs["updatedAt"] = state?.updatedAt;
        } else {
            const args = argsOrState as PrivateDataSourceConnectNetworkArgs | undefined;
            if (args?.region === undefined && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if (args?.stackIdentifier === undefined && !opts.urn) {
                throw new Error("Missing required property 'stackIdentifier'");
            }
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["stackIdentifier"] = args?.stackIdentifier;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["pdcNetworkId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrivateDataSourceConnectNetwork.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PrivateDataSourceConnectNetwork resources.
 */
export interface PrivateDataSourceConnectNetworkState {
    /**
     * Creation date of the private data source connect network.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Display name of the PDC network. Defaults to the name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Name of the PDC network.**Note:** The name must be lowercase and can contain hyphens or underscores. See full requirements here: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#request-body
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the private data source connect network.
     */
    pdcNetworkId?: pulumi.Input<string>;
    /**
     * The region where your stack is deployed. Use the instances list API to get the region for your instance - use the regionSlug property: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-stacks
     */
    region?: pulumi.Input<string>;
    /**
     * The identifier of the stack.
     */
    stackIdentifier?: pulumi.Input<string>;
    /**
     * Last update date of the private data source connect network.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PrivateDataSourceConnectNetwork resource.
 */
export interface PrivateDataSourceConnectNetworkArgs {
    /**
     * Display name of the PDC network. Defaults to the name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Name of the PDC network.**Note:** The name must be lowercase and can contain hyphens or underscores. See full requirements here: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#request-body
     */
    name?: pulumi.Input<string>;
    /**
     * The region where your stack is deployed. Use the instances list API to get the region for your instance - use the regionSlug property: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-stacks
     */
    region: pulumi.Input<string>;
    /**
     * The identifier of the stack.
     */
    stackIdentifier: pulumi.Input<string>;
}
