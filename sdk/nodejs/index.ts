// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { GetLibraryPanelsArgs, GetLibraryPanelsResult, GetLibraryPanelsOutputArgs } from "./getLibraryPanels";
export const getLibraryPanels: typeof import("./getLibraryPanels").getLibraryPanels = null as any;
export const getLibraryPanelsOutput: typeof import("./getLibraryPanels").getLibraryPanelsOutput = null as any;
utilities.lazyLoad(exports, ["getLibraryPanels","getLibraryPanelsOutput"], () => require("./getLibraryPanels"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));


// Export sub-modules:
import * as alerting from "./alerting";
import * as cloud from "./cloud";
import * as cloudprovider from "./cloudprovider";
import * as config from "./config";
import * as connections from "./connections";
import * as enterprise from "./enterprise";
import * as fleetmanagement from "./fleetmanagement";
import * as machinelearning from "./machinelearning";
import * as oncall from "./oncall";
import * as oss from "./oss";
import * as slo from "./slo";
import * as syntheticmonitoring from "./syntheticmonitoring";
import * as types from "./types";

export {
    alerting,
    cloud,
    cloudprovider,
    config,
    connections,
    enterprise,
    fleetmanagement,
    machinelearning,
    oncall,
    oss,
    slo,
    syntheticmonitoring,
    types,
};
pulumi.runtime.registerResourcePackage("grafana", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:grafana") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
