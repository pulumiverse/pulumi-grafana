// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CustomModelRulesArgs, CustomModelRulesState } from "./customModelRules";
export type CustomModelRules = import("./customModelRules").CustomModelRules;
export const CustomModelRules: typeof import("./customModelRules").CustomModelRules = null as any;
utilities.lazyLoad(exports, ["CustomModelRules"], () => require("./customModelRules"));

export { LogConfigArgs, LogConfigState } from "./logConfig";
export type LogConfig = import("./logConfig").LogConfig;
export const LogConfig: typeof import("./logConfig").LogConfig = null as any;
utilities.lazyLoad(exports, ["LogConfig"], () => require("./logConfig"));

export { NotificationAlertsConfigArgs, NotificationAlertsConfigState } from "./notificationAlertsConfig";
export type NotificationAlertsConfig = import("./notificationAlertsConfig").NotificationAlertsConfig;
export const NotificationAlertsConfig: typeof import("./notificationAlertsConfig").NotificationAlertsConfig = null as any;
utilities.lazyLoad(exports, ["NotificationAlertsConfig"], () => require("./notificationAlertsConfig"));

export { SuppressedAssertionsConfigArgs, SuppressedAssertionsConfigState } from "./suppressedAssertionsConfig";
export type SuppressedAssertionsConfig = import("./suppressedAssertionsConfig").SuppressedAssertionsConfig;
export const SuppressedAssertionsConfig: typeof import("./suppressedAssertionsConfig").SuppressedAssertionsConfig = null as any;
utilities.lazyLoad(exports, ["SuppressedAssertionsConfig"], () => require("./suppressedAssertionsConfig"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "grafana:assert/customModelRules:CustomModelRules":
                return new CustomModelRules(name, <any>undefined, { urn })
            case "grafana:assert/logConfig:LogConfig":
                return new LogConfig(name, <any>undefined, { urn })
            case "grafana:assert/notificationAlertsConfig:NotificationAlertsConfig":
                return new NotificationAlertsConfig(name, <any>undefined, { urn })
            case "grafana:assert/suppressedAssertionsConfig:SuppressedAssertionsConfig":
                return new SuppressedAssertionsConfig(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("grafana", "assert/customModelRules", _module)
pulumi.runtime.registerResourceModule("grafana", "assert/logConfig", _module)
pulumi.runtime.registerResourceModule("grafana", "assert/notificationAlertsConfig", _module)
pulumi.runtime.registerResourceModule("grafana", "assert/suppressedAssertionsConfig", _module)
