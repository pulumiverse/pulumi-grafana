// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Besides the public probes run by Grafana Labs, you can also install your
 * own private probes. These are only accessible to you and only write data to
 * your Grafana Cloud account. Private probes are instances of the open source
 * Grafana Synthetic Monitoring Agent.
 *
 * * [Official documentation](https://grafana.com/docs/grafana-cloud/testing/synthetic-monitoring/set-up/set-up-private-probes/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as grafana from "@pulumiverse/grafana";
 *
 * const main = new grafana.syntheticmonitoring.Probe("main", {
 *     name: "Mount Everest",
 *     latitude: 27.98606,
 *     longitude: 86.92262,
 *     region: "APAC",
 *     labels: {
 *         type: "mountain",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import grafana:syntheticMonitoring/probe:Probe name "{{ id }}"
 * ```
 *
 * ```sh
 * $ pulumi import grafana:syntheticMonitoring/probe:Probe name "{{ id }}:{{ authToken }}"
 * ```
 */
export class Probe extends pulumi.CustomResource {
    /**
     * Get an existing Probe resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProbeState, opts?: pulumi.CustomResourceOptions): Probe {
        return new Probe(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'grafana:syntheticMonitoring/probe:Probe';

    /**
     * Returns true if the given object is an instance of Probe.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Probe {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Probe.__pulumiType;
    }

    /**
     * The probe authentication token. Your probe must use this to authenticate with Grafana Cloud.
     */
    declare public /*out*/ readonly authToken: pulumi.Output<string>;
    /**
     * Disables browser checks for this probe. Defaults to `false`.
     */
    declare public readonly disableBrowserChecks: pulumi.Output<boolean | undefined>;
    /**
     * Disables scripted checks for this probe. Defaults to `false`.
     */
    declare public readonly disableScriptedChecks: pulumi.Output<boolean | undefined>;
    /**
     * Custom labels to be included with collected metrics and logs.
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Latitude coordinates.
     */
    declare public readonly latitude: pulumi.Output<number>;
    /**
     * Longitude coordinates.
     */
    declare public readonly longitude: pulumi.Output<number>;
    /**
     * Name of the probe.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Public probes are run by Grafana Labs and can be used by all users. Only Grafana Labs managed public probes will be set to `true`. Defaults to `false`.
     */
    declare public readonly public: pulumi.Output<boolean | undefined>;
    /**
     * Region of the probe.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The tenant ID of the probe.
     */
    declare public /*out*/ readonly tenantId: pulumi.Output<number>;

    /**
     * Create a Probe resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProbeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProbeArgs | ProbeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProbeState | undefined;
            resourceInputs["authToken"] = state?.authToken;
            resourceInputs["disableBrowserChecks"] = state?.disableBrowserChecks;
            resourceInputs["disableScriptedChecks"] = state?.disableScriptedChecks;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["latitude"] = state?.latitude;
            resourceInputs["longitude"] = state?.longitude;
            resourceInputs["name"] = state?.name;
            resourceInputs["public"] = state?.public;
            resourceInputs["region"] = state?.region;
            resourceInputs["tenantId"] = state?.tenantId;
        } else {
            const args = argsOrState as ProbeArgs | undefined;
            if (args?.latitude === undefined && !opts.urn) {
                throw new Error("Missing required property 'latitude'");
            }
            if (args?.longitude === undefined && !opts.urn) {
                throw new Error("Missing required property 'longitude'");
            }
            if (args?.region === undefined && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            resourceInputs["disableBrowserChecks"] = args?.disableBrowserChecks;
            resourceInputs["disableScriptedChecks"] = args?.disableScriptedChecks;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["latitude"] = args?.latitude;
            resourceInputs["longitude"] = args?.longitude;
            resourceInputs["name"] = args?.name;
            resourceInputs["public"] = args?.public;
            resourceInputs["region"] = args?.region;
            resourceInputs["authToken"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["authToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Probe.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Probe resources.
 */
export interface ProbeState {
    /**
     * The probe authentication token. Your probe must use this to authenticate with Grafana Cloud.
     */
    authToken?: pulumi.Input<string>;
    /**
     * Disables browser checks for this probe. Defaults to `false`.
     */
    disableBrowserChecks?: pulumi.Input<boolean>;
    /**
     * Disables scripted checks for this probe. Defaults to `false`.
     */
    disableScriptedChecks?: pulumi.Input<boolean>;
    /**
     * Custom labels to be included with collected metrics and logs.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Latitude coordinates.
     */
    latitude?: pulumi.Input<number>;
    /**
     * Longitude coordinates.
     */
    longitude?: pulumi.Input<number>;
    /**
     * Name of the probe.
     */
    name?: pulumi.Input<string>;
    /**
     * Public probes are run by Grafana Labs and can be used by all users. Only Grafana Labs managed public probes will be set to `true`. Defaults to `false`.
     */
    public?: pulumi.Input<boolean>;
    /**
     * Region of the probe.
     */
    region?: pulumi.Input<string>;
    /**
     * The tenant ID of the probe.
     */
    tenantId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Probe resource.
 */
export interface ProbeArgs {
    /**
     * Disables browser checks for this probe. Defaults to `false`.
     */
    disableBrowserChecks?: pulumi.Input<boolean>;
    /**
     * Disables scripted checks for this probe. Defaults to `false`.
     */
    disableScriptedChecks?: pulumi.Input<boolean>;
    /**
     * Custom labels to be included with collected metrics and logs.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Latitude coordinates.
     */
    latitude: pulumi.Input<number>;
    /**
     * Longitude coordinates.
     */
    longitude: pulumi.Input<number>;
    /**
     * Name of the probe.
     */
    name?: pulumi.Input<string>;
    /**
     * Public probes are run by Grafana Labs and can be used by all users. Only Grafana Labs managed public probes will be set to `true`. Defaults to `false`.
     */
    public?: pulumi.Input<boolean>;
    /**
     * Region of the probe.
     */
    region: pulumi.Input<string>;
}
