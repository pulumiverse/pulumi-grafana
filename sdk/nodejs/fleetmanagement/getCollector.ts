// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Represents a Grafana Fleet Management collector.
 *
 * * [Official documentation](https://grafana.com/docs/grafana-cloud/send-data/fleet-management/)
 * * [API documentation](https://grafana.com/docs/grafana-cloud/send-data/fleet-management/api-reference/collector-api/)
 *
 * Required access policy scopes:
 *
 * * fleet-management:read
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as grafana from "@pulumiverse/grafana";
 *
 * const test = grafana.fleetManagement.getCollector({
 *     id: "my_collector",
 * });
 * ```
 */
export function getCollector(args: GetCollectorArgs, opts?: pulumi.InvokeOptions): Promise<GetCollectorResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("grafana:fleetManagement/getCollector:getCollector", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getCollector.
 */
export interface GetCollectorArgs {
    /**
     * ID of the collector
     */
    id: string;
}

/**
 * A collection of values returned by getCollector.
 */
export interface GetCollectorResult {
    /**
     * Whether remote configuration for the collector is enabled or not. If the collector is disabled, it will receive empty configurations from the Fleet Management service
     */
    readonly enabled: boolean;
    /**
     * ID of the collector
     */
    readonly id: string;
    /**
     * Local attributes for the collector
     */
    readonly localAttributes: {[key: string]: string};
    /**
     * Remote attributes for the collector
     */
    readonly remoteAttributes: {[key: string]: string};
}
/**
 * Represents a Grafana Fleet Management collector.
 *
 * * [Official documentation](https://grafana.com/docs/grafana-cloud/send-data/fleet-management/)
 * * [API documentation](https://grafana.com/docs/grafana-cloud/send-data/fleet-management/api-reference/collector-api/)
 *
 * Required access policy scopes:
 *
 * * fleet-management:read
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as grafana from "@pulumiverse/grafana";
 *
 * const test = grafana.fleetManagement.getCollector({
 *     id: "my_collector",
 * });
 * ```
 */
export function getCollectorOutput(args: GetCollectorOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCollectorResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("grafana:fleetManagement/getCollector:getCollector", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getCollector.
 */
export interface GetCollectorOutputArgs {
    /**
     * ID of the collector
     */
    id: pulumi.Input<string>;
}
