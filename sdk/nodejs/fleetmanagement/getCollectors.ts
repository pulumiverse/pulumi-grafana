// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Represents a list of Grafana Fleet Management collectors.
 *
 * * [Official documentation](https://grafana.com/docs/grafana-cloud/send-data/fleet-management/)
 * * [API documentation](https://grafana.com/docs/grafana-cloud/send-data/fleet-management/api-reference/collector-api/)
 *
 * Required access policy scopes:
 *
 * * fleet-management:read
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as grafana from "@pulumi/grafana";
 *
 * const test = grafana.fleetManagement.getCollectors({});
 * ```
 */
export function getCollectors(opts?: pulumi.InvokeOptions): Promise<GetCollectorsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("grafana:fleetManagement/getCollectors:getCollectors", {
    }, opts);
}

/**
 * A collection of values returned by getCollectors.
 */
export interface GetCollectorsResult {
    /**
     * List of collectors
     */
    readonly collectors: outputs.fleetManagement.GetCollectorsCollector[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
/**
 * Represents a list of Grafana Fleet Management collectors.
 *
 * * [Official documentation](https://grafana.com/docs/grafana-cloud/send-data/fleet-management/)
 * * [API documentation](https://grafana.com/docs/grafana-cloud/send-data/fleet-management/api-reference/collector-api/)
 *
 * Required access policy scopes:
 *
 * * fleet-management:read
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as grafana from "@pulumi/grafana";
 *
 * const test = grafana.fleetManagement.getCollectors({});
 * ```
 */
export function getCollectorsOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCollectorsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("grafana:fleetManagement/getCollectors:getCollectors", {
    }, opts);
}
