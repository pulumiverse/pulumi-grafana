// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import grafana:cloudProvider/azureCredential:AzureCredential name "{{ stack_id }}:{{ resource_id }}"
 * ```
 */
export class AzureCredential extends pulumi.CustomResource {
    /**
     * Get an existing AzureCredential resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureCredentialState, opts?: pulumi.CustomResourceOptions): AzureCredential {
        return new AzureCredential(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'grafana:cloudProvider/azureCredential:AzureCredential';

    /**
     * Returns true if the given object is an instance of AzureCredential.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureCredential {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureCredential.__pulumiType;
    }

    /**
     * The list of auto discovery configurations.
     */
    public readonly autoDiscoveryConfigurations!: pulumi.Output<outputs.cloudProvider.AzureCredentialAutoDiscoveryConfiguration[] | undefined>;
    /**
     * The client ID of the Azure Credential.
     */
    public readonly clientId!: pulumi.Output<string>;
    /**
     * The client secret of the Azure Credential.
     */
    public readonly clientSecret!: pulumi.Output<string>;
    /**
     * The name of the Azure Credential.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The list of tag filters to apply to resources.
     */
    public readonly resourceDiscoveryTagFilters!: pulumi.Output<outputs.cloudProvider.AzureCredentialResourceDiscoveryTagFilter[] | undefined>;
    /**
     * The ID given by the Grafana Cloud Provider API to this Azure Credential resource.
     */
    public /*out*/ readonly resourceId!: pulumi.Output<string>;
    /**
     * The list of resource tags to add to metrics.
     */
    public readonly resourceTagsToAddToMetrics!: pulumi.Output<string[] | undefined>;
    public readonly stackId!: pulumi.Output<string>;
    /**
     * The tenant ID of the Azure Credential.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a AzureCredential resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureCredentialArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureCredentialArgs | AzureCredentialState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureCredentialState | undefined;
            resourceInputs["autoDiscoveryConfigurations"] = state ? state.autoDiscoveryConfigurations : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceDiscoveryTagFilters"] = state ? state.resourceDiscoveryTagFilters : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["resourceTagsToAddToMetrics"] = state ? state.resourceTagsToAddToMetrics : undefined;
            resourceInputs["stackId"] = state ? state.stackId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as AzureCredentialArgs | undefined;
            if ((!args || args.clientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if ((!args || args.clientSecret === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientSecret'");
            }
            if ((!args || args.stackId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stackId'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["autoDiscoveryConfigurations"] = args ? args.autoDiscoveryConfigurations : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientSecret"] = args?.clientSecret ? pulumi.secret(args.clientSecret) : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceDiscoveryTagFilters"] = args ? args.resourceDiscoveryTagFilters : undefined;
            resourceInputs["resourceTagsToAddToMetrics"] = args ? args.resourceTagsToAddToMetrics : undefined;
            resourceInputs["stackId"] = args ? args.stackId : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["resourceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "grafana:cloud/providerAzureCredential:ProviderAzureCredential" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        const secretOpts = { additionalSecretOutputs: ["clientSecret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AzureCredential.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzureCredential resources.
 */
export interface AzureCredentialState {
    /**
     * The list of auto discovery configurations.
     */
    autoDiscoveryConfigurations?: pulumi.Input<pulumi.Input<inputs.cloudProvider.AzureCredentialAutoDiscoveryConfiguration>[]>;
    /**
     * The client ID of the Azure Credential.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The client secret of the Azure Credential.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The name of the Azure Credential.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of tag filters to apply to resources.
     */
    resourceDiscoveryTagFilters?: pulumi.Input<pulumi.Input<inputs.cloudProvider.AzureCredentialResourceDiscoveryTagFilter>[]>;
    /**
     * The ID given by the Grafana Cloud Provider API to this Azure Credential resource.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The list of resource tags to add to metrics.
     */
    resourceTagsToAddToMetrics?: pulumi.Input<pulumi.Input<string>[]>;
    stackId?: pulumi.Input<string>;
    /**
     * The tenant ID of the Azure Credential.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AzureCredential resource.
 */
export interface AzureCredentialArgs {
    /**
     * The list of auto discovery configurations.
     */
    autoDiscoveryConfigurations?: pulumi.Input<pulumi.Input<inputs.cloudProvider.AzureCredentialAutoDiscoveryConfiguration>[]>;
    /**
     * The client ID of the Azure Credential.
     */
    clientId: pulumi.Input<string>;
    /**
     * The client secret of the Azure Credential.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * The name of the Azure Credential.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of tag filters to apply to resources.
     */
    resourceDiscoveryTagFilters?: pulumi.Input<pulumi.Input<inputs.cloudProvider.AzureCredentialResourceDiscoveryTagFilter>[]>;
    /**
     * The list of resource tags to add to metrics.
     */
    resourceTagsToAddToMetrics?: pulumi.Input<pulumi.Input<string>[]>;
    stackId: pulumi.Input<string>;
    /**
     * The tenant ID of the Azure Credential.
     */
    tenantId: pulumi.Input<string>;
}
