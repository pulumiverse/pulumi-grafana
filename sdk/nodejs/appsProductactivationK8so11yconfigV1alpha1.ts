// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages Grafana Kubernetes Observability configurations using the Grafana APIs.
 *
 * This resource allows you to enable or disable Kubernetes observability features.
 *
 * **Note**: This is a singleton resource. The UID is automatically set to "global" and there can only be one per namespace.
 *
 * ## Import
 *
 * #!/bin/bash
 *
 * Import an existing Kubernetes observability config by its UID
 *
 * ```sh
 * $ pulumi import grafana:index/appsProductactivationK8so11yconfigV1alpha1:AppsProductactivationK8so11yconfigV1alpha1 example my-k8s-o11y-config
 * ```
 */
export class AppsProductactivationK8so11yconfigV1alpha1 extends pulumi.CustomResource {
    /**
     * Get an existing AppsProductactivationK8so11yconfigV1alpha1 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppsProductactivationK8so11yconfigV1alpha1State, opts?: pulumi.CustomResourceOptions): AppsProductactivationK8so11yconfigV1alpha1 {
        return new AppsProductactivationK8so11yconfigV1alpha1(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'grafana:index/appsProductactivationK8so11yconfigV1alpha1:AppsProductactivationK8so11yconfigV1alpha1';

    /**
     * Returns true if the given object is an instance of AppsProductactivationK8so11yconfigV1alpha1.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppsProductactivationK8so11yconfigV1alpha1 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppsProductactivationK8so11yconfigV1alpha1.__pulumiType;
    }

    /**
     * The metadata of the resource.
     */
    declare public readonly metadata: pulumi.Output<outputs.AppsProductactivationK8so11yconfigV1alpha1Metadata | undefined>;
    /**
     * Options for applying the resource.
     */
    declare public readonly options: pulumi.Output<outputs.AppsProductactivationK8so11yconfigV1alpha1Options | undefined>;
    /**
     * The spec of the resource.
     */
    declare public readonly spec: pulumi.Output<outputs.AppsProductactivationK8so11yconfigV1alpha1Spec | undefined>;

    /**
     * Create a AppsProductactivationK8so11yconfigV1alpha1 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppsProductactivationK8so11yconfigV1alpha1Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppsProductactivationK8so11yconfigV1alpha1Args | AppsProductactivationK8so11yconfigV1alpha1State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppsProductactivationK8so11yconfigV1alpha1State | undefined;
            resourceInputs["metadata"] = state?.metadata;
            resourceInputs["options"] = state?.options;
            resourceInputs["spec"] = state?.spec;
        } else {
            const args = argsOrState as AppsProductactivationK8so11yconfigV1alpha1Args | undefined;
            resourceInputs["metadata"] = args?.metadata;
            resourceInputs["options"] = args?.options;
            resourceInputs["spec"] = args?.spec;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppsProductactivationK8so11yconfigV1alpha1.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppsProductactivationK8so11yconfigV1alpha1 resources.
 */
export interface AppsProductactivationK8so11yconfigV1alpha1State {
    /**
     * The metadata of the resource.
     */
    metadata?: pulumi.Input<inputs.AppsProductactivationK8so11yconfigV1alpha1Metadata>;
    /**
     * Options for applying the resource.
     */
    options?: pulumi.Input<inputs.AppsProductactivationK8so11yconfigV1alpha1Options>;
    /**
     * The spec of the resource.
     */
    spec?: pulumi.Input<inputs.AppsProductactivationK8so11yconfigV1alpha1Spec>;
}

/**
 * The set of arguments for constructing a AppsProductactivationK8so11yconfigV1alpha1 resource.
 */
export interface AppsProductactivationK8so11yconfigV1alpha1Args {
    /**
     * The metadata of the resource.
     */
    metadata?: pulumi.Input<inputs.AppsProductactivationK8so11yconfigV1alpha1Metadata>;
    /**
     * Options for applying the resource.
     */
    options?: pulumi.Input<inputs.AppsProductactivationK8so11yconfigV1alpha1Options>;
    /**
     * The spec of the resource.
     */
    spec?: pulumi.Input<inputs.AppsProductactivationK8so11yconfigV1alpha1Spec>;
}
