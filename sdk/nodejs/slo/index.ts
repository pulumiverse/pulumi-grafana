// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetSlosResult } from "./getSlos";
export const getSlos: typeof import("./getSlos").getSlos = null as any;
export const getSlosOutput: typeof import("./getSlos").getSlosOutput = null as any;
utilities.lazyLoad(exports, ["getSlos","getSlosOutput"], () => require("./getSlos"));

export { SLOArgs, SLOState } from "./slo";
export type SLO = import("./slo").SLO;
export const SLO: typeof import("./slo").SLO = null as any;
utilities.lazyLoad(exports, ["SLO"], () => require("./slo"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "grafana:slo/sLO:SLO":
                return new SLO(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("grafana", "slo/sLO", _module)
