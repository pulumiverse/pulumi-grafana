// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves allowed private load zones for a k6 project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as grafana from "@pulumiverse/grafana";
 *
 * const testProjectAllowedLoadZones = new grafana.k6.Project("test_project_allowed_load_zones", {name: "Terraform Project Test Allowed Load Zones"});
 * const fromProjectId = grafana.k6.getProjectAllowedLoadZonesOutput({
 *     projectId: testProjectAllowedLoadZones.id,
 * });
 * ```
 */
export function getProjectAllowedLoadZones(args: GetProjectAllowedLoadZonesArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectAllowedLoadZonesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("grafana:k6/getProjectAllowedLoadZones:getProjectAllowedLoadZones", {
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectAllowedLoadZones.
 */
export interface GetProjectAllowedLoadZonesArgs {
    /**
     * The identifier of the project to retrieve private allowed load zones for.
     */
    projectId: string;
}

/**
 * A collection of values returned by getProjectAllowedLoadZones.
 */
export interface GetProjectAllowedLoadZonesResult {
    /**
     * List of allowed private k6 load zone IDs for this project.
     */
    readonly allowedLoadZones: string[];
    /**
     * The identifier of the project. This is set to the same as the project_id.
     */
    readonly id: string;
    /**
     * The identifier of the project to retrieve private allowed load zones for.
     */
    readonly projectId: string;
}
/**
 * Retrieves allowed private load zones for a k6 project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as grafana from "@pulumiverse/grafana";
 *
 * const testProjectAllowedLoadZones = new grafana.k6.Project("test_project_allowed_load_zones", {name: "Terraform Project Test Allowed Load Zones"});
 * const fromProjectId = grafana.k6.getProjectAllowedLoadZonesOutput({
 *     projectId: testProjectAllowedLoadZones.id,
 * });
 * ```
 */
export function getProjectAllowedLoadZonesOutput(args: GetProjectAllowedLoadZonesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetProjectAllowedLoadZonesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("grafana:k6/getProjectAllowedLoadZones:getProjectAllowedLoadZones", {
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectAllowedLoadZones.
 */
export interface GetProjectAllowedLoadZonesOutputArgs {
    /**
     * The identifier of the project to retrieve private allowed load zones for.
     */
    projectId: pulumi.Input<string>;
}
