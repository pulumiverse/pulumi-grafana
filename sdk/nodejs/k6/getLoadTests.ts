// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Retrieves all k6 load tests that belong to a project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as grafana from "@pulumiverse/grafana";
 *
 * const loadTestProject = new grafana.k6.Project("load_test_project", {name: "Terraform Load Test Project"});
 * const testLoadTest = new grafana.k6.LoadTest("test_load_test", {
 *     projectId: loadTestProject.id,
 *     name: "Terraform Test Load Test",
 *     script: `export default function() {
 *   console.log('Hello from k6!');
 * }
 * `,
 * }, {
 *     dependsOn: [loadTestProject],
 * });
 * const testLoadTest2 = new grafana.k6.LoadTest("test_load_test_2", {
 *     projectId: loadTestProject.id,
 *     name: "Terraform Test Load Test (2)",
 *     script: `export default function() {
 *   console.log('Hello from k6!');
 * }
 * `,
 * }, {
 *     dependsOn: [testLoadTest],
 * });
 * const fromProjectId = loadTestProject.id.apply(id => grafana.k6.getLoadTestsOutput({
 *     projectId: id,
 * }));
 * const filterByName = loadTestProject.id.apply(id => grafana.k6.getLoadTestsOutput({
 *     name: "Terraform Test Load Test (2)",
 *     projectId: id,
 * }));
 * ```
 */
export function getLoadTests(args: GetLoadTestsArgs, opts?: pulumi.InvokeOptions): Promise<GetLoadTestsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("grafana:k6/getLoadTests:getLoadTests", {
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLoadTests.
 */
export interface GetLoadTestsArgs {
    /**
     * Human-friendly identifier of the load test.
     */
    name?: string;
    /**
     * The identifier of the project the load tests belong to.
     */
    projectId: number;
}

/**
 * A collection of values returned by getLoadTests.
 */
export interface GetLoadTestsResult {
    /**
     * The identifier of the project the load tests belong to. This is set to the same as the project_id.
     */
    readonly id: number;
    readonly loadTests: outputs.k6.GetLoadTestsLoadTest[];
    /**
     * Human-friendly identifier of the load test.
     */
    readonly name?: string;
    /**
     * The identifier of the project the load tests belong to.
     */
    readonly projectId: number;
}
/**
 * Retrieves all k6 load tests that belong to a project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as grafana from "@pulumiverse/grafana";
 *
 * const loadTestProject = new grafana.k6.Project("load_test_project", {name: "Terraform Load Test Project"});
 * const testLoadTest = new grafana.k6.LoadTest("test_load_test", {
 *     projectId: loadTestProject.id,
 *     name: "Terraform Test Load Test",
 *     script: `export default function() {
 *   console.log('Hello from k6!');
 * }
 * `,
 * }, {
 *     dependsOn: [loadTestProject],
 * });
 * const testLoadTest2 = new grafana.k6.LoadTest("test_load_test_2", {
 *     projectId: loadTestProject.id,
 *     name: "Terraform Test Load Test (2)",
 *     script: `export default function() {
 *   console.log('Hello from k6!');
 * }
 * `,
 * }, {
 *     dependsOn: [testLoadTest],
 * });
 * const fromProjectId = loadTestProject.id.apply(id => grafana.k6.getLoadTestsOutput({
 *     projectId: id,
 * }));
 * const filterByName = loadTestProject.id.apply(id => grafana.k6.getLoadTestsOutput({
 *     name: "Terraform Test Load Test (2)",
 *     projectId: id,
 * }));
 * ```
 */
export function getLoadTestsOutput(args: GetLoadTestsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLoadTestsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("grafana:k6/getLoadTests:getLoadTests", {
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLoadTests.
 */
export interface GetLoadTestsOutputArgs {
    /**
     * Human-friendly identifier of the load test.
     */
    name?: pulumi.Input<string>;
    /**
     * The identifier of the project the load tests belong to.
     */
    projectId: pulumi.Input<number>;
}
