// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a k6 load test.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as grafana from "@pulumiverse/grafana";
 *
 * const loadTestProject = new grafana.k6.Project("load_test_project", {name: "Terraform Load Test Project"});
 * const testLoadTest = new grafana.k6.LoadTest("test_load_test", {
 *     projectId: loadTestProject.id,
 *     name: "Terraform Test Load Test",
 *     script: `export default function() {
 *   console.log('Hello from k6!');
 * }
 * `,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import grafana:k6/loadTest:LoadTest name "{{ id }}"
 * ```
 */
export class LoadTest extends pulumi.CustomResource {
    /**
     * Get an existing LoadTest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadTestState, opts?: pulumi.CustomResourceOptions): LoadTest {
        return new LoadTest(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'grafana:k6/loadTest:LoadTest';

    /**
     * Returns true if the given object is an instance of LoadTest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoadTest {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoadTest.__pulumiType;
    }

    /**
     * Identifier of a baseline test run used for results comparison.
     */
    public readonly baselineTestRunId!: pulumi.Output<number | undefined>;
    /**
     * The date when the load test was created.
     */
    public /*out*/ readonly created!: pulumi.Output<string>;
    /**
     * Human-friendly identifier of the load test.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The identifier of the project this load test belongs to.
     */
    public readonly projectId!: pulumi.Output<number>;
    /**
     * The k6 test script content. Can be provided inline or via the `file()` function.
     */
    public readonly script!: pulumi.Output<string>;
    /**
     * The date when the load test was last updated.
     */
    public /*out*/ readonly updated!: pulumi.Output<string>;

    /**
     * Create a LoadTest resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadTestArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoadTestArgs | LoadTestState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LoadTestState | undefined;
            resourceInputs["baselineTestRunId"] = state ? state.baselineTestRunId : undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["script"] = state ? state.script : undefined;
            resourceInputs["updated"] = state ? state.updated : undefined;
        } else {
            const args = argsOrState as LoadTestArgs | undefined;
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.script === undefined) && !opts.urn) {
                throw new Error("Missing required property 'script'");
            }
            resourceInputs["baselineTestRunId"] = args ? args.baselineTestRunId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["script"] = args ? args.script : undefined;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["updated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LoadTest.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LoadTest resources.
 */
export interface LoadTestState {
    /**
     * Identifier of a baseline test run used for results comparison.
     */
    baselineTestRunId?: pulumi.Input<number>;
    /**
     * The date when the load test was created.
     */
    created?: pulumi.Input<string>;
    /**
     * Human-friendly identifier of the load test.
     */
    name?: pulumi.Input<string>;
    /**
     * The identifier of the project this load test belongs to.
     */
    projectId?: pulumi.Input<number>;
    /**
     * The k6 test script content. Can be provided inline or via the `file()` function.
     */
    script?: pulumi.Input<string>;
    /**
     * The date when the load test was last updated.
     */
    updated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LoadTest resource.
 */
export interface LoadTestArgs {
    /**
     * Identifier of a baseline test run used for results comparison.
     */
    baselineTestRunId?: pulumi.Input<number>;
    /**
     * Human-friendly identifier of the load test.
     */
    name?: pulumi.Input<string>;
    /**
     * The identifier of the project this load test belongs to.
     */
    projectId: pulumi.Input<number>;
    /**
     * The k6 test script content. Can be provided inline or via the `file()` function.
     */
    script: pulumi.Input<string>;
}
