// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves a k6 project limits.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as grafana from "@pulumiverse/grafana";
 *
 * const testProjectLimits = new grafana.k6.Project("test_project_limits", {name: "Terraform Project Test Limits"});
 * const fromProjectId = grafana.k6.getProjectLimitsOutput({
 *     projectId: testProjectLimits.id,
 * });
 * ```
 */
export function getProjectLimits(args: GetProjectLimitsArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectLimitsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("grafana:k6/getProjectLimits:getProjectLimits", {
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectLimits.
 */
export interface GetProjectLimitsArgs {
    /**
     * The identifier of the project to get limits for.
     */
    projectId: string;
}

/**
 * A collection of values returned by getProjectLimits.
 */
export interface GetProjectLimitsResult {
    /**
     * Maximum duration of a test in seconds.
     */
    readonly durationMaxPerTest: number;
    /**
     * The identifier of the project limits. This is set to the same as the project_id.
     */
    readonly id: string;
    /**
     * The identifier of the project to get limits for.
     */
    readonly projectId: string;
    /**
     * Maximum number of concurrent browser virtual users (VUs) used in one test.
     */
    readonly vuBrowserMaxPerTest: number;
    /**
     * Maximum number of concurrent virtual users (VUs) used in one test.
     */
    readonly vuMaxPerTest: number;
    /**
     * Maximum amount of virtual user hours (VU/h) used per one calendar month.
     */
    readonly vuhMaxPerMonth: number;
}
/**
 * Retrieves a k6 project limits.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as grafana from "@pulumiverse/grafana";
 *
 * const testProjectLimits = new grafana.k6.Project("test_project_limits", {name: "Terraform Project Test Limits"});
 * const fromProjectId = grafana.k6.getProjectLimitsOutput({
 *     projectId: testProjectLimits.id,
 * });
 * ```
 */
export function getProjectLimitsOutput(args: GetProjectLimitsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetProjectLimitsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("grafana:k6/getProjectLimits:getProjectLimits", {
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectLimits.
 */
export interface GetProjectLimitsOutputArgs {
    /**
     * The identifier of the project to get limits for.
     */
    projectId: pulumi.Input<string>;
}
