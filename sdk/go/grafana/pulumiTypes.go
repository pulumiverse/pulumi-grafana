// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/internal"
)

var _ = internal.GetEnvOrDefault

type GetLibraryPanelsPanel struct {
	Description string `pulumi:"description"`
	FolderUid   string `pulumi:"folderUid"`
	ModelJson   string `pulumi:"modelJson"`
	Name        string `pulumi:"name"`
	Uid         string `pulumi:"uid"`
}

// GetLibraryPanelsPanelInput is an input type that accepts GetLibraryPanelsPanelArgs and GetLibraryPanelsPanelOutput values.
// You can construct a concrete instance of `GetLibraryPanelsPanelInput` via:
//
//	GetLibraryPanelsPanelArgs{...}
type GetLibraryPanelsPanelInput interface {
	pulumi.Input

	ToGetLibraryPanelsPanelOutput() GetLibraryPanelsPanelOutput
	ToGetLibraryPanelsPanelOutputWithContext(context.Context) GetLibraryPanelsPanelOutput
}

type GetLibraryPanelsPanelArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	FolderUid   pulumi.StringInput `pulumi:"folderUid"`
	ModelJson   pulumi.StringInput `pulumi:"modelJson"`
	Name        pulumi.StringInput `pulumi:"name"`
	Uid         pulumi.StringInput `pulumi:"uid"`
}

func (GetLibraryPanelsPanelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLibraryPanelsPanel)(nil)).Elem()
}

func (i GetLibraryPanelsPanelArgs) ToGetLibraryPanelsPanelOutput() GetLibraryPanelsPanelOutput {
	return i.ToGetLibraryPanelsPanelOutputWithContext(context.Background())
}

func (i GetLibraryPanelsPanelArgs) ToGetLibraryPanelsPanelOutputWithContext(ctx context.Context) GetLibraryPanelsPanelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLibraryPanelsPanelOutput)
}

// GetLibraryPanelsPanelArrayInput is an input type that accepts GetLibraryPanelsPanelArray and GetLibraryPanelsPanelArrayOutput values.
// You can construct a concrete instance of `GetLibraryPanelsPanelArrayInput` via:
//
//	GetLibraryPanelsPanelArray{ GetLibraryPanelsPanelArgs{...} }
type GetLibraryPanelsPanelArrayInput interface {
	pulumi.Input

	ToGetLibraryPanelsPanelArrayOutput() GetLibraryPanelsPanelArrayOutput
	ToGetLibraryPanelsPanelArrayOutputWithContext(context.Context) GetLibraryPanelsPanelArrayOutput
}

type GetLibraryPanelsPanelArray []GetLibraryPanelsPanelInput

func (GetLibraryPanelsPanelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLibraryPanelsPanel)(nil)).Elem()
}

func (i GetLibraryPanelsPanelArray) ToGetLibraryPanelsPanelArrayOutput() GetLibraryPanelsPanelArrayOutput {
	return i.ToGetLibraryPanelsPanelArrayOutputWithContext(context.Background())
}

func (i GetLibraryPanelsPanelArray) ToGetLibraryPanelsPanelArrayOutputWithContext(ctx context.Context) GetLibraryPanelsPanelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLibraryPanelsPanelArrayOutput)
}

type GetLibraryPanelsPanelOutput struct{ *pulumi.OutputState }

func (GetLibraryPanelsPanelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLibraryPanelsPanel)(nil)).Elem()
}

func (o GetLibraryPanelsPanelOutput) ToGetLibraryPanelsPanelOutput() GetLibraryPanelsPanelOutput {
	return o
}

func (o GetLibraryPanelsPanelOutput) ToGetLibraryPanelsPanelOutputWithContext(ctx context.Context) GetLibraryPanelsPanelOutput {
	return o
}

func (o GetLibraryPanelsPanelOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryPanelsPanel) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetLibraryPanelsPanelOutput) FolderUid() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryPanelsPanel) string { return v.FolderUid }).(pulumi.StringOutput)
}

func (o GetLibraryPanelsPanelOutput) ModelJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryPanelsPanel) string { return v.ModelJson }).(pulumi.StringOutput)
}

func (o GetLibraryPanelsPanelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryPanelsPanel) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLibraryPanelsPanelOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryPanelsPanel) string { return v.Uid }).(pulumi.StringOutput)
}

type GetLibraryPanelsPanelArrayOutput struct{ *pulumi.OutputState }

func (GetLibraryPanelsPanelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLibraryPanelsPanel)(nil)).Elem()
}

func (o GetLibraryPanelsPanelArrayOutput) ToGetLibraryPanelsPanelArrayOutput() GetLibraryPanelsPanelArrayOutput {
	return o
}

func (o GetLibraryPanelsPanelArrayOutput) ToGetLibraryPanelsPanelArrayOutputWithContext(ctx context.Context) GetLibraryPanelsPanelArrayOutput {
	return o
}

func (o GetLibraryPanelsPanelArrayOutput) Index(i pulumi.IntInput) GetLibraryPanelsPanelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLibraryPanelsPanel {
		return vs[0].([]GetLibraryPanelsPanel)[vs[1].(int)]
	}).(GetLibraryPanelsPanelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetLibraryPanelsPanelInput)(nil)).Elem(), GetLibraryPanelsPanelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLibraryPanelsPanelArrayInput)(nil)).Elem(), GetLibraryPanelsPanelArray{})
	pulumi.RegisterOutputType(GetLibraryPanelsPanelOutput{})
	pulumi.RegisterOutputType(GetLibraryPanelsPanelArrayOutput{})
}
