// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/internal"
)

// Manages service account tokens of a Grafana Cloud stack using the Cloud API
// This can be used to bootstrap a management service account token for a new stack
//
// * [Official documentation](https://grafana.com/docs/grafana/latest/administration/service-accounts/)
// * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api)
//
// Required access policy scopes:
//
// * stack-service-accounts:write
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/cloud"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cloudSa, err := cloud.NewStackServiceAccount(ctx, "cloud_sa", &cloud.StackServiceAccountArgs{
//				StackSlug:  pulumi.String("<your stack slug>"),
//				Name:       pulumi.String("cloud service account"),
//				Role:       pulumi.String("Admin"),
//				IsDisabled: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			foo, err := cloud.NewStackServiceAccountToken(ctx, "foo", &cloud.StackServiceAccountTokenArgs{
//				Name:             pulumi.String("key_foo"),
//				ServiceAccountId: cloudSa.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("serviceAccountTokenFooKey", foo.Key)
//			return nil
//		})
//	}
//
// ```
type StackServiceAccountToken struct {
	pulumi.CustomResourceState

	Expiration       pulumi.StringOutput `pulumi:"expiration"`
	HasExpired       pulumi.BoolOutput   `pulumi:"hasExpired"`
	Key              pulumi.StringOutput `pulumi:"key"`
	Name             pulumi.StringOutput `pulumi:"name"`
	SecondsToLive    pulumi.IntPtrOutput `pulumi:"secondsToLive"`
	ServiceAccountId pulumi.StringOutput `pulumi:"serviceAccountId"`
	StackSlug        pulumi.StringOutput `pulumi:"stackSlug"`
}

// NewStackServiceAccountToken registers a new resource with the given unique name, arguments, and options.
func NewStackServiceAccountToken(ctx *pulumi.Context,
	name string, args *StackServiceAccountTokenArgs, opts ...pulumi.ResourceOption) (*StackServiceAccountToken, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountId'")
	}
	if args.StackSlug == nil {
		return nil, errors.New("invalid value for required argument 'StackSlug'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"key",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StackServiceAccountToken
	err := ctx.RegisterResource("grafana:cloud/stackServiceAccountToken:StackServiceAccountToken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStackServiceAccountToken gets an existing StackServiceAccountToken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStackServiceAccountToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StackServiceAccountTokenState, opts ...pulumi.ResourceOption) (*StackServiceAccountToken, error) {
	var resource StackServiceAccountToken
	err := ctx.ReadResource("grafana:cloud/stackServiceAccountToken:StackServiceAccountToken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StackServiceAccountToken resources.
type stackServiceAccountTokenState struct {
	Expiration       *string `pulumi:"expiration"`
	HasExpired       *bool   `pulumi:"hasExpired"`
	Key              *string `pulumi:"key"`
	Name             *string `pulumi:"name"`
	SecondsToLive    *int    `pulumi:"secondsToLive"`
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	StackSlug        *string `pulumi:"stackSlug"`
}

type StackServiceAccountTokenState struct {
	Expiration       pulumi.StringPtrInput
	HasExpired       pulumi.BoolPtrInput
	Key              pulumi.StringPtrInput
	Name             pulumi.StringPtrInput
	SecondsToLive    pulumi.IntPtrInput
	ServiceAccountId pulumi.StringPtrInput
	StackSlug        pulumi.StringPtrInput
}

func (StackServiceAccountTokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*stackServiceAccountTokenState)(nil)).Elem()
}

type stackServiceAccountTokenArgs struct {
	Name             *string `pulumi:"name"`
	SecondsToLive    *int    `pulumi:"secondsToLive"`
	ServiceAccountId string  `pulumi:"serviceAccountId"`
	StackSlug        string  `pulumi:"stackSlug"`
}

// The set of arguments for constructing a StackServiceAccountToken resource.
type StackServiceAccountTokenArgs struct {
	Name             pulumi.StringPtrInput
	SecondsToLive    pulumi.IntPtrInput
	ServiceAccountId pulumi.StringInput
	StackSlug        pulumi.StringInput
}

func (StackServiceAccountTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stackServiceAccountTokenArgs)(nil)).Elem()
}

type StackServiceAccountTokenInput interface {
	pulumi.Input

	ToStackServiceAccountTokenOutput() StackServiceAccountTokenOutput
	ToStackServiceAccountTokenOutputWithContext(ctx context.Context) StackServiceAccountTokenOutput
}

func (*StackServiceAccountToken) ElementType() reflect.Type {
	return reflect.TypeOf((**StackServiceAccountToken)(nil)).Elem()
}

func (i *StackServiceAccountToken) ToStackServiceAccountTokenOutput() StackServiceAccountTokenOutput {
	return i.ToStackServiceAccountTokenOutputWithContext(context.Background())
}

func (i *StackServiceAccountToken) ToStackServiceAccountTokenOutputWithContext(ctx context.Context) StackServiceAccountTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackServiceAccountTokenOutput)
}

// StackServiceAccountTokenArrayInput is an input type that accepts StackServiceAccountTokenArray and StackServiceAccountTokenArrayOutput values.
// You can construct a concrete instance of `StackServiceAccountTokenArrayInput` via:
//
//	StackServiceAccountTokenArray{ StackServiceAccountTokenArgs{...} }
type StackServiceAccountTokenArrayInput interface {
	pulumi.Input

	ToStackServiceAccountTokenArrayOutput() StackServiceAccountTokenArrayOutput
	ToStackServiceAccountTokenArrayOutputWithContext(context.Context) StackServiceAccountTokenArrayOutput
}

type StackServiceAccountTokenArray []StackServiceAccountTokenInput

func (StackServiceAccountTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StackServiceAccountToken)(nil)).Elem()
}

func (i StackServiceAccountTokenArray) ToStackServiceAccountTokenArrayOutput() StackServiceAccountTokenArrayOutput {
	return i.ToStackServiceAccountTokenArrayOutputWithContext(context.Background())
}

func (i StackServiceAccountTokenArray) ToStackServiceAccountTokenArrayOutputWithContext(ctx context.Context) StackServiceAccountTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackServiceAccountTokenArrayOutput)
}

// StackServiceAccountTokenMapInput is an input type that accepts StackServiceAccountTokenMap and StackServiceAccountTokenMapOutput values.
// You can construct a concrete instance of `StackServiceAccountTokenMapInput` via:
//
//	StackServiceAccountTokenMap{ "key": StackServiceAccountTokenArgs{...} }
type StackServiceAccountTokenMapInput interface {
	pulumi.Input

	ToStackServiceAccountTokenMapOutput() StackServiceAccountTokenMapOutput
	ToStackServiceAccountTokenMapOutputWithContext(context.Context) StackServiceAccountTokenMapOutput
}

type StackServiceAccountTokenMap map[string]StackServiceAccountTokenInput

func (StackServiceAccountTokenMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StackServiceAccountToken)(nil)).Elem()
}

func (i StackServiceAccountTokenMap) ToStackServiceAccountTokenMapOutput() StackServiceAccountTokenMapOutput {
	return i.ToStackServiceAccountTokenMapOutputWithContext(context.Background())
}

func (i StackServiceAccountTokenMap) ToStackServiceAccountTokenMapOutputWithContext(ctx context.Context) StackServiceAccountTokenMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackServiceAccountTokenMapOutput)
}

type StackServiceAccountTokenOutput struct{ *pulumi.OutputState }

func (StackServiceAccountTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StackServiceAccountToken)(nil)).Elem()
}

func (o StackServiceAccountTokenOutput) ToStackServiceAccountTokenOutput() StackServiceAccountTokenOutput {
	return o
}

func (o StackServiceAccountTokenOutput) ToStackServiceAccountTokenOutputWithContext(ctx context.Context) StackServiceAccountTokenOutput {
	return o
}

func (o StackServiceAccountTokenOutput) Expiration() pulumi.StringOutput {
	return o.ApplyT(func(v *StackServiceAccountToken) pulumi.StringOutput { return v.Expiration }).(pulumi.StringOutput)
}

func (o StackServiceAccountTokenOutput) HasExpired() pulumi.BoolOutput {
	return o.ApplyT(func(v *StackServiceAccountToken) pulumi.BoolOutput { return v.HasExpired }).(pulumi.BoolOutput)
}

func (o StackServiceAccountTokenOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *StackServiceAccountToken) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

func (o StackServiceAccountTokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StackServiceAccountToken) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o StackServiceAccountTokenOutput) SecondsToLive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StackServiceAccountToken) pulumi.IntPtrOutput { return v.SecondsToLive }).(pulumi.IntPtrOutput)
}

func (o StackServiceAccountTokenOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *StackServiceAccountToken) pulumi.StringOutput { return v.ServiceAccountId }).(pulumi.StringOutput)
}

func (o StackServiceAccountTokenOutput) StackSlug() pulumi.StringOutput {
	return o.ApplyT(func(v *StackServiceAccountToken) pulumi.StringOutput { return v.StackSlug }).(pulumi.StringOutput)
}

type StackServiceAccountTokenArrayOutput struct{ *pulumi.OutputState }

func (StackServiceAccountTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StackServiceAccountToken)(nil)).Elem()
}

func (o StackServiceAccountTokenArrayOutput) ToStackServiceAccountTokenArrayOutput() StackServiceAccountTokenArrayOutput {
	return o
}

func (o StackServiceAccountTokenArrayOutput) ToStackServiceAccountTokenArrayOutputWithContext(ctx context.Context) StackServiceAccountTokenArrayOutput {
	return o
}

func (o StackServiceAccountTokenArrayOutput) Index(i pulumi.IntInput) StackServiceAccountTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StackServiceAccountToken {
		return vs[0].([]*StackServiceAccountToken)[vs[1].(int)]
	}).(StackServiceAccountTokenOutput)
}

type StackServiceAccountTokenMapOutput struct{ *pulumi.OutputState }

func (StackServiceAccountTokenMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StackServiceAccountToken)(nil)).Elem()
}

func (o StackServiceAccountTokenMapOutput) ToStackServiceAccountTokenMapOutput() StackServiceAccountTokenMapOutput {
	return o
}

func (o StackServiceAccountTokenMapOutput) ToStackServiceAccountTokenMapOutputWithContext(ctx context.Context) StackServiceAccountTokenMapOutput {
	return o
}

func (o StackServiceAccountTokenMapOutput) MapIndex(k pulumi.StringInput) StackServiceAccountTokenOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StackServiceAccountToken {
		return vs[0].(map[string]*StackServiceAccountToken)[vs[1].(string)]
	}).(StackServiceAccountTokenOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StackServiceAccountTokenInput)(nil)).Elem(), &StackServiceAccountToken{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackServiceAccountTokenArrayInput)(nil)).Elem(), StackServiceAccountTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackServiceAccountTokenMapInput)(nil)).Elem(), StackServiceAccountTokenMap{})
	pulumi.RegisterOutputType(StackServiceAccountTokenOutput{})
	pulumi.RegisterOutputType(StackServiceAccountTokenArrayOutput{})
	pulumi.RegisterOutputType(StackServiceAccountTokenMapOutput{})
}
