// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/internal"
)

var _ = internal.GetEnvOrDefault

type AccessPolicyCondition struct {
	// Conditions that apply to the access policy,such as IP Allow lists.
	AllowedSubnets []string `pulumi:"allowedSubnets"`
}

// AccessPolicyConditionInput is an input type that accepts AccessPolicyConditionArgs and AccessPolicyConditionOutput values.
// You can construct a concrete instance of `AccessPolicyConditionInput` via:
//
//	AccessPolicyConditionArgs{...}
type AccessPolicyConditionInput interface {
	pulumi.Input

	ToAccessPolicyConditionOutput() AccessPolicyConditionOutput
	ToAccessPolicyConditionOutputWithContext(context.Context) AccessPolicyConditionOutput
}

type AccessPolicyConditionArgs struct {
	// Conditions that apply to the access policy,such as IP Allow lists.
	AllowedSubnets pulumi.StringArrayInput `pulumi:"allowedSubnets"`
}

func (AccessPolicyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyCondition)(nil)).Elem()
}

func (i AccessPolicyConditionArgs) ToAccessPolicyConditionOutput() AccessPolicyConditionOutput {
	return i.ToAccessPolicyConditionOutputWithContext(context.Background())
}

func (i AccessPolicyConditionArgs) ToAccessPolicyConditionOutputWithContext(ctx context.Context) AccessPolicyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyConditionOutput)
}

// AccessPolicyConditionArrayInput is an input type that accepts AccessPolicyConditionArray and AccessPolicyConditionArrayOutput values.
// You can construct a concrete instance of `AccessPolicyConditionArrayInput` via:
//
//	AccessPolicyConditionArray{ AccessPolicyConditionArgs{...} }
type AccessPolicyConditionArrayInput interface {
	pulumi.Input

	ToAccessPolicyConditionArrayOutput() AccessPolicyConditionArrayOutput
	ToAccessPolicyConditionArrayOutputWithContext(context.Context) AccessPolicyConditionArrayOutput
}

type AccessPolicyConditionArray []AccessPolicyConditionInput

func (AccessPolicyConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyCondition)(nil)).Elem()
}

func (i AccessPolicyConditionArray) ToAccessPolicyConditionArrayOutput() AccessPolicyConditionArrayOutput {
	return i.ToAccessPolicyConditionArrayOutputWithContext(context.Background())
}

func (i AccessPolicyConditionArray) ToAccessPolicyConditionArrayOutputWithContext(ctx context.Context) AccessPolicyConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyConditionArrayOutput)
}

type AccessPolicyConditionOutput struct{ *pulumi.OutputState }

func (AccessPolicyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyCondition)(nil)).Elem()
}

func (o AccessPolicyConditionOutput) ToAccessPolicyConditionOutput() AccessPolicyConditionOutput {
	return o
}

func (o AccessPolicyConditionOutput) ToAccessPolicyConditionOutputWithContext(ctx context.Context) AccessPolicyConditionOutput {
	return o
}

// Conditions that apply to the access policy,such as IP Allow lists.
func (o AccessPolicyConditionOutput) AllowedSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyCondition) []string { return v.AllowedSubnets }).(pulumi.StringArrayOutput)
}

type AccessPolicyConditionArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyCondition)(nil)).Elem()
}

func (o AccessPolicyConditionArrayOutput) ToAccessPolicyConditionArrayOutput() AccessPolicyConditionArrayOutput {
	return o
}

func (o AccessPolicyConditionArrayOutput) ToAccessPolicyConditionArrayOutputWithContext(ctx context.Context) AccessPolicyConditionArrayOutput {
	return o
}

func (o AccessPolicyConditionArrayOutput) Index(i pulumi.IntInput) AccessPolicyConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyCondition {
		return vs[0].([]AccessPolicyCondition)[vs[1].(int)]
	}).(AccessPolicyConditionOutput)
}

type AccessPolicyRealm struct {
	// The identifier of the org or stack. For orgs, this is the slug, for stacks, this is the stack ID.
	Identifier    string                         `pulumi:"identifier"`
	LabelPolicies []AccessPolicyRealmLabelPolicy `pulumi:"labelPolicies"`
	// Whether a policy applies to a Cloud org or a specific stack. Should be one of `org` or `stack`.
	Type string `pulumi:"type"`
}

// AccessPolicyRealmInput is an input type that accepts AccessPolicyRealmArgs and AccessPolicyRealmOutput values.
// You can construct a concrete instance of `AccessPolicyRealmInput` via:
//
//	AccessPolicyRealmArgs{...}
type AccessPolicyRealmInput interface {
	pulumi.Input

	ToAccessPolicyRealmOutput() AccessPolicyRealmOutput
	ToAccessPolicyRealmOutputWithContext(context.Context) AccessPolicyRealmOutput
}

type AccessPolicyRealmArgs struct {
	// The identifier of the org or stack. For orgs, this is the slug, for stacks, this is the stack ID.
	Identifier    pulumi.StringInput                     `pulumi:"identifier"`
	LabelPolicies AccessPolicyRealmLabelPolicyArrayInput `pulumi:"labelPolicies"`
	// Whether a policy applies to a Cloud org or a specific stack. Should be one of `org` or `stack`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccessPolicyRealmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRealm)(nil)).Elem()
}

func (i AccessPolicyRealmArgs) ToAccessPolicyRealmOutput() AccessPolicyRealmOutput {
	return i.ToAccessPolicyRealmOutputWithContext(context.Background())
}

func (i AccessPolicyRealmArgs) ToAccessPolicyRealmOutputWithContext(ctx context.Context) AccessPolicyRealmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRealmOutput)
}

// AccessPolicyRealmArrayInput is an input type that accepts AccessPolicyRealmArray and AccessPolicyRealmArrayOutput values.
// You can construct a concrete instance of `AccessPolicyRealmArrayInput` via:
//
//	AccessPolicyRealmArray{ AccessPolicyRealmArgs{...} }
type AccessPolicyRealmArrayInput interface {
	pulumi.Input

	ToAccessPolicyRealmArrayOutput() AccessPolicyRealmArrayOutput
	ToAccessPolicyRealmArrayOutputWithContext(context.Context) AccessPolicyRealmArrayOutput
}

type AccessPolicyRealmArray []AccessPolicyRealmInput

func (AccessPolicyRealmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRealm)(nil)).Elem()
}

func (i AccessPolicyRealmArray) ToAccessPolicyRealmArrayOutput() AccessPolicyRealmArrayOutput {
	return i.ToAccessPolicyRealmArrayOutputWithContext(context.Background())
}

func (i AccessPolicyRealmArray) ToAccessPolicyRealmArrayOutputWithContext(ctx context.Context) AccessPolicyRealmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRealmArrayOutput)
}

type AccessPolicyRealmOutput struct{ *pulumi.OutputState }

func (AccessPolicyRealmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRealm)(nil)).Elem()
}

func (o AccessPolicyRealmOutput) ToAccessPolicyRealmOutput() AccessPolicyRealmOutput {
	return o
}

func (o AccessPolicyRealmOutput) ToAccessPolicyRealmOutputWithContext(ctx context.Context) AccessPolicyRealmOutput {
	return o
}

// The identifier of the org or stack. For orgs, this is the slug, for stacks, this is the stack ID.
func (o AccessPolicyRealmOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPolicyRealm) string { return v.Identifier }).(pulumi.StringOutput)
}

func (o AccessPolicyRealmOutput) LabelPolicies() AccessPolicyRealmLabelPolicyArrayOutput {
	return o.ApplyT(func(v AccessPolicyRealm) []AccessPolicyRealmLabelPolicy { return v.LabelPolicies }).(AccessPolicyRealmLabelPolicyArrayOutput)
}

// Whether a policy applies to a Cloud org or a specific stack. Should be one of `org` or `stack`.
func (o AccessPolicyRealmOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPolicyRealm) string { return v.Type }).(pulumi.StringOutput)
}

type AccessPolicyRealmArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyRealmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRealm)(nil)).Elem()
}

func (o AccessPolicyRealmArrayOutput) ToAccessPolicyRealmArrayOutput() AccessPolicyRealmArrayOutput {
	return o
}

func (o AccessPolicyRealmArrayOutput) ToAccessPolicyRealmArrayOutputWithContext(ctx context.Context) AccessPolicyRealmArrayOutput {
	return o
}

func (o AccessPolicyRealmArrayOutput) Index(i pulumi.IntInput) AccessPolicyRealmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyRealm {
		return vs[0].([]AccessPolicyRealm)[vs[1].(int)]
	}).(AccessPolicyRealmOutput)
}

type AccessPolicyRealmLabelPolicy struct {
	// The label selector to match in metrics or logs query. Should be in PromQL or LogQL format.
	Selector string `pulumi:"selector"`
}

// AccessPolicyRealmLabelPolicyInput is an input type that accepts AccessPolicyRealmLabelPolicyArgs and AccessPolicyRealmLabelPolicyOutput values.
// You can construct a concrete instance of `AccessPolicyRealmLabelPolicyInput` via:
//
//	AccessPolicyRealmLabelPolicyArgs{...}
type AccessPolicyRealmLabelPolicyInput interface {
	pulumi.Input

	ToAccessPolicyRealmLabelPolicyOutput() AccessPolicyRealmLabelPolicyOutput
	ToAccessPolicyRealmLabelPolicyOutputWithContext(context.Context) AccessPolicyRealmLabelPolicyOutput
}

type AccessPolicyRealmLabelPolicyArgs struct {
	// The label selector to match in metrics or logs query. Should be in PromQL or LogQL format.
	Selector pulumi.StringInput `pulumi:"selector"`
}

func (AccessPolicyRealmLabelPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRealmLabelPolicy)(nil)).Elem()
}

func (i AccessPolicyRealmLabelPolicyArgs) ToAccessPolicyRealmLabelPolicyOutput() AccessPolicyRealmLabelPolicyOutput {
	return i.ToAccessPolicyRealmLabelPolicyOutputWithContext(context.Background())
}

func (i AccessPolicyRealmLabelPolicyArgs) ToAccessPolicyRealmLabelPolicyOutputWithContext(ctx context.Context) AccessPolicyRealmLabelPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRealmLabelPolicyOutput)
}

// AccessPolicyRealmLabelPolicyArrayInput is an input type that accepts AccessPolicyRealmLabelPolicyArray and AccessPolicyRealmLabelPolicyArrayOutput values.
// You can construct a concrete instance of `AccessPolicyRealmLabelPolicyArrayInput` via:
//
//	AccessPolicyRealmLabelPolicyArray{ AccessPolicyRealmLabelPolicyArgs{...} }
type AccessPolicyRealmLabelPolicyArrayInput interface {
	pulumi.Input

	ToAccessPolicyRealmLabelPolicyArrayOutput() AccessPolicyRealmLabelPolicyArrayOutput
	ToAccessPolicyRealmLabelPolicyArrayOutputWithContext(context.Context) AccessPolicyRealmLabelPolicyArrayOutput
}

type AccessPolicyRealmLabelPolicyArray []AccessPolicyRealmLabelPolicyInput

func (AccessPolicyRealmLabelPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRealmLabelPolicy)(nil)).Elem()
}

func (i AccessPolicyRealmLabelPolicyArray) ToAccessPolicyRealmLabelPolicyArrayOutput() AccessPolicyRealmLabelPolicyArrayOutput {
	return i.ToAccessPolicyRealmLabelPolicyArrayOutputWithContext(context.Background())
}

func (i AccessPolicyRealmLabelPolicyArray) ToAccessPolicyRealmLabelPolicyArrayOutputWithContext(ctx context.Context) AccessPolicyRealmLabelPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyRealmLabelPolicyArrayOutput)
}

type AccessPolicyRealmLabelPolicyOutput struct{ *pulumi.OutputState }

func (AccessPolicyRealmLabelPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyRealmLabelPolicy)(nil)).Elem()
}

func (o AccessPolicyRealmLabelPolicyOutput) ToAccessPolicyRealmLabelPolicyOutput() AccessPolicyRealmLabelPolicyOutput {
	return o
}

func (o AccessPolicyRealmLabelPolicyOutput) ToAccessPolicyRealmLabelPolicyOutputWithContext(ctx context.Context) AccessPolicyRealmLabelPolicyOutput {
	return o
}

// The label selector to match in metrics or logs query. Should be in PromQL or LogQL format.
func (o AccessPolicyRealmLabelPolicyOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPolicyRealmLabelPolicy) string { return v.Selector }).(pulumi.StringOutput)
}

type AccessPolicyRealmLabelPolicyArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyRealmLabelPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyRealmLabelPolicy)(nil)).Elem()
}

func (o AccessPolicyRealmLabelPolicyArrayOutput) ToAccessPolicyRealmLabelPolicyArrayOutput() AccessPolicyRealmLabelPolicyArrayOutput {
	return o
}

func (o AccessPolicyRealmLabelPolicyArrayOutput) ToAccessPolicyRealmLabelPolicyArrayOutputWithContext(ctx context.Context) AccessPolicyRealmLabelPolicyArrayOutput {
	return o
}

func (o AccessPolicyRealmLabelPolicyArrayOutput) Index(i pulumi.IntInput) AccessPolicyRealmLabelPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyRealmLabelPolicy {
		return vs[0].([]AccessPolicyRealmLabelPolicy)[vs[1].(int)]
	}).(AccessPolicyRealmLabelPolicyOutput)
}

type GetAccessPoliciesAccessPolicy struct {
	DisplayName string `pulumi:"displayName"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	Region      string `pulumi:"region"`
	Status      string `pulumi:"status"`
}

// GetAccessPoliciesAccessPolicyInput is an input type that accepts GetAccessPoliciesAccessPolicyArgs and GetAccessPoliciesAccessPolicyOutput values.
// You can construct a concrete instance of `GetAccessPoliciesAccessPolicyInput` via:
//
//	GetAccessPoliciesAccessPolicyArgs{...}
type GetAccessPoliciesAccessPolicyInput interface {
	pulumi.Input

	ToGetAccessPoliciesAccessPolicyOutput() GetAccessPoliciesAccessPolicyOutput
	ToGetAccessPoliciesAccessPolicyOutputWithContext(context.Context) GetAccessPoliciesAccessPolicyOutput
}

type GetAccessPoliciesAccessPolicyArgs struct {
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	Id          pulumi.StringInput `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
	Region      pulumi.StringInput `pulumi:"region"`
	Status      pulumi.StringInput `pulumi:"status"`
}

func (GetAccessPoliciesAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPoliciesAccessPolicy)(nil)).Elem()
}

func (i GetAccessPoliciesAccessPolicyArgs) ToGetAccessPoliciesAccessPolicyOutput() GetAccessPoliciesAccessPolicyOutput {
	return i.ToGetAccessPoliciesAccessPolicyOutputWithContext(context.Background())
}

func (i GetAccessPoliciesAccessPolicyArgs) ToGetAccessPoliciesAccessPolicyOutputWithContext(ctx context.Context) GetAccessPoliciesAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPoliciesAccessPolicyOutput)
}

// GetAccessPoliciesAccessPolicyArrayInput is an input type that accepts GetAccessPoliciesAccessPolicyArray and GetAccessPoliciesAccessPolicyArrayOutput values.
// You can construct a concrete instance of `GetAccessPoliciesAccessPolicyArrayInput` via:
//
//	GetAccessPoliciesAccessPolicyArray{ GetAccessPoliciesAccessPolicyArgs{...} }
type GetAccessPoliciesAccessPolicyArrayInput interface {
	pulumi.Input

	ToGetAccessPoliciesAccessPolicyArrayOutput() GetAccessPoliciesAccessPolicyArrayOutput
	ToGetAccessPoliciesAccessPolicyArrayOutputWithContext(context.Context) GetAccessPoliciesAccessPolicyArrayOutput
}

type GetAccessPoliciesAccessPolicyArray []GetAccessPoliciesAccessPolicyInput

func (GetAccessPoliciesAccessPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPoliciesAccessPolicy)(nil)).Elem()
}

func (i GetAccessPoliciesAccessPolicyArray) ToGetAccessPoliciesAccessPolicyArrayOutput() GetAccessPoliciesAccessPolicyArrayOutput {
	return i.ToGetAccessPoliciesAccessPolicyArrayOutputWithContext(context.Background())
}

func (i GetAccessPoliciesAccessPolicyArray) ToGetAccessPoliciesAccessPolicyArrayOutputWithContext(ctx context.Context) GetAccessPoliciesAccessPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPoliciesAccessPolicyArrayOutput)
}

type GetAccessPoliciesAccessPolicyOutput struct{ *pulumi.OutputState }

func (GetAccessPoliciesAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPoliciesAccessPolicy)(nil)).Elem()
}

func (o GetAccessPoliciesAccessPolicyOutput) ToGetAccessPoliciesAccessPolicyOutput() GetAccessPoliciesAccessPolicyOutput {
	return o
}

func (o GetAccessPoliciesAccessPolicyOutput) ToGetAccessPoliciesAccessPolicyOutputWithContext(ctx context.Context) GetAccessPoliciesAccessPolicyOutput {
	return o
}

func (o GetAccessPoliciesAccessPolicyOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPoliciesAccessPolicy) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o GetAccessPoliciesAccessPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPoliciesAccessPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAccessPoliciesAccessPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPoliciesAccessPolicy) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAccessPoliciesAccessPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPoliciesAccessPolicy) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetAccessPoliciesAccessPolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPoliciesAccessPolicy) string { return v.Status }).(pulumi.StringOutput)
}

type GetAccessPoliciesAccessPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAccessPoliciesAccessPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPoliciesAccessPolicy)(nil)).Elem()
}

func (o GetAccessPoliciesAccessPolicyArrayOutput) ToGetAccessPoliciesAccessPolicyArrayOutput() GetAccessPoliciesAccessPolicyArrayOutput {
	return o
}

func (o GetAccessPoliciesAccessPolicyArrayOutput) ToGetAccessPoliciesAccessPolicyArrayOutputWithContext(ctx context.Context) GetAccessPoliciesAccessPolicyArrayOutput {
	return o
}

func (o GetAccessPoliciesAccessPolicyArrayOutput) Index(i pulumi.IntInput) GetAccessPoliciesAccessPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessPoliciesAccessPolicy {
		return vs[0].([]GetAccessPoliciesAccessPolicy)[vs[1].(int)]
	}).(GetAccessPoliciesAccessPolicyOutput)
}

type GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetwork struct {
	DisplayName string `pulumi:"displayName"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	Region      string `pulumi:"region"`
	Status      string `pulumi:"status"`
}

// GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkInput is an input type that accepts GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArgs and GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput values.
// You can construct a concrete instance of `GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkInput` via:
//
//	GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArgs{...}
type GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkInput interface {
	pulumi.Input

	ToGetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput() GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput
	ToGetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutputWithContext(context.Context) GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput
}

type GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArgs struct {
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	Id          pulumi.StringInput `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
	Region      pulumi.StringInput `pulumi:"region"`
	Status      pulumi.StringInput `pulumi:"status"`
}

func (GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetwork)(nil)).Elem()
}

func (i GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArgs) ToGetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput() GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput {
	return i.ToGetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutputWithContext(context.Background())
}

func (i GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArgs) ToGetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutputWithContext(ctx context.Context) GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput)
}

// GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayInput is an input type that accepts GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArray and GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput values.
// You can construct a concrete instance of `GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayInput` via:
//
//	GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArray{ GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArgs{...} }
type GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayInput interface {
	pulumi.Input

	ToGetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput() GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput
	ToGetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutputWithContext(context.Context) GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput
}

type GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArray []GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkInput

func (GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetwork)(nil)).Elem()
}

func (i GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArray) ToGetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput() GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput {
	return i.ToGetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutputWithContext(context.Background())
}

func (i GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArray) ToGetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutputWithContext(ctx context.Context) GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput)
}

type GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput struct{ *pulumi.OutputState }

func (GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetwork)(nil)).Elem()
}

func (o GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput) ToGetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput() GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput {
	return o
}

func (o GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput) ToGetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutputWithContext(ctx context.Context) GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput {
	return o
}

func (o GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetwork) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

func (o GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetwork) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetwork) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetwork) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetwork) string { return v.Status }).(pulumi.StringOutput)
}

type GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetwork)(nil)).Elem()
}

func (o GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput) ToGetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput() GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput {
	return o
}

func (o GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput) ToGetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutputWithContext(ctx context.Context) GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput {
	return o
}

func (o GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput) Index(i pulumi.IntInput) GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetwork {
		return vs[0].([]GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetwork)[vs[1].(int)]
	}).(GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyConditionInput)(nil)).Elem(), AccessPolicyConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyConditionArrayInput)(nil)).Elem(), AccessPolicyConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRealmInput)(nil)).Elem(), AccessPolicyRealmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRealmArrayInput)(nil)).Elem(), AccessPolicyRealmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRealmLabelPolicyInput)(nil)).Elem(), AccessPolicyRealmLabelPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyRealmLabelPolicyArrayInput)(nil)).Elem(), AccessPolicyRealmLabelPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPoliciesAccessPolicyInput)(nil)).Elem(), GetAccessPoliciesAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPoliciesAccessPolicyArrayInput)(nil)).Elem(), GetAccessPoliciesAccessPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkInput)(nil)).Elem(), GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayInput)(nil)).Elem(), GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArray{})
	pulumi.RegisterOutputType(AccessPolicyConditionOutput{})
	pulumi.RegisterOutputType(AccessPolicyConditionArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyRealmOutput{})
	pulumi.RegisterOutputType(AccessPolicyRealmArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyRealmLabelPolicyOutput{})
	pulumi.RegisterOutputType(AccessPolicyRealmLabelPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetAccessPoliciesAccessPolicyOutput{})
	pulumi.RegisterOutputType(GetAccessPoliciesAccessPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkOutput{})
	pulumi.RegisterOutputType(GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkArrayOutput{})
}
