// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/internal"
)

// Fetches access policies from Grafana Cloud.
//
// * [Official documentation](https://grafana.com/docs/grafana-cloud/account-management/authentication-and-permissions/access-policies/)
// * [API documentation](https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-access-policies)
//
// Required access policy scopes:
//
// * accesspolicies:read
func GetAccessPolicies(ctx *pulumi.Context, args *GetAccessPoliciesArgs, opts ...pulumi.InvokeOption) (*GetAccessPoliciesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAccessPoliciesResult
	err := ctx.Invoke("grafana:cloud/getAccessPolicies:getAccessPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccessPolicies.
type GetAccessPoliciesArgs struct {
	NameFilter   *string `pulumi:"nameFilter"`
	RegionFilter *string `pulumi:"regionFilter"`
}

// A collection of values returned by getAccessPolicies.
type GetAccessPoliciesResult struct {
	AccessPolicies []GetAccessPoliciesAccessPolicy `pulumi:"accessPolicies"`
	// The ID of this datasource. This is an internal identifier used by the provider to track this datasource.
	Id           string  `pulumi:"id"`
	NameFilter   *string `pulumi:"nameFilter"`
	RegionFilter *string `pulumi:"regionFilter"`
}

func GetAccessPoliciesOutput(ctx *pulumi.Context, args GetAccessPoliciesOutputArgs, opts ...pulumi.InvokeOption) GetAccessPoliciesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAccessPoliciesResultOutput, error) {
			args := v.(GetAccessPoliciesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("grafana:cloud/getAccessPolicies:getAccessPolicies", args, GetAccessPoliciesResultOutput{}, options).(GetAccessPoliciesResultOutput), nil
		}).(GetAccessPoliciesResultOutput)
}

// A collection of arguments for invoking getAccessPolicies.
type GetAccessPoliciesOutputArgs struct {
	NameFilter   pulumi.StringPtrInput `pulumi:"nameFilter"`
	RegionFilter pulumi.StringPtrInput `pulumi:"regionFilter"`
}

func (GetAccessPoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPoliciesArgs)(nil)).Elem()
}

// A collection of values returned by getAccessPolicies.
type GetAccessPoliciesResultOutput struct{ *pulumi.OutputState }

func (GetAccessPoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPoliciesResult)(nil)).Elem()
}

func (o GetAccessPoliciesResultOutput) ToGetAccessPoliciesResultOutput() GetAccessPoliciesResultOutput {
	return o
}

func (o GetAccessPoliciesResultOutput) ToGetAccessPoliciesResultOutputWithContext(ctx context.Context) GetAccessPoliciesResultOutput {
	return o
}

func (o GetAccessPoliciesResultOutput) AccessPolicies() GetAccessPoliciesAccessPolicyArrayOutput {
	return o.ApplyT(func(v GetAccessPoliciesResult) []GetAccessPoliciesAccessPolicy { return v.AccessPolicies }).(GetAccessPoliciesAccessPolicyArrayOutput)
}

// The ID of this datasource. This is an internal identifier used by the provider to track this datasource.
func (o GetAccessPoliciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPoliciesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAccessPoliciesResultOutput) NameFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAccessPoliciesResult) *string { return v.NameFilter }).(pulumi.StringPtrOutput)
}

func (o GetAccessPoliciesResultOutput) RegionFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAccessPoliciesResult) *string { return v.RegionFilter }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAccessPoliciesResultOutput{})
}
