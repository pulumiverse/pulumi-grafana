// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudprovider

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/internal"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/cloud"
//	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/cloudprovider"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := cloud.LookupStack(ctx, &cloud.LookupStackArgs{
//				Slug: "gcloudstacktest",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			testGetRole, err := iam.LookupRole(ctx, &iam.LookupRoleArgs{
//				Name: "my-role",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = cloudprovider.NewAwsAccount(ctx, "test", &cloudprovider.AwsAccountArgs{
//				StackId: pulumi.String(test.Id),
//				RoleArn: pulumi.String(testGetRole.Arn),
//				Regions: pulumi.StringArray{
//					pulumi.String("us-east-1"),
//					pulumi.String("us-east-2"),
//					pulumi.String("us-west-1"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import grafana:cloudProvider/awsAccount:AwsAccount name "{{ stack_id }}:{{ resource_id }}"
// ```
type AwsAccount struct {
	pulumi.CustomResourceState

	// An optional human-readable name for this AWS Account resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// A set of regions that this AWS Account resource applies to.
	Regions pulumi.StringArrayOutput `pulumi:"regions"`
	// The ID given by the Grafana Cloud Provider API to this AWS Account resource.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
	// An IAM Role ARN string to represent with this AWS Account resource.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	StackId pulumi.StringOutput `pulumi:"stackId"`
}

// NewAwsAccount registers a new resource with the given unique name, arguments, and options.
func NewAwsAccount(ctx *pulumi.Context,
	name string, args *AwsAccountArgs, opts ...pulumi.ResourceOption) (*AwsAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Regions == nil {
		return nil, errors.New("invalid value for required argument 'Regions'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	if args.StackId == nil {
		return nil, errors.New("invalid value for required argument 'StackId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsAccount
	err := ctx.RegisterResource("grafana:cloudProvider/awsAccount:AwsAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsAccount gets an existing AwsAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsAccountState, opts ...pulumi.ResourceOption) (*AwsAccount, error) {
	var resource AwsAccount
	err := ctx.ReadResource("grafana:cloudProvider/awsAccount:AwsAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsAccount resources.
type awsAccountState struct {
	// An optional human-readable name for this AWS Account resource.
	Name *string `pulumi:"name"`
	// A set of regions that this AWS Account resource applies to.
	Regions []string `pulumi:"regions"`
	// The ID given by the Grafana Cloud Provider API to this AWS Account resource.
	ResourceId *string `pulumi:"resourceId"`
	// An IAM Role ARN string to represent with this AWS Account resource.
	RoleArn *string `pulumi:"roleArn"`
	StackId *string `pulumi:"stackId"`
}

type AwsAccountState struct {
	// An optional human-readable name for this AWS Account resource.
	Name pulumi.StringPtrInput
	// A set of regions that this AWS Account resource applies to.
	Regions pulumi.StringArrayInput
	// The ID given by the Grafana Cloud Provider API to this AWS Account resource.
	ResourceId pulumi.StringPtrInput
	// An IAM Role ARN string to represent with this AWS Account resource.
	RoleArn pulumi.StringPtrInput
	StackId pulumi.StringPtrInput
}

func (AwsAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsAccountState)(nil)).Elem()
}

type awsAccountArgs struct {
	// An optional human-readable name for this AWS Account resource.
	Name *string `pulumi:"name"`
	// A set of regions that this AWS Account resource applies to.
	Regions []string `pulumi:"regions"`
	// An IAM Role ARN string to represent with this AWS Account resource.
	RoleArn string `pulumi:"roleArn"`
	StackId string `pulumi:"stackId"`
}

// The set of arguments for constructing a AwsAccount resource.
type AwsAccountArgs struct {
	// An optional human-readable name for this AWS Account resource.
	Name pulumi.StringPtrInput
	// A set of regions that this AWS Account resource applies to.
	Regions pulumi.StringArrayInput
	// An IAM Role ARN string to represent with this AWS Account resource.
	RoleArn pulumi.StringInput
	StackId pulumi.StringInput
}

func (AwsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsAccountArgs)(nil)).Elem()
}

type AwsAccountInput interface {
	pulumi.Input

	ToAwsAccountOutput() AwsAccountOutput
	ToAwsAccountOutputWithContext(ctx context.Context) AwsAccountOutput
}

func (*AwsAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsAccount)(nil)).Elem()
}

func (i *AwsAccount) ToAwsAccountOutput() AwsAccountOutput {
	return i.ToAwsAccountOutputWithContext(context.Background())
}

func (i *AwsAccount) ToAwsAccountOutputWithContext(ctx context.Context) AwsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAccountOutput)
}

// AwsAccountArrayInput is an input type that accepts AwsAccountArray and AwsAccountArrayOutput values.
// You can construct a concrete instance of `AwsAccountArrayInput` via:
//
//	AwsAccountArray{ AwsAccountArgs{...} }
type AwsAccountArrayInput interface {
	pulumi.Input

	ToAwsAccountArrayOutput() AwsAccountArrayOutput
	ToAwsAccountArrayOutputWithContext(context.Context) AwsAccountArrayOutput
}

type AwsAccountArray []AwsAccountInput

func (AwsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsAccount)(nil)).Elem()
}

func (i AwsAccountArray) ToAwsAccountArrayOutput() AwsAccountArrayOutput {
	return i.ToAwsAccountArrayOutputWithContext(context.Background())
}

func (i AwsAccountArray) ToAwsAccountArrayOutputWithContext(ctx context.Context) AwsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAccountArrayOutput)
}

// AwsAccountMapInput is an input type that accepts AwsAccountMap and AwsAccountMapOutput values.
// You can construct a concrete instance of `AwsAccountMapInput` via:
//
//	AwsAccountMap{ "key": AwsAccountArgs{...} }
type AwsAccountMapInput interface {
	pulumi.Input

	ToAwsAccountMapOutput() AwsAccountMapOutput
	ToAwsAccountMapOutputWithContext(context.Context) AwsAccountMapOutput
}

type AwsAccountMap map[string]AwsAccountInput

func (AwsAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsAccount)(nil)).Elem()
}

func (i AwsAccountMap) ToAwsAccountMapOutput() AwsAccountMapOutput {
	return i.ToAwsAccountMapOutputWithContext(context.Background())
}

func (i AwsAccountMap) ToAwsAccountMapOutputWithContext(ctx context.Context) AwsAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAccountMapOutput)
}

type AwsAccountOutput struct{ *pulumi.OutputState }

func (AwsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsAccount)(nil)).Elem()
}

func (o AwsAccountOutput) ToAwsAccountOutput() AwsAccountOutput {
	return o
}

func (o AwsAccountOutput) ToAwsAccountOutputWithContext(ctx context.Context) AwsAccountOutput {
	return o
}

// An optional human-readable name for this AWS Account resource.
func (o AwsAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A set of regions that this AWS Account resource applies to.
func (o AwsAccountOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsAccount) pulumi.StringArrayOutput { return v.Regions }).(pulumi.StringArrayOutput)
}

// The ID given by the Grafana Cloud Provider API to this AWS Account resource.
func (o AwsAccountOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAccount) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

// An IAM Role ARN string to represent with this AWS Account resource.
func (o AwsAccountOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAccount) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

func (o AwsAccountOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAccount) pulumi.StringOutput { return v.StackId }).(pulumi.StringOutput)
}

type AwsAccountArrayOutput struct{ *pulumi.OutputState }

func (AwsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsAccount)(nil)).Elem()
}

func (o AwsAccountArrayOutput) ToAwsAccountArrayOutput() AwsAccountArrayOutput {
	return o
}

func (o AwsAccountArrayOutput) ToAwsAccountArrayOutputWithContext(ctx context.Context) AwsAccountArrayOutput {
	return o
}

func (o AwsAccountArrayOutput) Index(i pulumi.IntInput) AwsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsAccount {
		return vs[0].([]*AwsAccount)[vs[1].(int)]
	}).(AwsAccountOutput)
}

type AwsAccountMapOutput struct{ *pulumi.OutputState }

func (AwsAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsAccount)(nil)).Elem()
}

func (o AwsAccountMapOutput) ToAwsAccountMapOutput() AwsAccountMapOutput {
	return o
}

func (o AwsAccountMapOutput) ToAwsAccountMapOutputWithContext(ctx context.Context) AwsAccountMapOutput {
	return o
}

func (o AwsAccountMapOutput) MapIndex(k pulumi.StringInput) AwsAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsAccount {
		return vs[0].(map[string]*AwsAccount)[vs[1].(string)]
	}).(AwsAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsAccountInput)(nil)).Elem(), &AwsAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsAccountArrayInput)(nil)).Elem(), AwsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsAccountMapInput)(nil)).Elem(), AwsAccountMap{})
	pulumi.RegisterOutputType(AwsAccountOutput{})
	pulumi.RegisterOutputType(AwsAccountArrayOutput{})
	pulumi.RegisterOutputType(AwsAccountMapOutput{})
}
