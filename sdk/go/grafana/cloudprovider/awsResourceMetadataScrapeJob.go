// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudprovider

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/v2/go/grafana/internal"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-grafana/sdk/v2/go/grafana/cloud"
//	"github.com/pulumiverse/pulumi-grafana/sdk/v2/go/grafana/cloudprovider"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := cloud.LookupStack(ctx, &cloud.LookupStackArgs{
//				Slug: "gcloudstacktest",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			testGetRole, err := iam.LookupRole(ctx, &iam.LookupRoleArgs{
//				Name: "my-role",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			testAwsAccount, err := cloudprovider.NewAwsAccount(ctx, "test", &cloudprovider.AwsAccountArgs{
//				StackId: pulumi.String(test.Id),
//				RoleArn: pulumi.String(testGetRole.Arn),
//				Regions: pulumi.StringArray{
//					pulumi.String("us-east-1"),
//					pulumi.String("us-east-2"),
//					pulumi.String("us-west-1"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cloudprovider.NewAwsResourceMetadataScrapeJob(ctx, "test", &cloudprovider.AwsResourceMetadataScrapeJobArgs{
//				StackId:              pulumi.String(test.Id),
//				Name:                 pulumi.String("my-aws-resource-metadata-scrape-job"),
//				AwsAccountResourceId: testAwsAccount.ResourceId,
//				Services: cloudprovider.AwsResourceMetadataScrapeJobServiceArray{
//					&cloudprovider.AwsResourceMetadataScrapeJobServiceArgs{
//						Name:                  pulumi.String("AWS/EC2"),
//						ScrapeIntervalSeconds: pulumi.Int(300),
//						ResourceDiscoveryTagFilters: cloudprovider.AwsResourceMetadataScrapeJobServiceResourceDiscoveryTagFilterArray{
//							&cloudprovider.AwsResourceMetadataScrapeJobServiceResourceDiscoveryTagFilterArgs{
//								Key:   pulumi.String("k8s.io/cluster-autoscaler/enabled"),
//								Value: pulumi.String("true"),
//							},
//						},
//					},
//				},
//				StaticLabels: pulumi.StringMap{
//					"label1": pulumi.String("value1"),
//					"label2": pulumi.String("value2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import grafana:cloudProvider/awsResourceMetadataScrapeJob:AwsResourceMetadataScrapeJob name "{{ stack_id }}:{{ name }}"
// ```
type AwsResourceMetadataScrapeJob struct {
	pulumi.CustomResourceState

	// The ID assigned by the Grafana Cloud Provider API to an AWS Account resource that should be associated with this Resource Metadata Scrape Job. This can be provided by the `resourceId` attribute of the `cloudProvider.AwsAccount` resource.
	AwsAccountResourceId pulumi.StringOutput `pulumi:"awsAccountResourceId"`
	// When the AWS Resource Metadata Scrape Job is disabled, this will show the reason that it is in that state.
	DisabledReason pulumi.StringOutput `pulumi:"disabledReason"`
	// Whether the AWS Resource Metadata Scrape Job is enabled or not. Defaults to `true`.
	Enabled pulumi.BoolOutput   `pulumi:"enabled"`
	Name    pulumi.StringOutput `pulumi:"name"`
	// A subset of the regions that are configured in the associated AWS Account resource to apply to this scrape job. If not set or empty, all of the Account resource's regions are scraped.
	RegionsSubsetOverrides pulumi.StringArrayOutput `pulumi:"regionsSubsetOverrides"`
	// One or more configuration blocks to configure AWS services for the Resource Metadata Scrape Job to scrape. Each block must have a distinct `name` attribute. When accessing this as an attribute reference, it is a list of objects.
	Services AwsResourceMetadataScrapeJobServiceArrayOutput `pulumi:"services"`
	StackId  pulumi.StringOutput                            `pulumi:"stackId"`
	// A set of static labels to add to all metrics exported by this scrape job.
	StaticLabels pulumi.StringMapOutput `pulumi:"staticLabels"`
}

// NewAwsResourceMetadataScrapeJob registers a new resource with the given unique name, arguments, and options.
func NewAwsResourceMetadataScrapeJob(ctx *pulumi.Context,
	name string, args *AwsResourceMetadataScrapeJobArgs, opts ...pulumi.ResourceOption) (*AwsResourceMetadataScrapeJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AwsAccountResourceId == nil {
		return nil, errors.New("invalid value for required argument 'AwsAccountResourceId'")
	}
	if args.StackId == nil {
		return nil, errors.New("invalid value for required argument 'StackId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsResourceMetadataScrapeJob
	err := ctx.RegisterResource("grafana:cloudProvider/awsResourceMetadataScrapeJob:AwsResourceMetadataScrapeJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsResourceMetadataScrapeJob gets an existing AwsResourceMetadataScrapeJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsResourceMetadataScrapeJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsResourceMetadataScrapeJobState, opts ...pulumi.ResourceOption) (*AwsResourceMetadataScrapeJob, error) {
	var resource AwsResourceMetadataScrapeJob
	err := ctx.ReadResource("grafana:cloudProvider/awsResourceMetadataScrapeJob:AwsResourceMetadataScrapeJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsResourceMetadataScrapeJob resources.
type awsResourceMetadataScrapeJobState struct {
	// The ID assigned by the Grafana Cloud Provider API to an AWS Account resource that should be associated with this Resource Metadata Scrape Job. This can be provided by the `resourceId` attribute of the `cloudProvider.AwsAccount` resource.
	AwsAccountResourceId *string `pulumi:"awsAccountResourceId"`
	// When the AWS Resource Metadata Scrape Job is disabled, this will show the reason that it is in that state.
	DisabledReason *string `pulumi:"disabledReason"`
	// Whether the AWS Resource Metadata Scrape Job is enabled or not. Defaults to `true`.
	Enabled *bool   `pulumi:"enabled"`
	Name    *string `pulumi:"name"`
	// A subset of the regions that are configured in the associated AWS Account resource to apply to this scrape job. If not set or empty, all of the Account resource's regions are scraped.
	RegionsSubsetOverrides []string `pulumi:"regionsSubsetOverrides"`
	// One or more configuration blocks to configure AWS services for the Resource Metadata Scrape Job to scrape. Each block must have a distinct `name` attribute. When accessing this as an attribute reference, it is a list of objects.
	Services []AwsResourceMetadataScrapeJobService `pulumi:"services"`
	StackId  *string                               `pulumi:"stackId"`
	// A set of static labels to add to all metrics exported by this scrape job.
	StaticLabels map[string]string `pulumi:"staticLabels"`
}

type AwsResourceMetadataScrapeJobState struct {
	// The ID assigned by the Grafana Cloud Provider API to an AWS Account resource that should be associated with this Resource Metadata Scrape Job. This can be provided by the `resourceId` attribute of the `cloudProvider.AwsAccount` resource.
	AwsAccountResourceId pulumi.StringPtrInput
	// When the AWS Resource Metadata Scrape Job is disabled, this will show the reason that it is in that state.
	DisabledReason pulumi.StringPtrInput
	// Whether the AWS Resource Metadata Scrape Job is enabled or not. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	Name    pulumi.StringPtrInput
	// A subset of the regions that are configured in the associated AWS Account resource to apply to this scrape job. If not set or empty, all of the Account resource's regions are scraped.
	RegionsSubsetOverrides pulumi.StringArrayInput
	// One or more configuration blocks to configure AWS services for the Resource Metadata Scrape Job to scrape. Each block must have a distinct `name` attribute. When accessing this as an attribute reference, it is a list of objects.
	Services AwsResourceMetadataScrapeJobServiceArrayInput
	StackId  pulumi.StringPtrInput
	// A set of static labels to add to all metrics exported by this scrape job.
	StaticLabels pulumi.StringMapInput
}

func (AwsResourceMetadataScrapeJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsResourceMetadataScrapeJobState)(nil)).Elem()
}

type awsResourceMetadataScrapeJobArgs struct {
	// The ID assigned by the Grafana Cloud Provider API to an AWS Account resource that should be associated with this Resource Metadata Scrape Job. This can be provided by the `resourceId` attribute of the `cloudProvider.AwsAccount` resource.
	AwsAccountResourceId string `pulumi:"awsAccountResourceId"`
	// Whether the AWS Resource Metadata Scrape Job is enabled or not. Defaults to `true`.
	Enabled *bool   `pulumi:"enabled"`
	Name    *string `pulumi:"name"`
	// A subset of the regions that are configured in the associated AWS Account resource to apply to this scrape job. If not set or empty, all of the Account resource's regions are scraped.
	RegionsSubsetOverrides []string `pulumi:"regionsSubsetOverrides"`
	// One or more configuration blocks to configure AWS services for the Resource Metadata Scrape Job to scrape. Each block must have a distinct `name` attribute. When accessing this as an attribute reference, it is a list of objects.
	Services []AwsResourceMetadataScrapeJobService `pulumi:"services"`
	StackId  string                                `pulumi:"stackId"`
	// A set of static labels to add to all metrics exported by this scrape job.
	StaticLabels map[string]string `pulumi:"staticLabels"`
}

// The set of arguments for constructing a AwsResourceMetadataScrapeJob resource.
type AwsResourceMetadataScrapeJobArgs struct {
	// The ID assigned by the Grafana Cloud Provider API to an AWS Account resource that should be associated with this Resource Metadata Scrape Job. This can be provided by the `resourceId` attribute of the `cloudProvider.AwsAccount` resource.
	AwsAccountResourceId pulumi.StringInput
	// Whether the AWS Resource Metadata Scrape Job is enabled or not. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	Name    pulumi.StringPtrInput
	// A subset of the regions that are configured in the associated AWS Account resource to apply to this scrape job. If not set or empty, all of the Account resource's regions are scraped.
	RegionsSubsetOverrides pulumi.StringArrayInput
	// One or more configuration blocks to configure AWS services for the Resource Metadata Scrape Job to scrape. Each block must have a distinct `name` attribute. When accessing this as an attribute reference, it is a list of objects.
	Services AwsResourceMetadataScrapeJobServiceArrayInput
	StackId  pulumi.StringInput
	// A set of static labels to add to all metrics exported by this scrape job.
	StaticLabels pulumi.StringMapInput
}

func (AwsResourceMetadataScrapeJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsResourceMetadataScrapeJobArgs)(nil)).Elem()
}

type AwsResourceMetadataScrapeJobInput interface {
	pulumi.Input

	ToAwsResourceMetadataScrapeJobOutput() AwsResourceMetadataScrapeJobOutput
	ToAwsResourceMetadataScrapeJobOutputWithContext(ctx context.Context) AwsResourceMetadataScrapeJobOutput
}

func (*AwsResourceMetadataScrapeJob) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsResourceMetadataScrapeJob)(nil)).Elem()
}

func (i *AwsResourceMetadataScrapeJob) ToAwsResourceMetadataScrapeJobOutput() AwsResourceMetadataScrapeJobOutput {
	return i.ToAwsResourceMetadataScrapeJobOutputWithContext(context.Background())
}

func (i *AwsResourceMetadataScrapeJob) ToAwsResourceMetadataScrapeJobOutputWithContext(ctx context.Context) AwsResourceMetadataScrapeJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsResourceMetadataScrapeJobOutput)
}

// AwsResourceMetadataScrapeJobArrayInput is an input type that accepts AwsResourceMetadataScrapeJobArray and AwsResourceMetadataScrapeJobArrayOutput values.
// You can construct a concrete instance of `AwsResourceMetadataScrapeJobArrayInput` via:
//
//	AwsResourceMetadataScrapeJobArray{ AwsResourceMetadataScrapeJobArgs{...} }
type AwsResourceMetadataScrapeJobArrayInput interface {
	pulumi.Input

	ToAwsResourceMetadataScrapeJobArrayOutput() AwsResourceMetadataScrapeJobArrayOutput
	ToAwsResourceMetadataScrapeJobArrayOutputWithContext(context.Context) AwsResourceMetadataScrapeJobArrayOutput
}

type AwsResourceMetadataScrapeJobArray []AwsResourceMetadataScrapeJobInput

func (AwsResourceMetadataScrapeJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsResourceMetadataScrapeJob)(nil)).Elem()
}

func (i AwsResourceMetadataScrapeJobArray) ToAwsResourceMetadataScrapeJobArrayOutput() AwsResourceMetadataScrapeJobArrayOutput {
	return i.ToAwsResourceMetadataScrapeJobArrayOutputWithContext(context.Background())
}

func (i AwsResourceMetadataScrapeJobArray) ToAwsResourceMetadataScrapeJobArrayOutputWithContext(ctx context.Context) AwsResourceMetadataScrapeJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsResourceMetadataScrapeJobArrayOutput)
}

// AwsResourceMetadataScrapeJobMapInput is an input type that accepts AwsResourceMetadataScrapeJobMap and AwsResourceMetadataScrapeJobMapOutput values.
// You can construct a concrete instance of `AwsResourceMetadataScrapeJobMapInput` via:
//
//	AwsResourceMetadataScrapeJobMap{ "key": AwsResourceMetadataScrapeJobArgs{...} }
type AwsResourceMetadataScrapeJobMapInput interface {
	pulumi.Input

	ToAwsResourceMetadataScrapeJobMapOutput() AwsResourceMetadataScrapeJobMapOutput
	ToAwsResourceMetadataScrapeJobMapOutputWithContext(context.Context) AwsResourceMetadataScrapeJobMapOutput
}

type AwsResourceMetadataScrapeJobMap map[string]AwsResourceMetadataScrapeJobInput

func (AwsResourceMetadataScrapeJobMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsResourceMetadataScrapeJob)(nil)).Elem()
}

func (i AwsResourceMetadataScrapeJobMap) ToAwsResourceMetadataScrapeJobMapOutput() AwsResourceMetadataScrapeJobMapOutput {
	return i.ToAwsResourceMetadataScrapeJobMapOutputWithContext(context.Background())
}

func (i AwsResourceMetadataScrapeJobMap) ToAwsResourceMetadataScrapeJobMapOutputWithContext(ctx context.Context) AwsResourceMetadataScrapeJobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsResourceMetadataScrapeJobMapOutput)
}

type AwsResourceMetadataScrapeJobOutput struct{ *pulumi.OutputState }

func (AwsResourceMetadataScrapeJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsResourceMetadataScrapeJob)(nil)).Elem()
}

func (o AwsResourceMetadataScrapeJobOutput) ToAwsResourceMetadataScrapeJobOutput() AwsResourceMetadataScrapeJobOutput {
	return o
}

func (o AwsResourceMetadataScrapeJobOutput) ToAwsResourceMetadataScrapeJobOutputWithContext(ctx context.Context) AwsResourceMetadataScrapeJobOutput {
	return o
}

// The ID assigned by the Grafana Cloud Provider API to an AWS Account resource that should be associated with this Resource Metadata Scrape Job. This can be provided by the `resourceId` attribute of the `cloudProvider.AwsAccount` resource.
func (o AwsResourceMetadataScrapeJobOutput) AwsAccountResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsResourceMetadataScrapeJob) pulumi.StringOutput { return v.AwsAccountResourceId }).(pulumi.StringOutput)
}

// When the AWS Resource Metadata Scrape Job is disabled, this will show the reason that it is in that state.
func (o AwsResourceMetadataScrapeJobOutput) DisabledReason() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsResourceMetadataScrapeJob) pulumi.StringOutput { return v.DisabledReason }).(pulumi.StringOutput)
}

// Whether the AWS Resource Metadata Scrape Job is enabled or not. Defaults to `true`.
func (o AwsResourceMetadataScrapeJobOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AwsResourceMetadataScrapeJob) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

func (o AwsResourceMetadataScrapeJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsResourceMetadataScrapeJob) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A subset of the regions that are configured in the associated AWS Account resource to apply to this scrape job. If not set or empty, all of the Account resource's regions are scraped.
func (o AwsResourceMetadataScrapeJobOutput) RegionsSubsetOverrides() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsResourceMetadataScrapeJob) pulumi.StringArrayOutput { return v.RegionsSubsetOverrides }).(pulumi.StringArrayOutput)
}

// One or more configuration blocks to configure AWS services for the Resource Metadata Scrape Job to scrape. Each block must have a distinct `name` attribute. When accessing this as an attribute reference, it is a list of objects.
func (o AwsResourceMetadataScrapeJobOutput) Services() AwsResourceMetadataScrapeJobServiceArrayOutput {
	return o.ApplyT(func(v *AwsResourceMetadataScrapeJob) AwsResourceMetadataScrapeJobServiceArrayOutput {
		return v.Services
	}).(AwsResourceMetadataScrapeJobServiceArrayOutput)
}

func (o AwsResourceMetadataScrapeJobOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsResourceMetadataScrapeJob) pulumi.StringOutput { return v.StackId }).(pulumi.StringOutput)
}

// A set of static labels to add to all metrics exported by this scrape job.
func (o AwsResourceMetadataScrapeJobOutput) StaticLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AwsResourceMetadataScrapeJob) pulumi.StringMapOutput { return v.StaticLabels }).(pulumi.StringMapOutput)
}

type AwsResourceMetadataScrapeJobArrayOutput struct{ *pulumi.OutputState }

func (AwsResourceMetadataScrapeJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsResourceMetadataScrapeJob)(nil)).Elem()
}

func (o AwsResourceMetadataScrapeJobArrayOutput) ToAwsResourceMetadataScrapeJobArrayOutput() AwsResourceMetadataScrapeJobArrayOutput {
	return o
}

func (o AwsResourceMetadataScrapeJobArrayOutput) ToAwsResourceMetadataScrapeJobArrayOutputWithContext(ctx context.Context) AwsResourceMetadataScrapeJobArrayOutput {
	return o
}

func (o AwsResourceMetadataScrapeJobArrayOutput) Index(i pulumi.IntInput) AwsResourceMetadataScrapeJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsResourceMetadataScrapeJob {
		return vs[0].([]*AwsResourceMetadataScrapeJob)[vs[1].(int)]
	}).(AwsResourceMetadataScrapeJobOutput)
}

type AwsResourceMetadataScrapeJobMapOutput struct{ *pulumi.OutputState }

func (AwsResourceMetadataScrapeJobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsResourceMetadataScrapeJob)(nil)).Elem()
}

func (o AwsResourceMetadataScrapeJobMapOutput) ToAwsResourceMetadataScrapeJobMapOutput() AwsResourceMetadataScrapeJobMapOutput {
	return o
}

func (o AwsResourceMetadataScrapeJobMapOutput) ToAwsResourceMetadataScrapeJobMapOutputWithContext(ctx context.Context) AwsResourceMetadataScrapeJobMapOutput {
	return o
}

func (o AwsResourceMetadataScrapeJobMapOutput) MapIndex(k pulumi.StringInput) AwsResourceMetadataScrapeJobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsResourceMetadataScrapeJob {
		return vs[0].(map[string]*AwsResourceMetadataScrapeJob)[vs[1].(string)]
	}).(AwsResourceMetadataScrapeJobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsResourceMetadataScrapeJobInput)(nil)).Elem(), &AwsResourceMetadataScrapeJob{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsResourceMetadataScrapeJobArrayInput)(nil)).Elem(), AwsResourceMetadataScrapeJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsResourceMetadataScrapeJobMapInput)(nil)).Elem(), AwsResourceMetadataScrapeJobMap{})
	pulumi.RegisterOutputType(AwsResourceMetadataScrapeJobOutput{})
	pulumi.RegisterOutputType(AwsResourceMetadataScrapeJobArrayOutput{})
	pulumi.RegisterOutputType(AwsResourceMetadataScrapeJobMapOutput{})
}
