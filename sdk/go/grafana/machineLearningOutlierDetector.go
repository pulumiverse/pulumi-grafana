// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/internal"
)

type MachineLearningOutlierDetector struct {
	pulumi.CustomResourceState

	// The algorithm to use and its configuration. See
	// https://grafana.com/docs/grafana-cloud/machine-learning/outlier-detection/ for details.
	Algorithm MachineLearningOutlierDetectorAlgorithmOutput `pulumi:"algorithm"`
	// The id of the datasource to query.
	//
	// Deprecated: Use datasourceUid instead.
	DatasourceId pulumi.IntPtrOutput `pulumi:"datasourceId"`
	// The type of datasource being queried. Currently allowed values are prometheus, graphite, loki, postgres, and datadog.
	DatasourceType pulumi.StringOutput `pulumi:"datasourceType"`
	// The uid of the datasource to query.
	DatasourceUid pulumi.StringPtrOutput `pulumi:"datasourceUid"`
	// A description of the outlier detector.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The data interval in seconds to monitor.
	Interval pulumi.IntPtrOutput `pulumi:"interval"`
	// The metric used to query the outlier detector results.
	Metric pulumi.StringOutput `pulumi:"metric"`
	// The name of the outlier detector.
	Name pulumi.StringOutput `pulumi:"name"`
	// An object representing the query params to query Grafana with.
	QueryParams pulumi.MapOutput `pulumi:"queryParams"`
}

// NewMachineLearningOutlierDetector registers a new resource with the given unique name, arguments, and options.
func NewMachineLearningOutlierDetector(ctx *pulumi.Context,
	name string, args *MachineLearningOutlierDetectorArgs, opts ...pulumi.ResourceOption) (*MachineLearningOutlierDetector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Algorithm == nil {
		return nil, errors.New("invalid value for required argument 'Algorithm'")
	}
	if args.DatasourceType == nil {
		return nil, errors.New("invalid value for required argument 'DatasourceType'")
	}
	if args.Metric == nil {
		return nil, errors.New("invalid value for required argument 'Metric'")
	}
	if args.QueryParams == nil {
		return nil, errors.New("invalid value for required argument 'QueryParams'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MachineLearningOutlierDetector
	err := ctx.RegisterResource("grafana:index/machineLearningOutlierDetector:MachineLearningOutlierDetector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMachineLearningOutlierDetector gets an existing MachineLearningOutlierDetector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMachineLearningOutlierDetector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MachineLearningOutlierDetectorState, opts ...pulumi.ResourceOption) (*MachineLearningOutlierDetector, error) {
	var resource MachineLearningOutlierDetector
	err := ctx.ReadResource("grafana:index/machineLearningOutlierDetector:MachineLearningOutlierDetector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MachineLearningOutlierDetector resources.
type machineLearningOutlierDetectorState struct {
	// The algorithm to use and its configuration. See
	// https://grafana.com/docs/grafana-cloud/machine-learning/outlier-detection/ for details.
	Algorithm *MachineLearningOutlierDetectorAlgorithm `pulumi:"algorithm"`
	// The id of the datasource to query.
	//
	// Deprecated: Use datasourceUid instead.
	DatasourceId *int `pulumi:"datasourceId"`
	// The type of datasource being queried. Currently allowed values are prometheus, graphite, loki, postgres, and datadog.
	DatasourceType *string `pulumi:"datasourceType"`
	// The uid of the datasource to query.
	DatasourceUid *string `pulumi:"datasourceUid"`
	// A description of the outlier detector.
	Description *string `pulumi:"description"`
	// The data interval in seconds to monitor.
	Interval *int `pulumi:"interval"`
	// The metric used to query the outlier detector results.
	Metric *string `pulumi:"metric"`
	// The name of the outlier detector.
	Name *string `pulumi:"name"`
	// An object representing the query params to query Grafana with.
	QueryParams map[string]interface{} `pulumi:"queryParams"`
}

type MachineLearningOutlierDetectorState struct {
	// The algorithm to use and its configuration. See
	// https://grafana.com/docs/grafana-cloud/machine-learning/outlier-detection/ for details.
	Algorithm MachineLearningOutlierDetectorAlgorithmPtrInput
	// The id of the datasource to query.
	//
	// Deprecated: Use datasourceUid instead.
	DatasourceId pulumi.IntPtrInput
	// The type of datasource being queried. Currently allowed values are prometheus, graphite, loki, postgres, and datadog.
	DatasourceType pulumi.StringPtrInput
	// The uid of the datasource to query.
	DatasourceUid pulumi.StringPtrInput
	// A description of the outlier detector.
	Description pulumi.StringPtrInput
	// The data interval in seconds to monitor.
	Interval pulumi.IntPtrInput
	// The metric used to query the outlier detector results.
	Metric pulumi.StringPtrInput
	// The name of the outlier detector.
	Name pulumi.StringPtrInput
	// An object representing the query params to query Grafana with.
	QueryParams pulumi.MapInput
}

func (MachineLearningOutlierDetectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*machineLearningOutlierDetectorState)(nil)).Elem()
}

type machineLearningOutlierDetectorArgs struct {
	// The algorithm to use and its configuration. See
	// https://grafana.com/docs/grafana-cloud/machine-learning/outlier-detection/ for details.
	Algorithm MachineLearningOutlierDetectorAlgorithm `pulumi:"algorithm"`
	// The id of the datasource to query.
	//
	// Deprecated: Use datasourceUid instead.
	DatasourceId *int `pulumi:"datasourceId"`
	// The type of datasource being queried. Currently allowed values are prometheus, graphite, loki, postgres, and datadog.
	DatasourceType string `pulumi:"datasourceType"`
	// The uid of the datasource to query.
	DatasourceUid *string `pulumi:"datasourceUid"`
	// A description of the outlier detector.
	Description *string `pulumi:"description"`
	// The data interval in seconds to monitor.
	Interval *int `pulumi:"interval"`
	// The metric used to query the outlier detector results.
	Metric string `pulumi:"metric"`
	// The name of the outlier detector.
	Name *string `pulumi:"name"`
	// An object representing the query params to query Grafana with.
	QueryParams map[string]interface{} `pulumi:"queryParams"`
}

// The set of arguments for constructing a MachineLearningOutlierDetector resource.
type MachineLearningOutlierDetectorArgs struct {
	// The algorithm to use and its configuration. See
	// https://grafana.com/docs/grafana-cloud/machine-learning/outlier-detection/ for details.
	Algorithm MachineLearningOutlierDetectorAlgorithmInput
	// The id of the datasource to query.
	//
	// Deprecated: Use datasourceUid instead.
	DatasourceId pulumi.IntPtrInput
	// The type of datasource being queried. Currently allowed values are prometheus, graphite, loki, postgres, and datadog.
	DatasourceType pulumi.StringInput
	// The uid of the datasource to query.
	DatasourceUid pulumi.StringPtrInput
	// A description of the outlier detector.
	Description pulumi.StringPtrInput
	// The data interval in seconds to monitor.
	Interval pulumi.IntPtrInput
	// The metric used to query the outlier detector results.
	Metric pulumi.StringInput
	// The name of the outlier detector.
	Name pulumi.StringPtrInput
	// An object representing the query params to query Grafana with.
	QueryParams pulumi.MapInput
}

func (MachineLearningOutlierDetectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*machineLearningOutlierDetectorArgs)(nil)).Elem()
}

type MachineLearningOutlierDetectorInput interface {
	pulumi.Input

	ToMachineLearningOutlierDetectorOutput() MachineLearningOutlierDetectorOutput
	ToMachineLearningOutlierDetectorOutputWithContext(ctx context.Context) MachineLearningOutlierDetectorOutput
}

func (*MachineLearningOutlierDetector) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineLearningOutlierDetector)(nil)).Elem()
}

func (i *MachineLearningOutlierDetector) ToMachineLearningOutlierDetectorOutput() MachineLearningOutlierDetectorOutput {
	return i.ToMachineLearningOutlierDetectorOutputWithContext(context.Background())
}

func (i *MachineLearningOutlierDetector) ToMachineLearningOutlierDetectorOutputWithContext(ctx context.Context) MachineLearningOutlierDetectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineLearningOutlierDetectorOutput)
}

// MachineLearningOutlierDetectorArrayInput is an input type that accepts MachineLearningOutlierDetectorArray and MachineLearningOutlierDetectorArrayOutput values.
// You can construct a concrete instance of `MachineLearningOutlierDetectorArrayInput` via:
//
//	MachineLearningOutlierDetectorArray{ MachineLearningOutlierDetectorArgs{...} }
type MachineLearningOutlierDetectorArrayInput interface {
	pulumi.Input

	ToMachineLearningOutlierDetectorArrayOutput() MachineLearningOutlierDetectorArrayOutput
	ToMachineLearningOutlierDetectorArrayOutputWithContext(context.Context) MachineLearningOutlierDetectorArrayOutput
}

type MachineLearningOutlierDetectorArray []MachineLearningOutlierDetectorInput

func (MachineLearningOutlierDetectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MachineLearningOutlierDetector)(nil)).Elem()
}

func (i MachineLearningOutlierDetectorArray) ToMachineLearningOutlierDetectorArrayOutput() MachineLearningOutlierDetectorArrayOutput {
	return i.ToMachineLearningOutlierDetectorArrayOutputWithContext(context.Background())
}

func (i MachineLearningOutlierDetectorArray) ToMachineLearningOutlierDetectorArrayOutputWithContext(ctx context.Context) MachineLearningOutlierDetectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineLearningOutlierDetectorArrayOutput)
}

// MachineLearningOutlierDetectorMapInput is an input type that accepts MachineLearningOutlierDetectorMap and MachineLearningOutlierDetectorMapOutput values.
// You can construct a concrete instance of `MachineLearningOutlierDetectorMapInput` via:
//
//	MachineLearningOutlierDetectorMap{ "key": MachineLearningOutlierDetectorArgs{...} }
type MachineLearningOutlierDetectorMapInput interface {
	pulumi.Input

	ToMachineLearningOutlierDetectorMapOutput() MachineLearningOutlierDetectorMapOutput
	ToMachineLearningOutlierDetectorMapOutputWithContext(context.Context) MachineLearningOutlierDetectorMapOutput
}

type MachineLearningOutlierDetectorMap map[string]MachineLearningOutlierDetectorInput

func (MachineLearningOutlierDetectorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MachineLearningOutlierDetector)(nil)).Elem()
}

func (i MachineLearningOutlierDetectorMap) ToMachineLearningOutlierDetectorMapOutput() MachineLearningOutlierDetectorMapOutput {
	return i.ToMachineLearningOutlierDetectorMapOutputWithContext(context.Background())
}

func (i MachineLearningOutlierDetectorMap) ToMachineLearningOutlierDetectorMapOutputWithContext(ctx context.Context) MachineLearningOutlierDetectorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineLearningOutlierDetectorMapOutput)
}

type MachineLearningOutlierDetectorOutput struct{ *pulumi.OutputState }

func (MachineLearningOutlierDetectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineLearningOutlierDetector)(nil)).Elem()
}

func (o MachineLearningOutlierDetectorOutput) ToMachineLearningOutlierDetectorOutput() MachineLearningOutlierDetectorOutput {
	return o
}

func (o MachineLearningOutlierDetectorOutput) ToMachineLearningOutlierDetectorOutputWithContext(ctx context.Context) MachineLearningOutlierDetectorOutput {
	return o
}

// The algorithm to use and its configuration. See
// https://grafana.com/docs/grafana-cloud/machine-learning/outlier-detection/ for details.
func (o MachineLearningOutlierDetectorOutput) Algorithm() MachineLearningOutlierDetectorAlgorithmOutput {
	return o.ApplyT(func(v *MachineLearningOutlierDetector) MachineLearningOutlierDetectorAlgorithmOutput {
		return v.Algorithm
	}).(MachineLearningOutlierDetectorAlgorithmOutput)
}

// The id of the datasource to query.
//
// Deprecated: Use datasourceUid instead.
func (o MachineLearningOutlierDetectorOutput) DatasourceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineLearningOutlierDetector) pulumi.IntPtrOutput { return v.DatasourceId }).(pulumi.IntPtrOutput)
}

// The type of datasource being queried. Currently allowed values are prometheus, graphite, loki, postgres, and datadog.
func (o MachineLearningOutlierDetectorOutput) DatasourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *MachineLearningOutlierDetector) pulumi.StringOutput { return v.DatasourceType }).(pulumi.StringOutput)
}

// The uid of the datasource to query.
func (o MachineLearningOutlierDetectorOutput) DatasourceUid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineLearningOutlierDetector) pulumi.StringPtrOutput { return v.DatasourceUid }).(pulumi.StringPtrOutput)
}

// A description of the outlier detector.
func (o MachineLearningOutlierDetectorOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineLearningOutlierDetector) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The data interval in seconds to monitor.
func (o MachineLearningOutlierDetectorOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineLearningOutlierDetector) pulumi.IntPtrOutput { return v.Interval }).(pulumi.IntPtrOutput)
}

// The metric used to query the outlier detector results.
func (o MachineLearningOutlierDetectorOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v *MachineLearningOutlierDetector) pulumi.StringOutput { return v.Metric }).(pulumi.StringOutput)
}

// The name of the outlier detector.
func (o MachineLearningOutlierDetectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MachineLearningOutlierDetector) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// An object representing the query params to query Grafana with.
func (o MachineLearningOutlierDetectorOutput) QueryParams() pulumi.MapOutput {
	return o.ApplyT(func(v *MachineLearningOutlierDetector) pulumi.MapOutput { return v.QueryParams }).(pulumi.MapOutput)
}

type MachineLearningOutlierDetectorArrayOutput struct{ *pulumi.OutputState }

func (MachineLearningOutlierDetectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MachineLearningOutlierDetector)(nil)).Elem()
}

func (o MachineLearningOutlierDetectorArrayOutput) ToMachineLearningOutlierDetectorArrayOutput() MachineLearningOutlierDetectorArrayOutput {
	return o
}

func (o MachineLearningOutlierDetectorArrayOutput) ToMachineLearningOutlierDetectorArrayOutputWithContext(ctx context.Context) MachineLearningOutlierDetectorArrayOutput {
	return o
}

func (o MachineLearningOutlierDetectorArrayOutput) Index(i pulumi.IntInput) MachineLearningOutlierDetectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MachineLearningOutlierDetector {
		return vs[0].([]*MachineLearningOutlierDetector)[vs[1].(int)]
	}).(MachineLearningOutlierDetectorOutput)
}

type MachineLearningOutlierDetectorMapOutput struct{ *pulumi.OutputState }

func (MachineLearningOutlierDetectorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MachineLearningOutlierDetector)(nil)).Elem()
}

func (o MachineLearningOutlierDetectorMapOutput) ToMachineLearningOutlierDetectorMapOutput() MachineLearningOutlierDetectorMapOutput {
	return o
}

func (o MachineLearningOutlierDetectorMapOutput) ToMachineLearningOutlierDetectorMapOutputWithContext(ctx context.Context) MachineLearningOutlierDetectorMapOutput {
	return o
}

func (o MachineLearningOutlierDetectorMapOutput) MapIndex(k pulumi.StringInput) MachineLearningOutlierDetectorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MachineLearningOutlierDetector {
		return vs[0].(map[string]*MachineLearningOutlierDetector)[vs[1].(string)]
	}).(MachineLearningOutlierDetectorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MachineLearningOutlierDetectorInput)(nil)).Elem(), &MachineLearningOutlierDetector{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineLearningOutlierDetectorArrayInput)(nil)).Elem(), MachineLearningOutlierDetectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineLearningOutlierDetectorMapInput)(nil)).Elem(), MachineLearningOutlierDetectorMap{})
	pulumi.RegisterOutputType(MachineLearningOutlierDetectorOutput{})
	pulumi.RegisterOutputType(MachineLearningOutlierDetectorArrayOutput{})
	pulumi.RegisterOutputType(MachineLearningOutlierDetectorMapOutput{})
}
