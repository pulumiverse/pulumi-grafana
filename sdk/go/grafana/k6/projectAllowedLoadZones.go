// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package k6

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/v2/go/grafana/internal"
)

// Manages allowed private load zones for a k6 project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-grafana/sdk/v2/go/grafana/k6"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			testProjectAllowedLoadZones, err := k6.NewProject(ctx, "test_project_allowed_load_zones", &k6.ProjectArgs{
//				Name: pulumi.String("Terraform Project Test Allowed Load Zones"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = k6.NewProjectAllowedLoadZones(ctx, "test_allowed_zones", &k6.ProjectAllowedLoadZonesArgs{
//				ProjectId: testProjectAllowedLoadZones.ID(),
//				AllowedLoadZones: pulumi.StringArray{
//					pulumi.String("my-load-zone-1"),
//					pulumi.String("other-load-zone"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import grafana:k6/projectAllowedLoadZones:ProjectAllowedLoadZones name "{{ project_id }}"
// ```
type ProjectAllowedLoadZones struct {
	pulumi.CustomResourceState

	// List of allowed private k6 load zone IDs for this project.
	AllowedLoadZones pulumi.StringArrayOutput `pulumi:"allowedLoadZones"`
	// The identifier of the project to manage private allowed load zones for.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
}

// NewProjectAllowedLoadZones registers a new resource with the given unique name, arguments, and options.
func NewProjectAllowedLoadZones(ctx *pulumi.Context,
	name string, args *ProjectAllowedLoadZonesArgs, opts ...pulumi.ResourceOption) (*ProjectAllowedLoadZones, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AllowedLoadZones == nil {
		return nil, errors.New("invalid value for required argument 'AllowedLoadZones'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProjectAllowedLoadZones
	err := ctx.RegisterResource("grafana:k6/projectAllowedLoadZones:ProjectAllowedLoadZones", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProjectAllowedLoadZones gets an existing ProjectAllowedLoadZones resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProjectAllowedLoadZones(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectAllowedLoadZonesState, opts ...pulumi.ResourceOption) (*ProjectAllowedLoadZones, error) {
	var resource ProjectAllowedLoadZones
	err := ctx.ReadResource("grafana:k6/projectAllowedLoadZones:ProjectAllowedLoadZones", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProjectAllowedLoadZones resources.
type projectAllowedLoadZonesState struct {
	// List of allowed private k6 load zone IDs for this project.
	AllowedLoadZones []string `pulumi:"allowedLoadZones"`
	// The identifier of the project to manage private allowed load zones for.
	ProjectId *string `pulumi:"projectId"`
}

type ProjectAllowedLoadZonesState struct {
	// List of allowed private k6 load zone IDs for this project.
	AllowedLoadZones pulumi.StringArrayInput
	// The identifier of the project to manage private allowed load zones for.
	ProjectId pulumi.StringPtrInput
}

func (ProjectAllowedLoadZonesState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectAllowedLoadZonesState)(nil)).Elem()
}

type projectAllowedLoadZonesArgs struct {
	// List of allowed private k6 load zone IDs for this project.
	AllowedLoadZones []string `pulumi:"allowedLoadZones"`
	// The identifier of the project to manage private allowed load zones for.
	ProjectId string `pulumi:"projectId"`
}

// The set of arguments for constructing a ProjectAllowedLoadZones resource.
type ProjectAllowedLoadZonesArgs struct {
	// List of allowed private k6 load zone IDs for this project.
	AllowedLoadZones pulumi.StringArrayInput
	// The identifier of the project to manage private allowed load zones for.
	ProjectId pulumi.StringInput
}

func (ProjectAllowedLoadZonesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectAllowedLoadZonesArgs)(nil)).Elem()
}

type ProjectAllowedLoadZonesInput interface {
	pulumi.Input

	ToProjectAllowedLoadZonesOutput() ProjectAllowedLoadZonesOutput
	ToProjectAllowedLoadZonesOutputWithContext(ctx context.Context) ProjectAllowedLoadZonesOutput
}

func (*ProjectAllowedLoadZones) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectAllowedLoadZones)(nil)).Elem()
}

func (i *ProjectAllowedLoadZones) ToProjectAllowedLoadZonesOutput() ProjectAllowedLoadZonesOutput {
	return i.ToProjectAllowedLoadZonesOutputWithContext(context.Background())
}

func (i *ProjectAllowedLoadZones) ToProjectAllowedLoadZonesOutputWithContext(ctx context.Context) ProjectAllowedLoadZonesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAllowedLoadZonesOutput)
}

// ProjectAllowedLoadZonesArrayInput is an input type that accepts ProjectAllowedLoadZonesArray and ProjectAllowedLoadZonesArrayOutput values.
// You can construct a concrete instance of `ProjectAllowedLoadZonesArrayInput` via:
//
//	ProjectAllowedLoadZonesArray{ ProjectAllowedLoadZonesArgs{...} }
type ProjectAllowedLoadZonesArrayInput interface {
	pulumi.Input

	ToProjectAllowedLoadZonesArrayOutput() ProjectAllowedLoadZonesArrayOutput
	ToProjectAllowedLoadZonesArrayOutputWithContext(context.Context) ProjectAllowedLoadZonesArrayOutput
}

type ProjectAllowedLoadZonesArray []ProjectAllowedLoadZonesInput

func (ProjectAllowedLoadZonesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProjectAllowedLoadZones)(nil)).Elem()
}

func (i ProjectAllowedLoadZonesArray) ToProjectAllowedLoadZonesArrayOutput() ProjectAllowedLoadZonesArrayOutput {
	return i.ToProjectAllowedLoadZonesArrayOutputWithContext(context.Background())
}

func (i ProjectAllowedLoadZonesArray) ToProjectAllowedLoadZonesArrayOutputWithContext(ctx context.Context) ProjectAllowedLoadZonesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAllowedLoadZonesArrayOutput)
}

// ProjectAllowedLoadZonesMapInput is an input type that accepts ProjectAllowedLoadZonesMap and ProjectAllowedLoadZonesMapOutput values.
// You can construct a concrete instance of `ProjectAllowedLoadZonesMapInput` via:
//
//	ProjectAllowedLoadZonesMap{ "key": ProjectAllowedLoadZonesArgs{...} }
type ProjectAllowedLoadZonesMapInput interface {
	pulumi.Input

	ToProjectAllowedLoadZonesMapOutput() ProjectAllowedLoadZonesMapOutput
	ToProjectAllowedLoadZonesMapOutputWithContext(context.Context) ProjectAllowedLoadZonesMapOutput
}

type ProjectAllowedLoadZonesMap map[string]ProjectAllowedLoadZonesInput

func (ProjectAllowedLoadZonesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProjectAllowedLoadZones)(nil)).Elem()
}

func (i ProjectAllowedLoadZonesMap) ToProjectAllowedLoadZonesMapOutput() ProjectAllowedLoadZonesMapOutput {
	return i.ToProjectAllowedLoadZonesMapOutputWithContext(context.Background())
}

func (i ProjectAllowedLoadZonesMap) ToProjectAllowedLoadZonesMapOutputWithContext(ctx context.Context) ProjectAllowedLoadZonesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAllowedLoadZonesMapOutput)
}

type ProjectAllowedLoadZonesOutput struct{ *pulumi.OutputState }

func (ProjectAllowedLoadZonesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectAllowedLoadZones)(nil)).Elem()
}

func (o ProjectAllowedLoadZonesOutput) ToProjectAllowedLoadZonesOutput() ProjectAllowedLoadZonesOutput {
	return o
}

func (o ProjectAllowedLoadZonesOutput) ToProjectAllowedLoadZonesOutputWithContext(ctx context.Context) ProjectAllowedLoadZonesOutput {
	return o
}

// List of allowed private k6 load zone IDs for this project.
func (o ProjectAllowedLoadZonesOutput) AllowedLoadZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectAllowedLoadZones) pulumi.StringArrayOutput { return v.AllowedLoadZones }).(pulumi.StringArrayOutput)
}

// The identifier of the project to manage private allowed load zones for.
func (o ProjectAllowedLoadZonesOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectAllowedLoadZones) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

type ProjectAllowedLoadZonesArrayOutput struct{ *pulumi.OutputState }

func (ProjectAllowedLoadZonesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProjectAllowedLoadZones)(nil)).Elem()
}

func (o ProjectAllowedLoadZonesArrayOutput) ToProjectAllowedLoadZonesArrayOutput() ProjectAllowedLoadZonesArrayOutput {
	return o
}

func (o ProjectAllowedLoadZonesArrayOutput) ToProjectAllowedLoadZonesArrayOutputWithContext(ctx context.Context) ProjectAllowedLoadZonesArrayOutput {
	return o
}

func (o ProjectAllowedLoadZonesArrayOutput) Index(i pulumi.IntInput) ProjectAllowedLoadZonesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProjectAllowedLoadZones {
		return vs[0].([]*ProjectAllowedLoadZones)[vs[1].(int)]
	}).(ProjectAllowedLoadZonesOutput)
}

type ProjectAllowedLoadZonesMapOutput struct{ *pulumi.OutputState }

func (ProjectAllowedLoadZonesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProjectAllowedLoadZones)(nil)).Elem()
}

func (o ProjectAllowedLoadZonesMapOutput) ToProjectAllowedLoadZonesMapOutput() ProjectAllowedLoadZonesMapOutput {
	return o
}

func (o ProjectAllowedLoadZonesMapOutput) ToProjectAllowedLoadZonesMapOutputWithContext(ctx context.Context) ProjectAllowedLoadZonesMapOutput {
	return o
}

func (o ProjectAllowedLoadZonesMapOutput) MapIndex(k pulumi.StringInput) ProjectAllowedLoadZonesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProjectAllowedLoadZones {
		return vs[0].(map[string]*ProjectAllowedLoadZones)[vs[1].(string)]
	}).(ProjectAllowedLoadZonesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAllowedLoadZonesInput)(nil)).Elem(), &ProjectAllowedLoadZones{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAllowedLoadZonesArrayInput)(nil)).Elem(), ProjectAllowedLoadZonesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAllowedLoadZonesMapInput)(nil)).Elem(), ProjectAllowedLoadZonesMap{})
	pulumi.RegisterOutputType(ProjectAllowedLoadZonesOutput{})
	pulumi.RegisterOutputType(ProjectAllowedLoadZonesArrayOutput{})
	pulumi.RegisterOutputType(ProjectAllowedLoadZonesMapOutput{})
}
