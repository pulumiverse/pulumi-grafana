// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package k6

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/internal"
)

// Retrieves a k6 project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/k6"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := k6.NewProject(ctx, "test", &k6.ProjectArgs{
//				Name: pulumi.String("Terraform Test Project"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = test.ID().ApplyT(func(id string) (k6.GetProjectResult, error) {
//				return k6.GetProjectResult(interface{}(k6.LookupProjectOutput(ctx, k6.GetProjectOutputArgs{
//					Id: id,
//				}, nil))), nil
//			}).(k6.GetProjectResultOutput)
//			return nil
//		})
//	}
//
// ```
func LookupProject(ctx *pulumi.Context, args *LookupProjectArgs, opts ...pulumi.InvokeOption) (*LookupProjectResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProjectResult
	err := ctx.Invoke("grafana:k6/getProject:getProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProject.
type LookupProjectArgs struct {
	// Numeric identifier of the project.
	Id int `pulumi:"id"`
}

// A collection of values returned by getProject.
type LookupProjectResult struct {
	// The date when the project was created.
	Created string `pulumi:"created"`
	// The Grafana folder uid.
	GrafanaFolderUid string `pulumi:"grafanaFolderUid"`
	// Numeric identifier of the project.
	Id int `pulumi:"id"`
	// Whether this project is the default for running tests when no explicit project identifier is provided.
	IsDefault bool `pulumi:"isDefault"`
	// Human-friendly identifier of the project.
	Name string `pulumi:"name"`
	// The date when the project was last updated.
	Updated string `pulumi:"updated"`
}

func LookupProjectOutput(ctx *pulumi.Context, args LookupProjectOutputArgs, opts ...pulumi.InvokeOption) LookupProjectResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupProjectResultOutput, error) {
			args := v.(LookupProjectArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("grafana:k6/getProject:getProject", args, LookupProjectResultOutput{}, options).(LookupProjectResultOutput), nil
		}).(LookupProjectResultOutput)
}

// A collection of arguments for invoking getProject.
type LookupProjectOutputArgs struct {
	// Numeric identifier of the project.
	Id pulumi.IntInput `pulumi:"id"`
}

func (LookupProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectArgs)(nil)).Elem()
}

// A collection of values returned by getProject.
type LookupProjectResultOutput struct{ *pulumi.OutputState }

func (LookupProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectResult)(nil)).Elem()
}

func (o LookupProjectResultOutput) ToLookupProjectResultOutput() LookupProjectResultOutput {
	return o
}

func (o LookupProjectResultOutput) ToLookupProjectResultOutputWithContext(ctx context.Context) LookupProjectResultOutput {
	return o
}

// The date when the project was created.
func (o LookupProjectResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Created }).(pulumi.StringOutput)
}

// The Grafana folder uid.
func (o LookupProjectResultOutput) GrafanaFolderUid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.GrafanaFolderUid }).(pulumi.StringOutput)
}

// Numeric identifier of the project.
func (o LookupProjectResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v LookupProjectResult) int { return v.Id }).(pulumi.IntOutput)
}

// Whether this project is the default for running tests when no explicit project identifier is provided.
func (o LookupProjectResultOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Human-friendly identifier of the project.
func (o LookupProjectResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Name }).(pulumi.StringOutput)
}

// The date when the project was last updated.
func (o LookupProjectResultOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Updated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectResultOutput{})
}
