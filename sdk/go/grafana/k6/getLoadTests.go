// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package k6

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/internal"
)

// Retrieves all k6 load tests that belong to a project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/k6"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			loadTestProject, err := k6.NewProject(ctx, "load_test_project", &k6.ProjectArgs{
//				Name: pulumi.String("Terraform Load Test Project"),
//			})
//			if err != nil {
//				return err
//			}
//			testLoadTest, err := k6.NewLoadTest(ctx, "test_load_test", &k6.LoadTestArgs{
//				ProjectId: loadTestProject.ID(),
//				Name:      pulumi.String("Terraform Test Load Test"),
//				Script:    pulumi.String("export default function() {\n  console.log('Hello from k6!');\n}\n"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				loadTestProject,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = k6.NewLoadTest(ctx, "test_load_test_2", &k6.LoadTestArgs{
//				ProjectId: loadTestProject.ID(),
//				Name:      pulumi.String("Terraform Test Load Test (2)"),
//				Script:    pulumi.String("export default function() {\n  console.log('Hello from k6!');\n}\n"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				testLoadTest,
//			}))
//			if err != nil {
//				return err
//			}
//			_ = loadTestProject.ID().ApplyT(func(id string) (k6.GetLoadTestsResult, error) {
//				return k6.GetLoadTestsResult(interface{}(k6.GetLoadTestsOutput(ctx, k6.GetLoadTestsOutputArgs{
//					ProjectId: id,
//				}, nil))), nil
//			}).(k6.GetLoadTestsResultOutput)
//			_ = loadTestProject.ID().ApplyT(func(id string) (k6.GetLoadTestsResult, error) {
//				return k6.GetLoadTestsResult(interface{}(k6.GetLoadTestsOutput(ctx, k6.GetLoadTestsOutputArgs{
//					Name:      "Terraform Test Load Test (2)",
//					ProjectId: id,
//				}, nil))), nil
//			}).(k6.GetLoadTestsResultOutput)
//			return nil
//		})
//	}
//
// ```
func GetLoadTests(ctx *pulumi.Context, args *GetLoadTestsArgs, opts ...pulumi.InvokeOption) (*GetLoadTestsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLoadTestsResult
	err := ctx.Invoke("grafana:k6/getLoadTests:getLoadTests", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLoadTests.
type GetLoadTestsArgs struct {
	// Human-friendly identifier of the load test.
	Name *string `pulumi:"name"`
	// The identifier of the project the load tests belong to.
	ProjectId int `pulumi:"projectId"`
}

// A collection of values returned by getLoadTests.
type GetLoadTestsResult struct {
	// The identifier of the project the load tests belong to. This is set to the same as the project_id.
	Id        int                    `pulumi:"id"`
	LoadTests []GetLoadTestsLoadTest `pulumi:"loadTests"`
	// Human-friendly identifier of the load test.
	Name *string `pulumi:"name"`
	// The identifier of the project the load tests belong to.
	ProjectId int `pulumi:"projectId"`
}

func GetLoadTestsOutput(ctx *pulumi.Context, args GetLoadTestsOutputArgs, opts ...pulumi.InvokeOption) GetLoadTestsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLoadTestsResultOutput, error) {
			args := v.(GetLoadTestsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("grafana:k6/getLoadTests:getLoadTests", args, GetLoadTestsResultOutput{}, options).(GetLoadTestsResultOutput), nil
		}).(GetLoadTestsResultOutput)
}

// A collection of arguments for invoking getLoadTests.
type GetLoadTestsOutputArgs struct {
	// Human-friendly identifier of the load test.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The identifier of the project the load tests belong to.
	ProjectId pulumi.IntInput `pulumi:"projectId"`
}

func (GetLoadTestsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadTestsArgs)(nil)).Elem()
}

// A collection of values returned by getLoadTests.
type GetLoadTestsResultOutput struct{ *pulumi.OutputState }

func (GetLoadTestsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadTestsResult)(nil)).Elem()
}

func (o GetLoadTestsResultOutput) ToGetLoadTestsResultOutput() GetLoadTestsResultOutput {
	return o
}

func (o GetLoadTestsResultOutput) ToGetLoadTestsResultOutputWithContext(ctx context.Context) GetLoadTestsResultOutput {
	return o
}

// The identifier of the project the load tests belong to. This is set to the same as the project_id.
func (o GetLoadTestsResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadTestsResult) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetLoadTestsResultOutput) LoadTests() GetLoadTestsLoadTestArrayOutput {
	return o.ApplyT(func(v GetLoadTestsResult) []GetLoadTestsLoadTest { return v.LoadTests }).(GetLoadTestsLoadTestArrayOutput)
}

// Human-friendly identifier of the load test.
func (o GetLoadTestsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLoadTestsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The identifier of the project the load tests belong to.
func (o GetLoadTestsResultOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadTestsResult) int { return v.ProjectId }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLoadTestsResultOutput{})
}
