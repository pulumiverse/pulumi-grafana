// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package k6

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/v2/go/grafana/internal"
)

// Retrieves allowed private load zones for a k6 project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-grafana/sdk/v2/go/grafana/k6"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			testProjectAllowedLoadZones, err := k6.NewProject(ctx, "test_project_allowed_load_zones", &k6.ProjectArgs{
//				Name: pulumi.String("Terraform Project Test Allowed Load Zones"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = k6.LookupProjectAllowedLoadZonesOutput(ctx, k6.GetProjectAllowedLoadZonesOutputArgs{
//				ProjectId: testProjectAllowedLoadZones.ID(),
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func LookupProjectAllowedLoadZones(ctx *pulumi.Context, args *LookupProjectAllowedLoadZonesArgs, opts ...pulumi.InvokeOption) (*LookupProjectAllowedLoadZonesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProjectAllowedLoadZonesResult
	err := ctx.Invoke("grafana:k6/getProjectAllowedLoadZones:getProjectAllowedLoadZones", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProjectAllowedLoadZones.
type LookupProjectAllowedLoadZonesArgs struct {
	// The identifier of the project to retrieve private allowed load zones for.
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getProjectAllowedLoadZones.
type LookupProjectAllowedLoadZonesResult struct {
	// List of allowed private k6 load zone IDs for this project.
	AllowedLoadZones []string `pulumi:"allowedLoadZones"`
	// The identifier of the project. This is set to the same as the project_id.
	Id string `pulumi:"id"`
	// The identifier of the project to retrieve private allowed load zones for.
	ProjectId string `pulumi:"projectId"`
}

func LookupProjectAllowedLoadZonesOutput(ctx *pulumi.Context, args LookupProjectAllowedLoadZonesOutputArgs, opts ...pulumi.InvokeOption) LookupProjectAllowedLoadZonesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupProjectAllowedLoadZonesResultOutput, error) {
			args := v.(LookupProjectAllowedLoadZonesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("grafana:k6/getProjectAllowedLoadZones:getProjectAllowedLoadZones", args, LookupProjectAllowedLoadZonesResultOutput{}, options).(LookupProjectAllowedLoadZonesResultOutput), nil
		}).(LookupProjectAllowedLoadZonesResultOutput)
}

// A collection of arguments for invoking getProjectAllowedLoadZones.
type LookupProjectAllowedLoadZonesOutputArgs struct {
	// The identifier of the project to retrieve private allowed load zones for.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (LookupProjectAllowedLoadZonesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectAllowedLoadZonesArgs)(nil)).Elem()
}

// A collection of values returned by getProjectAllowedLoadZones.
type LookupProjectAllowedLoadZonesResultOutput struct{ *pulumi.OutputState }

func (LookupProjectAllowedLoadZonesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectAllowedLoadZonesResult)(nil)).Elem()
}

func (o LookupProjectAllowedLoadZonesResultOutput) ToLookupProjectAllowedLoadZonesResultOutput() LookupProjectAllowedLoadZonesResultOutput {
	return o
}

func (o LookupProjectAllowedLoadZonesResultOutput) ToLookupProjectAllowedLoadZonesResultOutputWithContext(ctx context.Context) LookupProjectAllowedLoadZonesResultOutput {
	return o
}

// List of allowed private k6 load zone IDs for this project.
func (o LookupProjectAllowedLoadZonesResultOutput) AllowedLoadZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupProjectAllowedLoadZonesResult) []string { return v.AllowedLoadZones }).(pulumi.StringArrayOutput)
}

// The identifier of the project. This is set to the same as the project_id.
func (o LookupProjectAllowedLoadZonesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectAllowedLoadZonesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The identifier of the project to retrieve private allowed load zones for.
func (o LookupProjectAllowedLoadZonesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectAllowedLoadZonesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectAllowedLoadZonesResultOutput{})
}
