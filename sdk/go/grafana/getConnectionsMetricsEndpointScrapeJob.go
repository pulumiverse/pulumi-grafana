// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/internal"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/connections"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := connections.LookupMetricsEndpointScrapeJob(ctx, &connections.LookupMetricsEndpointScrapeJobArgs{
//				StackId: "1",
//				Name:    "my-scrape-job",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: grafana.index/getconnectionsmetricsendpointscrapejob.getConnectionsMetricsEndpointScrapeJob has been deprecated in favor of grafana.connections/getmetricsendpointscrapejob.getMetricsEndpointScrapeJob
func LookupConnectionsMetricsEndpointScrapeJob(ctx *pulumi.Context, args *LookupConnectionsMetricsEndpointScrapeJobArgs, opts ...pulumi.InvokeOption) (*LookupConnectionsMetricsEndpointScrapeJobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConnectionsMetricsEndpointScrapeJobResult
	err := ctx.Invoke("grafana:index/getConnectionsMetricsEndpointScrapeJob:getConnectionsMetricsEndpointScrapeJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnectionsMetricsEndpointScrapeJob.
type LookupConnectionsMetricsEndpointScrapeJobArgs struct {
	Name    string `pulumi:"name"`
	StackId string `pulumi:"stackId"`
}

// A collection of values returned by getConnectionsMetricsEndpointScrapeJob.
type LookupConnectionsMetricsEndpointScrapeJobResult struct {
	// Password for basic authentication.
	AuthenticationBasicPassword string `pulumi:"authenticationBasicPassword"`
	// Username for basic authentication.
	AuthenticationBasicUsername string `pulumi:"authenticationBasicUsername"`
	// Token for authentication bearer.
	AuthenticationBearerToken string `pulumi:"authenticationBearerToken"`
	// Method to pass authentication credentials: basic or bearer.
	AuthenticationMethod string `pulumi:"authenticationMethod"`
	// Whether the metrics endpoint scrape job is enabled or not.
	Enabled bool   `pulumi:"enabled"`
	Id      string `pulumi:"id"`
	Name    string `pulumi:"name"`
	// Frequency for scraping the metrics endpoint: 30, 60, or 120 seconds.
	ScrapeIntervalSeconds int    `pulumi:"scrapeIntervalSeconds"`
	StackId               string `pulumi:"stackId"`
	// The url to scrape metrics.
	Url string `pulumi:"url"`
}

func LookupConnectionsMetricsEndpointScrapeJobOutput(ctx *pulumi.Context, args LookupConnectionsMetricsEndpointScrapeJobOutputArgs, opts ...pulumi.InvokeOption) LookupConnectionsMetricsEndpointScrapeJobResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupConnectionsMetricsEndpointScrapeJobResultOutput, error) {
			args := v.(LookupConnectionsMetricsEndpointScrapeJobArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("grafana:index/getConnectionsMetricsEndpointScrapeJob:getConnectionsMetricsEndpointScrapeJob", args, LookupConnectionsMetricsEndpointScrapeJobResultOutput{}, options).(LookupConnectionsMetricsEndpointScrapeJobResultOutput), nil
		}).(LookupConnectionsMetricsEndpointScrapeJobResultOutput)
}

// A collection of arguments for invoking getConnectionsMetricsEndpointScrapeJob.
type LookupConnectionsMetricsEndpointScrapeJobOutputArgs struct {
	Name    pulumi.StringInput `pulumi:"name"`
	StackId pulumi.StringInput `pulumi:"stackId"`
}

func (LookupConnectionsMetricsEndpointScrapeJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionsMetricsEndpointScrapeJobArgs)(nil)).Elem()
}

// A collection of values returned by getConnectionsMetricsEndpointScrapeJob.
type LookupConnectionsMetricsEndpointScrapeJobResultOutput struct{ *pulumi.OutputState }

func (LookupConnectionsMetricsEndpointScrapeJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionsMetricsEndpointScrapeJobResult)(nil)).Elem()
}

func (o LookupConnectionsMetricsEndpointScrapeJobResultOutput) ToLookupConnectionsMetricsEndpointScrapeJobResultOutput() LookupConnectionsMetricsEndpointScrapeJobResultOutput {
	return o
}

func (o LookupConnectionsMetricsEndpointScrapeJobResultOutput) ToLookupConnectionsMetricsEndpointScrapeJobResultOutputWithContext(ctx context.Context) LookupConnectionsMetricsEndpointScrapeJobResultOutput {
	return o
}

// Password for basic authentication.
func (o LookupConnectionsMetricsEndpointScrapeJobResultOutput) AuthenticationBasicPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionsMetricsEndpointScrapeJobResult) string { return v.AuthenticationBasicPassword }).(pulumi.StringOutput)
}

// Username for basic authentication.
func (o LookupConnectionsMetricsEndpointScrapeJobResultOutput) AuthenticationBasicUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionsMetricsEndpointScrapeJobResult) string { return v.AuthenticationBasicUsername }).(pulumi.StringOutput)
}

// Token for authentication bearer.
func (o LookupConnectionsMetricsEndpointScrapeJobResultOutput) AuthenticationBearerToken() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionsMetricsEndpointScrapeJobResult) string { return v.AuthenticationBearerToken }).(pulumi.StringOutput)
}

// Method to pass authentication credentials: basic or bearer.
func (o LookupConnectionsMetricsEndpointScrapeJobResultOutput) AuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionsMetricsEndpointScrapeJobResult) string { return v.AuthenticationMethod }).(pulumi.StringOutput)
}

// Whether the metrics endpoint scrape job is enabled or not.
func (o LookupConnectionsMetricsEndpointScrapeJobResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupConnectionsMetricsEndpointScrapeJobResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupConnectionsMetricsEndpointScrapeJobResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionsMetricsEndpointScrapeJobResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupConnectionsMetricsEndpointScrapeJobResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionsMetricsEndpointScrapeJobResult) string { return v.Name }).(pulumi.StringOutput)
}

// Frequency for scraping the metrics endpoint: 30, 60, or 120 seconds.
func (o LookupConnectionsMetricsEndpointScrapeJobResultOutput) ScrapeIntervalSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupConnectionsMetricsEndpointScrapeJobResult) int { return v.ScrapeIntervalSeconds }).(pulumi.IntOutput)
}

func (o LookupConnectionsMetricsEndpointScrapeJobResultOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionsMetricsEndpointScrapeJobResult) string { return v.StackId }).(pulumi.StringOutput)
}

// The url to scrape metrics.
func (o LookupConnectionsMetricsEndpointScrapeJobResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionsMetricsEndpointScrapeJobResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectionsMetricsEndpointScrapeJobResultOutput{})
}
