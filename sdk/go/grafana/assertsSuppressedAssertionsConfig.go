// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/v2/go/grafana/internal"
)

// Manages Asserts Disabled Alert Configurations through Grafana API.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-grafana/sdk/v2/go/grafana"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Basic suppressed alert configuration for maintenance
//			_, err := grafana.NewAssertsSuppressedAssertionsConfig(ctx, "maintenance_window", &grafana.AssertsSuppressedAssertionsConfigArgs{
//				Name: pulumi.String("MaintenanceWindow"),
//				MatchLabels: pulumi.StringMap{
//					"service":     pulumi.String("api-service"),
//					"maintenance": pulumi.String("true"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// Suppress specific alertname during deployment
//			_, err = grafana.NewAssertsSuppressedAssertionsConfig(ctx, "deployment_suppression", &grafana.AssertsSuppressedAssertionsConfigArgs{
//				Name: pulumi.String("DeploymentSuppression"),
//				MatchLabels: pulumi.StringMap{
//					"alertname": pulumi.String("HighLatency"),
//					"job":       pulumi.String("web-service"),
//					"env":       pulumi.String("staging"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// Suppress alerts for specific test environment
//			_, err = grafana.NewAssertsSuppressedAssertionsConfig(ctx, "test_environment_suppression", &grafana.AssertsSuppressedAssertionsConfigArgs{
//				Name: pulumi.String("TestEnvironmentSuppression"),
//				MatchLabels: pulumi.StringMap{
//					"alertgroup":  pulumi.String("test.alerts"),
//					"environment": pulumi.String("test"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import grafana:index/assertsSuppressedAssertionsConfig:AssertsSuppressedAssertionsConfig name "{{ name }}"
// ```
type AssertsSuppressedAssertionsConfig struct {
	pulumi.CustomResourceState

	// Labels to match for this disabled alert configuration.
	MatchLabels pulumi.StringMapOutput `pulumi:"matchLabels"`
	// The name of the disabled alert configuration.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewAssertsSuppressedAssertionsConfig registers a new resource with the given unique name, arguments, and options.
func NewAssertsSuppressedAssertionsConfig(ctx *pulumi.Context,
	name string, args *AssertsSuppressedAssertionsConfigArgs, opts ...pulumi.ResourceOption) (*AssertsSuppressedAssertionsConfig, error) {
	if args == nil {
		args = &AssertsSuppressedAssertionsConfigArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AssertsSuppressedAssertionsConfig
	err := ctx.RegisterResource("grafana:index/assertsSuppressedAssertionsConfig:AssertsSuppressedAssertionsConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssertsSuppressedAssertionsConfig gets an existing AssertsSuppressedAssertionsConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssertsSuppressedAssertionsConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssertsSuppressedAssertionsConfigState, opts ...pulumi.ResourceOption) (*AssertsSuppressedAssertionsConfig, error) {
	var resource AssertsSuppressedAssertionsConfig
	err := ctx.ReadResource("grafana:index/assertsSuppressedAssertionsConfig:AssertsSuppressedAssertionsConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AssertsSuppressedAssertionsConfig resources.
type assertsSuppressedAssertionsConfigState struct {
	// Labels to match for this disabled alert configuration.
	MatchLabels map[string]string `pulumi:"matchLabels"`
	// The name of the disabled alert configuration.
	Name *string `pulumi:"name"`
}

type AssertsSuppressedAssertionsConfigState struct {
	// Labels to match for this disabled alert configuration.
	MatchLabels pulumi.StringMapInput
	// The name of the disabled alert configuration.
	Name pulumi.StringPtrInput
}

func (AssertsSuppressedAssertionsConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*assertsSuppressedAssertionsConfigState)(nil)).Elem()
}

type assertsSuppressedAssertionsConfigArgs struct {
	// Labels to match for this disabled alert configuration.
	MatchLabels map[string]string `pulumi:"matchLabels"`
	// The name of the disabled alert configuration.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a AssertsSuppressedAssertionsConfig resource.
type AssertsSuppressedAssertionsConfigArgs struct {
	// Labels to match for this disabled alert configuration.
	MatchLabels pulumi.StringMapInput
	// The name of the disabled alert configuration.
	Name pulumi.StringPtrInput
}

func (AssertsSuppressedAssertionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assertsSuppressedAssertionsConfigArgs)(nil)).Elem()
}

type AssertsSuppressedAssertionsConfigInput interface {
	pulumi.Input

	ToAssertsSuppressedAssertionsConfigOutput() AssertsSuppressedAssertionsConfigOutput
	ToAssertsSuppressedAssertionsConfigOutputWithContext(ctx context.Context) AssertsSuppressedAssertionsConfigOutput
}

func (*AssertsSuppressedAssertionsConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**AssertsSuppressedAssertionsConfig)(nil)).Elem()
}

func (i *AssertsSuppressedAssertionsConfig) ToAssertsSuppressedAssertionsConfigOutput() AssertsSuppressedAssertionsConfigOutput {
	return i.ToAssertsSuppressedAssertionsConfigOutputWithContext(context.Background())
}

func (i *AssertsSuppressedAssertionsConfig) ToAssertsSuppressedAssertionsConfigOutputWithContext(ctx context.Context) AssertsSuppressedAssertionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssertsSuppressedAssertionsConfigOutput)
}

// AssertsSuppressedAssertionsConfigArrayInput is an input type that accepts AssertsSuppressedAssertionsConfigArray and AssertsSuppressedAssertionsConfigArrayOutput values.
// You can construct a concrete instance of `AssertsSuppressedAssertionsConfigArrayInput` via:
//
//	AssertsSuppressedAssertionsConfigArray{ AssertsSuppressedAssertionsConfigArgs{...} }
type AssertsSuppressedAssertionsConfigArrayInput interface {
	pulumi.Input

	ToAssertsSuppressedAssertionsConfigArrayOutput() AssertsSuppressedAssertionsConfigArrayOutput
	ToAssertsSuppressedAssertionsConfigArrayOutputWithContext(context.Context) AssertsSuppressedAssertionsConfigArrayOutput
}

type AssertsSuppressedAssertionsConfigArray []AssertsSuppressedAssertionsConfigInput

func (AssertsSuppressedAssertionsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AssertsSuppressedAssertionsConfig)(nil)).Elem()
}

func (i AssertsSuppressedAssertionsConfigArray) ToAssertsSuppressedAssertionsConfigArrayOutput() AssertsSuppressedAssertionsConfigArrayOutput {
	return i.ToAssertsSuppressedAssertionsConfigArrayOutputWithContext(context.Background())
}

func (i AssertsSuppressedAssertionsConfigArray) ToAssertsSuppressedAssertionsConfigArrayOutputWithContext(ctx context.Context) AssertsSuppressedAssertionsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssertsSuppressedAssertionsConfigArrayOutput)
}

// AssertsSuppressedAssertionsConfigMapInput is an input type that accepts AssertsSuppressedAssertionsConfigMap and AssertsSuppressedAssertionsConfigMapOutput values.
// You can construct a concrete instance of `AssertsSuppressedAssertionsConfigMapInput` via:
//
//	AssertsSuppressedAssertionsConfigMap{ "key": AssertsSuppressedAssertionsConfigArgs{...} }
type AssertsSuppressedAssertionsConfigMapInput interface {
	pulumi.Input

	ToAssertsSuppressedAssertionsConfigMapOutput() AssertsSuppressedAssertionsConfigMapOutput
	ToAssertsSuppressedAssertionsConfigMapOutputWithContext(context.Context) AssertsSuppressedAssertionsConfigMapOutput
}

type AssertsSuppressedAssertionsConfigMap map[string]AssertsSuppressedAssertionsConfigInput

func (AssertsSuppressedAssertionsConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AssertsSuppressedAssertionsConfig)(nil)).Elem()
}

func (i AssertsSuppressedAssertionsConfigMap) ToAssertsSuppressedAssertionsConfigMapOutput() AssertsSuppressedAssertionsConfigMapOutput {
	return i.ToAssertsSuppressedAssertionsConfigMapOutputWithContext(context.Background())
}

func (i AssertsSuppressedAssertionsConfigMap) ToAssertsSuppressedAssertionsConfigMapOutputWithContext(ctx context.Context) AssertsSuppressedAssertionsConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssertsSuppressedAssertionsConfigMapOutput)
}

type AssertsSuppressedAssertionsConfigOutput struct{ *pulumi.OutputState }

func (AssertsSuppressedAssertionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssertsSuppressedAssertionsConfig)(nil)).Elem()
}

func (o AssertsSuppressedAssertionsConfigOutput) ToAssertsSuppressedAssertionsConfigOutput() AssertsSuppressedAssertionsConfigOutput {
	return o
}

func (o AssertsSuppressedAssertionsConfigOutput) ToAssertsSuppressedAssertionsConfigOutputWithContext(ctx context.Context) AssertsSuppressedAssertionsConfigOutput {
	return o
}

// Labels to match for this disabled alert configuration.
func (o AssertsSuppressedAssertionsConfigOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AssertsSuppressedAssertionsConfig) pulumi.StringMapOutput { return v.MatchLabels }).(pulumi.StringMapOutput)
}

// The name of the disabled alert configuration.
func (o AssertsSuppressedAssertionsConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AssertsSuppressedAssertionsConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type AssertsSuppressedAssertionsConfigArrayOutput struct{ *pulumi.OutputState }

func (AssertsSuppressedAssertionsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AssertsSuppressedAssertionsConfig)(nil)).Elem()
}

func (o AssertsSuppressedAssertionsConfigArrayOutput) ToAssertsSuppressedAssertionsConfigArrayOutput() AssertsSuppressedAssertionsConfigArrayOutput {
	return o
}

func (o AssertsSuppressedAssertionsConfigArrayOutput) ToAssertsSuppressedAssertionsConfigArrayOutputWithContext(ctx context.Context) AssertsSuppressedAssertionsConfigArrayOutput {
	return o
}

func (o AssertsSuppressedAssertionsConfigArrayOutput) Index(i pulumi.IntInput) AssertsSuppressedAssertionsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AssertsSuppressedAssertionsConfig {
		return vs[0].([]*AssertsSuppressedAssertionsConfig)[vs[1].(int)]
	}).(AssertsSuppressedAssertionsConfigOutput)
}

type AssertsSuppressedAssertionsConfigMapOutput struct{ *pulumi.OutputState }

func (AssertsSuppressedAssertionsConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AssertsSuppressedAssertionsConfig)(nil)).Elem()
}

func (o AssertsSuppressedAssertionsConfigMapOutput) ToAssertsSuppressedAssertionsConfigMapOutput() AssertsSuppressedAssertionsConfigMapOutput {
	return o
}

func (o AssertsSuppressedAssertionsConfigMapOutput) ToAssertsSuppressedAssertionsConfigMapOutputWithContext(ctx context.Context) AssertsSuppressedAssertionsConfigMapOutput {
	return o
}

func (o AssertsSuppressedAssertionsConfigMapOutput) MapIndex(k pulumi.StringInput) AssertsSuppressedAssertionsConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AssertsSuppressedAssertionsConfig {
		return vs[0].(map[string]*AssertsSuppressedAssertionsConfig)[vs[1].(string)]
	}).(AssertsSuppressedAssertionsConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AssertsSuppressedAssertionsConfigInput)(nil)).Elem(), &AssertsSuppressedAssertionsConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssertsSuppressedAssertionsConfigArrayInput)(nil)).Elem(), AssertsSuppressedAssertionsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssertsSuppressedAssertionsConfigMapInput)(nil)).Elem(), AssertsSuppressedAssertionsConfigMap{})
	pulumi.RegisterOutputType(AssertsSuppressedAssertionsConfigOutput{})
	pulumi.RegisterOutputType(AssertsSuppressedAssertionsConfigArrayOutput{})
	pulumi.RegisterOutputType(AssertsSuppressedAssertionsConfigMapOutput{})
}
