// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/internal"
)

// * [Official documentation](https://grafana.com/docs/grafana/latest/administration/organization-management/)
// * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/preferences/#get-current-org-prefs)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/oss"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := oss.NewOrganizationPreferences(ctx, "test", &oss.OrganizationPreferencesArgs{
//				Theme:     pulumi.String("light"),
//				Timezone:  pulumi.String("utc"),
//				WeekStart: pulumi.String("sunday"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import grafana:index/organizationPreferences:OrganizationPreferences name "{{ orgID }}"
// ```
//
// Deprecated: grafana.index/organizationpreferences.OrganizationPreferences has been deprecated in favor of grafana.oss/organizationpreferences.OrganizationPreferences
type OrganizationPreferences struct {
	pulumi.CustomResourceState

	// The Organization home dashboard UID. This is only available in Grafana 9.0+.
	HomeDashboardUid pulumi.StringPtrOutput `pulumi:"homeDashboardUid"`
	// The Organization ID. If not set, the Org ID defined in the provider block will be used.
	OrgId pulumi.StringPtrOutput `pulumi:"orgId"`
	// The Organization theme. Available values are `light`, `dark`, `system`, or an empty string for the default.
	Theme pulumi.StringPtrOutput `pulumi:"theme"`
	// The Organization timezone. Available values are `utc`, `browser`, or an empty string for the default.
	Timezone pulumi.StringPtrOutput `pulumi:"timezone"`
	// The Organization week start day. Available values are `sunday`, `monday`, `saturday`, or an empty string for the default. Defaults to ``.
	WeekStart pulumi.StringPtrOutput `pulumi:"weekStart"`
}

// NewOrganizationPreferences registers a new resource with the given unique name, arguments, and options.
func NewOrganizationPreferences(ctx *pulumi.Context,
	name string, args *OrganizationPreferencesArgs, opts ...pulumi.ResourceOption) (*OrganizationPreferences, error) {
	if args == nil {
		args = &OrganizationPreferencesArgs{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("grafana:index/organizationPreferences:OrganizationPreferences"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationPreferences
	err := ctx.RegisterResource("grafana:index/organizationPreferences:OrganizationPreferences", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationPreferences gets an existing OrganizationPreferences resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationPreferences(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationPreferencesState, opts ...pulumi.ResourceOption) (*OrganizationPreferences, error) {
	var resource OrganizationPreferences
	err := ctx.ReadResource("grafana:index/organizationPreferences:OrganizationPreferences", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationPreferences resources.
type organizationPreferencesState struct {
	// The Organization home dashboard UID. This is only available in Grafana 9.0+.
	HomeDashboardUid *string `pulumi:"homeDashboardUid"`
	// The Organization ID. If not set, the Org ID defined in the provider block will be used.
	OrgId *string `pulumi:"orgId"`
	// The Organization theme. Available values are `light`, `dark`, `system`, or an empty string for the default.
	Theme *string `pulumi:"theme"`
	// The Organization timezone. Available values are `utc`, `browser`, or an empty string for the default.
	Timezone *string `pulumi:"timezone"`
	// The Organization week start day. Available values are `sunday`, `monday`, `saturday`, or an empty string for the default. Defaults to ``.
	WeekStart *string `pulumi:"weekStart"`
}

type OrganizationPreferencesState struct {
	// The Organization home dashboard UID. This is only available in Grafana 9.0+.
	HomeDashboardUid pulumi.StringPtrInput
	// The Organization ID. If not set, the Org ID defined in the provider block will be used.
	OrgId pulumi.StringPtrInput
	// The Organization theme. Available values are `light`, `dark`, `system`, or an empty string for the default.
	Theme pulumi.StringPtrInput
	// The Organization timezone. Available values are `utc`, `browser`, or an empty string for the default.
	Timezone pulumi.StringPtrInput
	// The Organization week start day. Available values are `sunday`, `monday`, `saturday`, or an empty string for the default. Defaults to ``.
	WeekStart pulumi.StringPtrInput
}

func (OrganizationPreferencesState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationPreferencesState)(nil)).Elem()
}

type organizationPreferencesArgs struct {
	// The Organization home dashboard UID. This is only available in Grafana 9.0+.
	HomeDashboardUid *string `pulumi:"homeDashboardUid"`
	// The Organization ID. If not set, the Org ID defined in the provider block will be used.
	OrgId *string `pulumi:"orgId"`
	// The Organization theme. Available values are `light`, `dark`, `system`, or an empty string for the default.
	Theme *string `pulumi:"theme"`
	// The Organization timezone. Available values are `utc`, `browser`, or an empty string for the default.
	Timezone *string `pulumi:"timezone"`
	// The Organization week start day. Available values are `sunday`, `monday`, `saturday`, or an empty string for the default. Defaults to ``.
	WeekStart *string `pulumi:"weekStart"`
}

// The set of arguments for constructing a OrganizationPreferences resource.
type OrganizationPreferencesArgs struct {
	// The Organization home dashboard UID. This is only available in Grafana 9.0+.
	HomeDashboardUid pulumi.StringPtrInput
	// The Organization ID. If not set, the Org ID defined in the provider block will be used.
	OrgId pulumi.StringPtrInput
	// The Organization theme. Available values are `light`, `dark`, `system`, or an empty string for the default.
	Theme pulumi.StringPtrInput
	// The Organization timezone. Available values are `utc`, `browser`, or an empty string for the default.
	Timezone pulumi.StringPtrInput
	// The Organization week start day. Available values are `sunday`, `monday`, `saturday`, or an empty string for the default. Defaults to ``.
	WeekStart pulumi.StringPtrInput
}

func (OrganizationPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationPreferencesArgs)(nil)).Elem()
}

type OrganizationPreferencesInput interface {
	pulumi.Input

	ToOrganizationPreferencesOutput() OrganizationPreferencesOutput
	ToOrganizationPreferencesOutputWithContext(ctx context.Context) OrganizationPreferencesOutput
}

func (*OrganizationPreferences) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPreferences)(nil)).Elem()
}

func (i *OrganizationPreferences) ToOrganizationPreferencesOutput() OrganizationPreferencesOutput {
	return i.ToOrganizationPreferencesOutputWithContext(context.Background())
}

func (i *OrganizationPreferences) ToOrganizationPreferencesOutputWithContext(ctx context.Context) OrganizationPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPreferencesOutput)
}

// OrganizationPreferencesArrayInput is an input type that accepts OrganizationPreferencesArray and OrganizationPreferencesArrayOutput values.
// You can construct a concrete instance of `OrganizationPreferencesArrayInput` via:
//
//	OrganizationPreferencesArray{ OrganizationPreferencesArgs{...} }
type OrganizationPreferencesArrayInput interface {
	pulumi.Input

	ToOrganizationPreferencesArrayOutput() OrganizationPreferencesArrayOutput
	ToOrganizationPreferencesArrayOutputWithContext(context.Context) OrganizationPreferencesArrayOutput
}

type OrganizationPreferencesArray []OrganizationPreferencesInput

func (OrganizationPreferencesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationPreferences)(nil)).Elem()
}

func (i OrganizationPreferencesArray) ToOrganizationPreferencesArrayOutput() OrganizationPreferencesArrayOutput {
	return i.ToOrganizationPreferencesArrayOutputWithContext(context.Background())
}

func (i OrganizationPreferencesArray) ToOrganizationPreferencesArrayOutputWithContext(ctx context.Context) OrganizationPreferencesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPreferencesArrayOutput)
}

// OrganizationPreferencesMapInput is an input type that accepts OrganizationPreferencesMap and OrganizationPreferencesMapOutput values.
// You can construct a concrete instance of `OrganizationPreferencesMapInput` via:
//
//	OrganizationPreferencesMap{ "key": OrganizationPreferencesArgs{...} }
type OrganizationPreferencesMapInput interface {
	pulumi.Input

	ToOrganizationPreferencesMapOutput() OrganizationPreferencesMapOutput
	ToOrganizationPreferencesMapOutputWithContext(context.Context) OrganizationPreferencesMapOutput
}

type OrganizationPreferencesMap map[string]OrganizationPreferencesInput

func (OrganizationPreferencesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationPreferences)(nil)).Elem()
}

func (i OrganizationPreferencesMap) ToOrganizationPreferencesMapOutput() OrganizationPreferencesMapOutput {
	return i.ToOrganizationPreferencesMapOutputWithContext(context.Background())
}

func (i OrganizationPreferencesMap) ToOrganizationPreferencesMapOutputWithContext(ctx context.Context) OrganizationPreferencesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPreferencesMapOutput)
}

type OrganizationPreferencesOutput struct{ *pulumi.OutputState }

func (OrganizationPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPreferences)(nil)).Elem()
}

func (o OrganizationPreferencesOutput) ToOrganizationPreferencesOutput() OrganizationPreferencesOutput {
	return o
}

func (o OrganizationPreferencesOutput) ToOrganizationPreferencesOutputWithContext(ctx context.Context) OrganizationPreferencesOutput {
	return o
}

// The Organization home dashboard UID. This is only available in Grafana 9.0+.
func (o OrganizationPreferencesOutput) HomeDashboardUid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationPreferences) pulumi.StringPtrOutput { return v.HomeDashboardUid }).(pulumi.StringPtrOutput)
}

// The Organization ID. If not set, the Org ID defined in the provider block will be used.
func (o OrganizationPreferencesOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationPreferences) pulumi.StringPtrOutput { return v.OrgId }).(pulumi.StringPtrOutput)
}

// The Organization theme. Available values are `light`, `dark`, `system`, or an empty string for the default.
func (o OrganizationPreferencesOutput) Theme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationPreferences) pulumi.StringPtrOutput { return v.Theme }).(pulumi.StringPtrOutput)
}

// The Organization timezone. Available values are `utc`, `browser`, or an empty string for the default.
func (o OrganizationPreferencesOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationPreferences) pulumi.StringPtrOutput { return v.Timezone }).(pulumi.StringPtrOutput)
}

// The Organization week start day. Available values are `sunday`, `monday`, `saturday`, or an empty string for the default. Defaults to “.
func (o OrganizationPreferencesOutput) WeekStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationPreferences) pulumi.StringPtrOutput { return v.WeekStart }).(pulumi.StringPtrOutput)
}

type OrganizationPreferencesArrayOutput struct{ *pulumi.OutputState }

func (OrganizationPreferencesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationPreferences)(nil)).Elem()
}

func (o OrganizationPreferencesArrayOutput) ToOrganizationPreferencesArrayOutput() OrganizationPreferencesArrayOutput {
	return o
}

func (o OrganizationPreferencesArrayOutput) ToOrganizationPreferencesArrayOutputWithContext(ctx context.Context) OrganizationPreferencesArrayOutput {
	return o
}

func (o OrganizationPreferencesArrayOutput) Index(i pulumi.IntInput) OrganizationPreferencesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationPreferences {
		return vs[0].([]*OrganizationPreferences)[vs[1].(int)]
	}).(OrganizationPreferencesOutput)
}

type OrganizationPreferencesMapOutput struct{ *pulumi.OutputState }

func (OrganizationPreferencesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationPreferences)(nil)).Elem()
}

func (o OrganizationPreferencesMapOutput) ToOrganizationPreferencesMapOutput() OrganizationPreferencesMapOutput {
	return o
}

func (o OrganizationPreferencesMapOutput) ToOrganizationPreferencesMapOutputWithContext(ctx context.Context) OrganizationPreferencesMapOutput {
	return o
}

func (o OrganizationPreferencesMapOutput) MapIndex(k pulumi.StringInput) OrganizationPreferencesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationPreferences {
		return vs[0].(map[string]*OrganizationPreferences)[vs[1].(string)]
	}).(OrganizationPreferencesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPreferencesInput)(nil)).Elem(), &OrganizationPreferences{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPreferencesArrayInput)(nil)).Elem(), OrganizationPreferencesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPreferencesMapInput)(nil)).Elem(), OrganizationPreferencesMap{})
	pulumi.RegisterOutputType(OrganizationPreferencesOutput{})
	pulumi.RegisterOutputType(OrganizationPreferencesArrayOutput{})
	pulumi.RegisterOutputType(OrganizationPreferencesMapOutput{})
}
