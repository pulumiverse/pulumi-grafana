// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/v2/go/grafana/internal"
)

var _ = internal.GetEnvOrDefault

type GetCollectorsCollector struct {
	Enabled          bool              `pulumi:"enabled"`
	Id               string            `pulumi:"id"`
	LocalAttributes  map[string]string `pulumi:"localAttributes"`
	RemoteAttributes map[string]string `pulumi:"remoteAttributes"`
}

// GetCollectorsCollectorInput is an input type that accepts GetCollectorsCollectorArgs and GetCollectorsCollectorOutput values.
// You can construct a concrete instance of `GetCollectorsCollectorInput` via:
//
//	GetCollectorsCollectorArgs{...}
type GetCollectorsCollectorInput interface {
	pulumi.Input

	ToGetCollectorsCollectorOutput() GetCollectorsCollectorOutput
	ToGetCollectorsCollectorOutputWithContext(context.Context) GetCollectorsCollectorOutput
}

type GetCollectorsCollectorArgs struct {
	Enabled          pulumi.BoolInput      `pulumi:"enabled"`
	Id               pulumi.StringInput    `pulumi:"id"`
	LocalAttributes  pulumi.StringMapInput `pulumi:"localAttributes"`
	RemoteAttributes pulumi.StringMapInput `pulumi:"remoteAttributes"`
}

func (GetCollectorsCollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCollectorsCollector)(nil)).Elem()
}

func (i GetCollectorsCollectorArgs) ToGetCollectorsCollectorOutput() GetCollectorsCollectorOutput {
	return i.ToGetCollectorsCollectorOutputWithContext(context.Background())
}

func (i GetCollectorsCollectorArgs) ToGetCollectorsCollectorOutputWithContext(ctx context.Context) GetCollectorsCollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCollectorsCollectorOutput)
}

// GetCollectorsCollectorArrayInput is an input type that accepts GetCollectorsCollectorArray and GetCollectorsCollectorArrayOutput values.
// You can construct a concrete instance of `GetCollectorsCollectorArrayInput` via:
//
//	GetCollectorsCollectorArray{ GetCollectorsCollectorArgs{...} }
type GetCollectorsCollectorArrayInput interface {
	pulumi.Input

	ToGetCollectorsCollectorArrayOutput() GetCollectorsCollectorArrayOutput
	ToGetCollectorsCollectorArrayOutputWithContext(context.Context) GetCollectorsCollectorArrayOutput
}

type GetCollectorsCollectorArray []GetCollectorsCollectorInput

func (GetCollectorsCollectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCollectorsCollector)(nil)).Elem()
}

func (i GetCollectorsCollectorArray) ToGetCollectorsCollectorArrayOutput() GetCollectorsCollectorArrayOutput {
	return i.ToGetCollectorsCollectorArrayOutputWithContext(context.Background())
}

func (i GetCollectorsCollectorArray) ToGetCollectorsCollectorArrayOutputWithContext(ctx context.Context) GetCollectorsCollectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCollectorsCollectorArrayOutput)
}

type GetCollectorsCollectorOutput struct{ *pulumi.OutputState }

func (GetCollectorsCollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCollectorsCollector)(nil)).Elem()
}

func (o GetCollectorsCollectorOutput) ToGetCollectorsCollectorOutput() GetCollectorsCollectorOutput {
	return o
}

func (o GetCollectorsCollectorOutput) ToGetCollectorsCollectorOutputWithContext(ctx context.Context) GetCollectorsCollectorOutput {
	return o
}

func (o GetCollectorsCollectorOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCollectorsCollector) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetCollectorsCollectorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCollectorsCollector) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCollectorsCollectorOutput) LocalAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCollectorsCollector) map[string]string { return v.LocalAttributes }).(pulumi.StringMapOutput)
}

func (o GetCollectorsCollectorOutput) RemoteAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCollectorsCollector) map[string]string { return v.RemoteAttributes }).(pulumi.StringMapOutput)
}

type GetCollectorsCollectorArrayOutput struct{ *pulumi.OutputState }

func (GetCollectorsCollectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCollectorsCollector)(nil)).Elem()
}

func (o GetCollectorsCollectorArrayOutput) ToGetCollectorsCollectorArrayOutput() GetCollectorsCollectorArrayOutput {
	return o
}

func (o GetCollectorsCollectorArrayOutput) ToGetCollectorsCollectorArrayOutputWithContext(ctx context.Context) GetCollectorsCollectorArrayOutput {
	return o
}

func (o GetCollectorsCollectorArrayOutput) Index(i pulumi.IntInput) GetCollectorsCollectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCollectorsCollector {
		return vs[0].([]GetCollectorsCollector)[vs[1].(int)]
	}).(GetCollectorsCollectorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetCollectorsCollectorInput)(nil)).Elem(), GetCollectorsCollectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCollectorsCollectorArrayInput)(nil)).Elem(), GetCollectorsCollectorArray{})
	pulumi.RegisterOutputType(GetCollectorsCollectorOutput{})
	pulumi.RegisterOutputType(GetCollectorsCollectorArrayOutput{})
}
