// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package experimental

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/internal"
)

// Manages Grafana dashboards via the new Grafana App Platform API. This resource is currently **EXPERIMENTAL** and may be subject to change. It requires a development build of Grafana with specific feature flags enabled.
type AppsDashboardV1Alpha1 struct {
	pulumi.CustomResourceState

	// The metadata of the resource.
	Metadata AppsDashboardV1Alpha1MetadataPtrOutput `pulumi:"metadata"`
	// Options for applying the resource.
	Options AppsDashboardV1Alpha1OptionsPtrOutput `pulumi:"options"`
	// The spec of the resource.
	Spec AppsDashboardV1Alpha1SpecPtrOutput `pulumi:"spec"`
}

// NewAppsDashboardV1Alpha1 registers a new resource with the given unique name, arguments, and options.
func NewAppsDashboardV1Alpha1(ctx *pulumi.Context,
	name string, args *AppsDashboardV1Alpha1Args, opts ...pulumi.ResourceOption) (*AppsDashboardV1Alpha1, error) {
	if args == nil {
		args = &AppsDashboardV1Alpha1Args{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppsDashboardV1Alpha1
	err := ctx.RegisterResource("grafana:experimental/appsDashboardV1Alpha1:AppsDashboardV1Alpha1", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppsDashboardV1Alpha1 gets an existing AppsDashboardV1Alpha1 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppsDashboardV1Alpha1(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppsDashboardV1Alpha1State, opts ...pulumi.ResourceOption) (*AppsDashboardV1Alpha1, error) {
	var resource AppsDashboardV1Alpha1
	err := ctx.ReadResource("grafana:experimental/appsDashboardV1Alpha1:AppsDashboardV1Alpha1", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppsDashboardV1Alpha1 resources.
type appsDashboardV1Alpha1State struct {
	// The metadata of the resource.
	Metadata *AppsDashboardV1Alpha1Metadata `pulumi:"metadata"`
	// Options for applying the resource.
	Options *AppsDashboardV1Alpha1Options `pulumi:"options"`
	// The spec of the resource.
	Spec *AppsDashboardV1Alpha1Spec `pulumi:"spec"`
}

type AppsDashboardV1Alpha1State struct {
	// The metadata of the resource.
	Metadata AppsDashboardV1Alpha1MetadataPtrInput
	// Options for applying the resource.
	Options AppsDashboardV1Alpha1OptionsPtrInput
	// The spec of the resource.
	Spec AppsDashboardV1Alpha1SpecPtrInput
}

func (AppsDashboardV1Alpha1State) ElementType() reflect.Type {
	return reflect.TypeOf((*appsDashboardV1Alpha1State)(nil)).Elem()
}

type appsDashboardV1Alpha1Args struct {
	// The metadata of the resource.
	Metadata *AppsDashboardV1Alpha1Metadata `pulumi:"metadata"`
	// Options for applying the resource.
	Options *AppsDashboardV1Alpha1Options `pulumi:"options"`
	// The spec of the resource.
	Spec *AppsDashboardV1Alpha1Spec `pulumi:"spec"`
}

// The set of arguments for constructing a AppsDashboardV1Alpha1 resource.
type AppsDashboardV1Alpha1Args struct {
	// The metadata of the resource.
	Metadata AppsDashboardV1Alpha1MetadataPtrInput
	// Options for applying the resource.
	Options AppsDashboardV1Alpha1OptionsPtrInput
	// The spec of the resource.
	Spec AppsDashboardV1Alpha1SpecPtrInput
}

func (AppsDashboardV1Alpha1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*appsDashboardV1Alpha1Args)(nil)).Elem()
}

type AppsDashboardV1Alpha1Input interface {
	pulumi.Input

	ToAppsDashboardV1Alpha1Output() AppsDashboardV1Alpha1Output
	ToAppsDashboardV1Alpha1OutputWithContext(ctx context.Context) AppsDashboardV1Alpha1Output
}

func (*AppsDashboardV1Alpha1) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsDashboardV1Alpha1)(nil)).Elem()
}

func (i *AppsDashboardV1Alpha1) ToAppsDashboardV1Alpha1Output() AppsDashboardV1Alpha1Output {
	return i.ToAppsDashboardV1Alpha1OutputWithContext(context.Background())
}

func (i *AppsDashboardV1Alpha1) ToAppsDashboardV1Alpha1OutputWithContext(ctx context.Context) AppsDashboardV1Alpha1Output {
	return pulumi.ToOutputWithContext(ctx, i).(AppsDashboardV1Alpha1Output)
}

// AppsDashboardV1Alpha1ArrayInput is an input type that accepts AppsDashboardV1Alpha1Array and AppsDashboardV1Alpha1ArrayOutput values.
// You can construct a concrete instance of `AppsDashboardV1Alpha1ArrayInput` via:
//
//	AppsDashboardV1Alpha1Array{ AppsDashboardV1Alpha1Args{...} }
type AppsDashboardV1Alpha1ArrayInput interface {
	pulumi.Input

	ToAppsDashboardV1Alpha1ArrayOutput() AppsDashboardV1Alpha1ArrayOutput
	ToAppsDashboardV1Alpha1ArrayOutputWithContext(context.Context) AppsDashboardV1Alpha1ArrayOutput
}

type AppsDashboardV1Alpha1Array []AppsDashboardV1Alpha1Input

func (AppsDashboardV1Alpha1Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsDashboardV1Alpha1)(nil)).Elem()
}

func (i AppsDashboardV1Alpha1Array) ToAppsDashboardV1Alpha1ArrayOutput() AppsDashboardV1Alpha1ArrayOutput {
	return i.ToAppsDashboardV1Alpha1ArrayOutputWithContext(context.Background())
}

func (i AppsDashboardV1Alpha1Array) ToAppsDashboardV1Alpha1ArrayOutputWithContext(ctx context.Context) AppsDashboardV1Alpha1ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsDashboardV1Alpha1ArrayOutput)
}

// AppsDashboardV1Alpha1MapInput is an input type that accepts AppsDashboardV1Alpha1Map and AppsDashboardV1Alpha1MapOutput values.
// You can construct a concrete instance of `AppsDashboardV1Alpha1MapInput` via:
//
//	AppsDashboardV1Alpha1Map{ "key": AppsDashboardV1Alpha1Args{...} }
type AppsDashboardV1Alpha1MapInput interface {
	pulumi.Input

	ToAppsDashboardV1Alpha1MapOutput() AppsDashboardV1Alpha1MapOutput
	ToAppsDashboardV1Alpha1MapOutputWithContext(context.Context) AppsDashboardV1Alpha1MapOutput
}

type AppsDashboardV1Alpha1Map map[string]AppsDashboardV1Alpha1Input

func (AppsDashboardV1Alpha1Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsDashboardV1Alpha1)(nil)).Elem()
}

func (i AppsDashboardV1Alpha1Map) ToAppsDashboardV1Alpha1MapOutput() AppsDashboardV1Alpha1MapOutput {
	return i.ToAppsDashboardV1Alpha1MapOutputWithContext(context.Background())
}

func (i AppsDashboardV1Alpha1Map) ToAppsDashboardV1Alpha1MapOutputWithContext(ctx context.Context) AppsDashboardV1Alpha1MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsDashboardV1Alpha1MapOutput)
}

type AppsDashboardV1Alpha1Output struct{ *pulumi.OutputState }

func (AppsDashboardV1Alpha1Output) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsDashboardV1Alpha1)(nil)).Elem()
}

func (o AppsDashboardV1Alpha1Output) ToAppsDashboardV1Alpha1Output() AppsDashboardV1Alpha1Output {
	return o
}

func (o AppsDashboardV1Alpha1Output) ToAppsDashboardV1Alpha1OutputWithContext(ctx context.Context) AppsDashboardV1Alpha1Output {
	return o
}

// The metadata of the resource.
func (o AppsDashboardV1Alpha1Output) Metadata() AppsDashboardV1Alpha1MetadataPtrOutput {
	return o.ApplyT(func(v *AppsDashboardV1Alpha1) AppsDashboardV1Alpha1MetadataPtrOutput { return v.Metadata }).(AppsDashboardV1Alpha1MetadataPtrOutput)
}

// Options for applying the resource.
func (o AppsDashboardV1Alpha1Output) Options() AppsDashboardV1Alpha1OptionsPtrOutput {
	return o.ApplyT(func(v *AppsDashboardV1Alpha1) AppsDashboardV1Alpha1OptionsPtrOutput { return v.Options }).(AppsDashboardV1Alpha1OptionsPtrOutput)
}

// The spec of the resource.
func (o AppsDashboardV1Alpha1Output) Spec() AppsDashboardV1Alpha1SpecPtrOutput {
	return o.ApplyT(func(v *AppsDashboardV1Alpha1) AppsDashboardV1Alpha1SpecPtrOutput { return v.Spec }).(AppsDashboardV1Alpha1SpecPtrOutput)
}

type AppsDashboardV1Alpha1ArrayOutput struct{ *pulumi.OutputState }

func (AppsDashboardV1Alpha1ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsDashboardV1Alpha1)(nil)).Elem()
}

func (o AppsDashboardV1Alpha1ArrayOutput) ToAppsDashboardV1Alpha1ArrayOutput() AppsDashboardV1Alpha1ArrayOutput {
	return o
}

func (o AppsDashboardV1Alpha1ArrayOutput) ToAppsDashboardV1Alpha1ArrayOutputWithContext(ctx context.Context) AppsDashboardV1Alpha1ArrayOutput {
	return o
}

func (o AppsDashboardV1Alpha1ArrayOutput) Index(i pulumi.IntInput) AppsDashboardV1Alpha1Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppsDashboardV1Alpha1 {
		return vs[0].([]*AppsDashboardV1Alpha1)[vs[1].(int)]
	}).(AppsDashboardV1Alpha1Output)
}

type AppsDashboardV1Alpha1MapOutput struct{ *pulumi.OutputState }

func (AppsDashboardV1Alpha1MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsDashboardV1Alpha1)(nil)).Elem()
}

func (o AppsDashboardV1Alpha1MapOutput) ToAppsDashboardV1Alpha1MapOutput() AppsDashboardV1Alpha1MapOutput {
	return o
}

func (o AppsDashboardV1Alpha1MapOutput) ToAppsDashboardV1Alpha1MapOutputWithContext(ctx context.Context) AppsDashboardV1Alpha1MapOutput {
	return o
}

func (o AppsDashboardV1Alpha1MapOutput) MapIndex(k pulumi.StringInput) AppsDashboardV1Alpha1Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppsDashboardV1Alpha1 {
		return vs[0].(map[string]*AppsDashboardV1Alpha1)[vs[1].(string)]
	}).(AppsDashboardV1Alpha1Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppsDashboardV1Alpha1Input)(nil)).Elem(), &AppsDashboardV1Alpha1{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsDashboardV1Alpha1ArrayInput)(nil)).Elem(), AppsDashboardV1Alpha1Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsDashboardV1Alpha1MapInput)(nil)).Elem(), AppsDashboardV1Alpha1Map{})
	pulumi.RegisterOutputType(AppsDashboardV1Alpha1Output{})
	pulumi.RegisterOutputType(AppsDashboardV1Alpha1ArrayOutput{})
	pulumi.RegisterOutputType(AppsDashboardV1Alpha1MapOutput{})
}
