// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana
{
    [Obsolete(@"grafana.index/getcloudorganization.getCloudOrganization has been deprecated in favor of grafana.cloud/getorganization.getOrganization")]
    public static class GetCloudOrganization
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Grafana.Cloud.GetOrganization.Invoke(new()
        ///     {
        ///         Slug = "my-org",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCloudOrganizationResult> InvokeAsync(GetCloudOrganizationArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudOrganizationResult>("grafana:index/getCloudOrganization:getCloudOrganization", args ?? new GetCloudOrganizationArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Grafana.Cloud.GetOrganization.Invoke(new()
        ///     {
        ///         Slug = "my-org",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudOrganizationResult> Invoke(GetCloudOrganizationInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudOrganizationResult>("grafana:index/getCloudOrganization:getCloudOrganization", args ?? new GetCloudOrganizationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Grafana.Cloud.GetOrganization.Invoke(new()
        ///     {
        ///         Slug = "my-org",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudOrganizationResult> Invoke(GetCloudOrganizationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudOrganizationResult>("grafana:index/getCloudOrganization:getCloudOrganization", args ?? new GetCloudOrganizationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudOrganizationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        [Input("slug")]
        public string? Slug { get; set; }

        public GetCloudOrganizationArgs()
        {
        }
        public static new GetCloudOrganizationArgs Empty => new GetCloudOrganizationArgs();
    }

    public sealed class GetCloudOrganizationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        public GetCloudOrganizationInvokeArgs()
        {
        }
        public static new GetCloudOrganizationInvokeArgs Empty => new GetCloudOrganizationInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudOrganizationResult
    {
        public readonly string CreatedAt;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string Slug;
        public readonly string UpdatedAt;
        public readonly string Url;

        [OutputConstructor]
        private GetCloudOrganizationResult(
            string createdAt,

            string id,

            string name,

            string slug,

            string updatedAt,

            string url)
        {
            CreatedAt = createdAt;
            Id = id;
            Name = name;
            Slug = slug;
            UpdatedAt = updatedAt;
            Url = url;
        }
    }
}
