// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana
{
    public static class GetOrganizationUser
    {
        /// <summary>
        /// * [Official documentation](https://grafana.com/docs/grafana/latest/administration/user-management/server-user-management/)
        /// * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/org/#get-all-users-within-the-current-organization-lookup)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = new Grafana.Oss.User("test", new()
        ///     {
        ///         Email = "test.datasource@example.com",
        ///         Name = "Testing Datasource",
        ///         Login = "test-datasource",
        ///         Password = "my-password",
        ///     });
        /// 
        ///     var fromEmail = Grafana.GetOrganizationUser.Invoke(new()
        ///     {
        ///         Email = test.Email,
        ///     });
        /// 
        ///     var fromLogin = Grafana.GetOrganizationUser.Invoke(new()
        ///     {
        ///         Login = test.Login,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOrganizationUserResult> InvokeAsync(GetOrganizationUserArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationUserResult>("grafana:index/getOrganizationUser:getOrganizationUser", args ?? new GetOrganizationUserArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://grafana.com/docs/grafana/latest/administration/user-management/server-user-management/)
        /// * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/org/#get-all-users-within-the-current-organization-lookup)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = new Grafana.Oss.User("test", new()
        ///     {
        ///         Email = "test.datasource@example.com",
        ///         Name = "Testing Datasource",
        ///         Login = "test-datasource",
        ///         Password = "my-password",
        ///     });
        /// 
        ///     var fromEmail = Grafana.GetOrganizationUser.Invoke(new()
        ///     {
        ///         Email = test.Email,
        ///     });
        /// 
        ///     var fromLogin = Grafana.GetOrganizationUser.Invoke(new()
        ///     {
        ///         Login = test.Login,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationUserResult> Invoke(GetOrganizationUserInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationUserResult>("grafana:index/getOrganizationUser:getOrganizationUser", args ?? new GetOrganizationUserInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// * [Official documentation](https://grafana.com/docs/grafana/latest/administration/user-management/server-user-management/)
        /// * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/org/#get-all-users-within-the-current-organization-lookup)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = new Grafana.Oss.User("test", new()
        ///     {
        ///         Email = "test.datasource@example.com",
        ///         Name = "Testing Datasource",
        ///         Login = "test-datasource",
        ///         Password = "my-password",
        ///     });
        /// 
        ///     var fromEmail = Grafana.GetOrganizationUser.Invoke(new()
        ///     {
        ///         Email = test.Email,
        ///     });
        /// 
        ///     var fromLogin = Grafana.GetOrganizationUser.Invoke(new()
        ///     {
        ///         Login = test.Login,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationUserResult> Invoke(GetOrganizationUserInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationUserResult>("grafana:index/getOrganizationUser:getOrganizationUser", args ?? new GetOrganizationUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The email address of the Grafana user. Defaults to ``.
        /// </summary>
        [Input("email")]
        public string? Email { get; set; }

        /// <summary>
        /// The username of the Grafana user. Defaults to ``.
        /// </summary>
        [Input("login")]
        public string? Login { get; set; }

        /// <summary>
        /// The Organization ID. If not set, the Org ID defined in the provider block will be used.
        /// </summary>
        [Input("orgId")]
        public string? OrgId { get; set; }

        public GetOrganizationUserArgs()
        {
        }
        public static new GetOrganizationUserArgs Empty => new GetOrganizationUserArgs();
    }

    public sealed class GetOrganizationUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The email address of the Grafana user. Defaults to ``.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// The username of the Grafana user. Defaults to ``.
        /// </summary>
        [Input("login")]
        public Input<string>? Login { get; set; }

        /// <summary>
        /// The Organization ID. If not set, the Org ID defined in the provider block will be used.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        public GetOrganizationUserInvokeArgs()
        {
        }
        public static new GetOrganizationUserInvokeArgs Empty => new GetOrganizationUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationUserResult
    {
        /// <summary>
        /// The email address of the Grafana user. Defaults to ``.
        /// </summary>
        public readonly string? Email;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The username of the Grafana user. Defaults to ``.
        /// </summary>
        public readonly string? Login;
        /// <summary>
        /// The Organization ID. If not set, the Org ID defined in the provider block will be used.
        /// </summary>
        public readonly string? OrgId;
        /// <summary>
        /// The numerical ID of the Grafana user.
        /// </summary>
        public readonly int UserId;

        [OutputConstructor]
        private GetOrganizationUserResult(
            string? email,

            string id,

            string? login,

            string? orgId,

            int userId)
        {
            Email = email;
            Id = id;
            Login = login;
            OrgId = orgId;
            UserId = userId;
        }
    }
}
