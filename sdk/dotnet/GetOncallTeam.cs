// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana
{
    [Obsolete(@"grafana.index/getoncallteam.getOncallTeam has been deprecated in favor of grafana.oncall/getteam.getTeam")]
    public static class GetOncallTeam
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myTeam = Grafana.Oss.GetTeam.Invoke(new()
        ///     {
        ///         Name = "my team",
        ///     });
        /// 
        ///     var myTeamGetTeam = Grafana.OnCall.GetTeam.Invoke(new()
        ///     {
        ///         Name = myTeam.Apply(getTeamResult =&gt; getTeamResult.Name),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOncallTeamResult> InvokeAsync(GetOncallTeamArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOncallTeamResult>("grafana:index/getOncallTeam:getOncallTeam", args ?? new GetOncallTeamArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myTeam = Grafana.Oss.GetTeam.Invoke(new()
        ///     {
        ///         Name = "my team",
        ///     });
        /// 
        ///     var myTeamGetTeam = Grafana.OnCall.GetTeam.Invoke(new()
        ///     {
        ///         Name = myTeam.Apply(getTeamResult =&gt; getTeamResult.Name),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOncallTeamResult> Invoke(GetOncallTeamInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOncallTeamResult>("grafana:index/getOncallTeam:getOncallTeam", args ?? new GetOncallTeamInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myTeam = Grafana.Oss.GetTeam.Invoke(new()
        ///     {
        ///         Name = "my team",
        ///     });
        /// 
        ///     var myTeamGetTeam = Grafana.OnCall.GetTeam.Invoke(new()
        ///     {
        ///         Name = myTeam.Apply(getTeamResult =&gt; getTeamResult.Name),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOncallTeamResult> Invoke(GetOncallTeamInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOncallTeamResult>("grafana:index/getOncallTeam:getOncallTeam", args ?? new GetOncallTeamInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOncallTeamArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The team name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetOncallTeamArgs()
        {
        }
        public static new GetOncallTeamArgs Empty => new GetOncallTeamArgs();
    }

    public sealed class GetOncallTeamInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The team name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetOncallTeamInvokeArgs()
        {
        }
        public static new GetOncallTeamInvokeArgs Empty => new GetOncallTeamInvokeArgs();
    }


    [OutputType]
    public sealed class GetOncallTeamResult
    {
        public readonly string AvatarUrl;
        public readonly string Email;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The team name.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetOncallTeamResult(
            string avatarUrl,

            string email,

            string id,

            string name)
        {
            AvatarUrl = avatarUrl;
            Email = email;
            Id = id;
            Name = name;
        }
    }
}
