// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana
{
    [GrafanaResourceType("grafana:index/organization:Organization")]
    public partial class Organization : global::Pulumi.CustomResource
    {
        [Output("adminUser")]
        public Output<string?> AdminUser { get; private set; } = null!;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given admin access to the organization. Note: users
        /// specified here must already exist in Grafana unless 'create_users' is set to true.
        /// </summary>
        [Output("admins")]
        public Output<ImmutableArray<string>> Admins { get; private set; } = null!;

        /// <summary>
        /// Whether or not to create Grafana users specified in the organization's membership if they don't already exist in
        /// Grafana. If unspecified, this parameter defaults to true, creating placeholder users with the name, login, and email set
        /// to the email of the user, and a random password. Setting this option to false will cause an error to be thrown for any
        /// users that do not already exist in Grafana.
        /// </summary>
        [Output("createUsers")]
        public Output<bool?> CreateUsers { get; private set; } = null!;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given editor access to the organization. Note: users
        /// specified here must already exist in Grafana unless 'create_users' is set to true.
        /// </summary>
        [Output("editors")]
        public Output<ImmutableArray<string>> Editors { get; private set; } = null!;

        /// <summary>
        /// The display name for the Grafana organization created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The organization id assigned to this organization by Grafana.
        /// </summary>
        [Output("orgId")]
        public Output<int> OrgId { get; private set; } = null!;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given none access to the organization. Note: users
        /// specified here must already exist in Grafana, unless 'create_users' is set to true. This feature is only available in
        /// Grafana 10.2+.
        /// </summary>
        [Output("usersWithoutAccesses")]
        public Output<ImmutableArray<string>> UsersWithoutAccesses { get; private set; } = null!;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given viewer access to the organization. Note: users
        /// specified here must already exist in Grafana unless 'create_users' is set to true.
        /// </summary>
        [Output("viewers")]
        public Output<ImmutableArray<string>> Viewers { get; private set; } = null!;


        /// <summary>
        /// Create a Organization resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Organization(string name, OrganizationArgs? args = null, CustomResourceOptions? options = null)
            : base("grafana:index/organization:Organization", name, args ?? new OrganizationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Organization(string name, Input<string> id, OrganizationState? state = null, CustomResourceOptions? options = null)
            : base("grafana:index/organization:Organization", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Organization resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Organization Get(string name, Input<string> id, OrganizationState? state = null, CustomResourceOptions? options = null)
        {
            return new Organization(name, id, state, options);
        }
    }

    public sealed class OrganizationArgs : global::Pulumi.ResourceArgs
    {
        [Input("adminUser")]
        public Input<string>? AdminUser { get; set; }

        [Input("admins")]
        private InputList<string>? _admins;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given admin access to the organization. Note: users
        /// specified here must already exist in Grafana unless 'create_users' is set to true.
        /// </summary>
        public InputList<string> Admins
        {
            get => _admins ?? (_admins = new InputList<string>());
            set => _admins = value;
        }

        /// <summary>
        /// Whether or not to create Grafana users specified in the organization's membership if they don't already exist in
        /// Grafana. If unspecified, this parameter defaults to true, creating placeholder users with the name, login, and email set
        /// to the email of the user, and a random password. Setting this option to false will cause an error to be thrown for any
        /// users that do not already exist in Grafana.
        /// </summary>
        [Input("createUsers")]
        public Input<bool>? CreateUsers { get; set; }

        [Input("editors")]
        private InputList<string>? _editors;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given editor access to the organization. Note: users
        /// specified here must already exist in Grafana unless 'create_users' is set to true.
        /// </summary>
        public InputList<string> Editors
        {
            get => _editors ?? (_editors = new InputList<string>());
            set => _editors = value;
        }

        /// <summary>
        /// The display name for the Grafana organization created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("usersWithoutAccesses")]
        private InputList<string>? _usersWithoutAccesses;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given none access to the organization. Note: users
        /// specified here must already exist in Grafana, unless 'create_users' is set to true. This feature is only available in
        /// Grafana 10.2+.
        /// </summary>
        public InputList<string> UsersWithoutAccesses
        {
            get => _usersWithoutAccesses ?? (_usersWithoutAccesses = new InputList<string>());
            set => _usersWithoutAccesses = value;
        }

        [Input("viewers")]
        private InputList<string>? _viewers;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given viewer access to the organization. Note: users
        /// specified here must already exist in Grafana unless 'create_users' is set to true.
        /// </summary>
        public InputList<string> Viewers
        {
            get => _viewers ?? (_viewers = new InputList<string>());
            set => _viewers = value;
        }

        public OrganizationArgs()
        {
        }
        public static new OrganizationArgs Empty => new OrganizationArgs();
    }

    public sealed class OrganizationState : global::Pulumi.ResourceArgs
    {
        [Input("adminUser")]
        public Input<string>? AdminUser { get; set; }

        [Input("admins")]
        private InputList<string>? _admins;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given admin access to the organization. Note: users
        /// specified here must already exist in Grafana unless 'create_users' is set to true.
        /// </summary>
        public InputList<string> Admins
        {
            get => _admins ?? (_admins = new InputList<string>());
            set => _admins = value;
        }

        /// <summary>
        /// Whether or not to create Grafana users specified in the organization's membership if they don't already exist in
        /// Grafana. If unspecified, this parameter defaults to true, creating placeholder users with the name, login, and email set
        /// to the email of the user, and a random password. Setting this option to false will cause an error to be thrown for any
        /// users that do not already exist in Grafana.
        /// </summary>
        [Input("createUsers")]
        public Input<bool>? CreateUsers { get; set; }

        [Input("editors")]
        private InputList<string>? _editors;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given editor access to the organization. Note: users
        /// specified here must already exist in Grafana unless 'create_users' is set to true.
        /// </summary>
        public InputList<string> Editors
        {
            get => _editors ?? (_editors = new InputList<string>());
            set => _editors = value;
        }

        /// <summary>
        /// The display name for the Grafana organization created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The organization id assigned to this organization by Grafana.
        /// </summary>
        [Input("orgId")]
        public Input<int>? OrgId { get; set; }

        [Input("usersWithoutAccesses")]
        private InputList<string>? _usersWithoutAccesses;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given none access to the organization. Note: users
        /// specified here must already exist in Grafana, unless 'create_users' is set to true. This feature is only available in
        /// Grafana 10.2+.
        /// </summary>
        public InputList<string> UsersWithoutAccesses
        {
            get => _usersWithoutAccesses ?? (_usersWithoutAccesses = new InputList<string>());
            set => _usersWithoutAccesses = value;
        }

        [Input("viewers")]
        private InputList<string>? _viewers;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given viewer access to the organization. Note: users
        /// specified here must already exist in Grafana unless 'create_users' is set to true.
        /// </summary>
        public InputList<string> Viewers
        {
            get => _viewers ?? (_viewers = new InputList<string>());
            set => _viewers = value;
        }

        public OrganizationState()
        {
        }
        public static new OrganizationState Empty => new OrganizationState();
    }
}
