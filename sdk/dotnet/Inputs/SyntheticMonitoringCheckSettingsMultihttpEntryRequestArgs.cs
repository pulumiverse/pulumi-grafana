// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Inputs
{

    public sealed class SyntheticMonitoringCheckSettingsMultihttpEntryRequestArgs : global::Pulumi.ResourceArgs
    {
        [Input("bodies")]
        private InputList<Inputs.SyntheticMonitoringCheckSettingsMultihttpEntryRequestBodyArgs>? _bodies;

        /// <summary>
        /// The body of the HTTP request used in probe.
        /// </summary>
        public InputList<Inputs.SyntheticMonitoringCheckSettingsMultihttpEntryRequestBodyArgs> Bodies
        {
            get => _bodies ?? (_bodies = new InputList<Inputs.SyntheticMonitoringCheckSettingsMultihttpEntryRequestBodyArgs>());
            set => _bodies = value;
        }

        [Input("headers")]
        private InputList<Inputs.SyntheticMonitoringCheckSettingsMultihttpEntryRequestHeaderArgs>? _headers;

        /// <summary>
        /// The headers to send with the request
        /// </summary>
        public InputList<Inputs.SyntheticMonitoringCheckSettingsMultihttpEntryRequestHeaderArgs> Headers
        {
            get => _headers ?? (_headers = new InputList<Inputs.SyntheticMonitoringCheckSettingsMultihttpEntryRequestHeaderArgs>());
            set => _headers = value;
        }

        /// <summary>
        /// The HTTP method to use
        /// </summary>
        [Input("method", required: true)]
        public Input<string> Method { get; set; } = null!;

        [Input("queryFields")]
        private InputList<Inputs.SyntheticMonitoringCheckSettingsMultihttpEntryRequestQueryFieldArgs>? _queryFields;

        /// <summary>
        /// Query fields to send with the request
        /// </summary>
        public InputList<Inputs.SyntheticMonitoringCheckSettingsMultihttpEntryRequestQueryFieldArgs> QueryFields
        {
            get => _queryFields ?? (_queryFields = new InputList<Inputs.SyntheticMonitoringCheckSettingsMultihttpEntryRequestQueryFieldArgs>());
            set => _queryFields = value;
        }

        /// <summary>
        /// The URL for the request
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public SyntheticMonitoringCheckSettingsMultihttpEntryRequestArgs()
        {
        }
        public static new SyntheticMonitoringCheckSettingsMultihttpEntryRequestArgs Empty => new SyntheticMonitoringCheckSettingsMultihttpEntryRequestArgs();
    }
}
