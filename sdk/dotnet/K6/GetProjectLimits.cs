// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.K6
{
    public static class GetProjectLimits
    {
        /// <summary>
        /// Retrieves a k6 project limits.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProjectLimits = new Grafana.K6.Project("test_project_limits", new()
        ///     {
        ///         Name = "Terraform Project Test Limits",
        ///     });
        /// 
        ///     var fromProjectId = Grafana.K6.GetProjectLimits.Invoke(new()
        ///     {
        ///         ProjectId = testProjectLimits.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetProjectLimitsResult> InvokeAsync(GetProjectLimitsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectLimitsResult>("grafana:k6/getProjectLimits:getProjectLimits", args ?? new GetProjectLimitsArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a k6 project limits.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProjectLimits = new Grafana.K6.Project("test_project_limits", new()
        ///     {
        ///         Name = "Terraform Project Test Limits",
        ///     });
        /// 
        ///     var fromProjectId = Grafana.K6.GetProjectLimits.Invoke(new()
        ///     {
        ///         ProjectId = testProjectLimits.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProjectLimitsResult> Invoke(GetProjectLimitsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectLimitsResult>("grafana:k6/getProjectLimits:getProjectLimits", args ?? new GetProjectLimitsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a k6 project limits.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProjectLimits = new Grafana.K6.Project("test_project_limits", new()
        ///     {
        ///         Name = "Terraform Project Test Limits",
        ///     });
        /// 
        ///     var fromProjectId = Grafana.K6.GetProjectLimits.Invoke(new()
        ///     {
        ///         ProjectId = testProjectLimits.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProjectLimitsResult> Invoke(GetProjectLimitsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectLimitsResult>("grafana:k6/getProjectLimits:getProjectLimits", args ?? new GetProjectLimitsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectLimitsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the project to get limits for.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetProjectLimitsArgs()
        {
        }
        public static new GetProjectLimitsArgs Empty => new GetProjectLimitsArgs();
    }

    public sealed class GetProjectLimitsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the project to get limits for.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetProjectLimitsInvokeArgs()
        {
        }
        public static new GetProjectLimitsInvokeArgs Empty => new GetProjectLimitsInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectLimitsResult
    {
        /// <summary>
        /// Maximum duration of a test in seconds.
        /// </summary>
        public readonly int DurationMaxPerTest;
        /// <summary>
        /// The identifier of the project limits. This is set to the same as the project_id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The identifier of the project to get limits for.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// Maximum number of concurrent browser virtual users (VUs) used in one test.
        /// </summary>
        public readonly int VuBrowserMaxPerTest;
        /// <summary>
        /// Maximum number of concurrent virtual users (VUs) used in one test.
        /// </summary>
        public readonly int VuMaxPerTest;
        /// <summary>
        /// Maximum amount of virtual user hours (VU/h) used per one calendar month.
        /// </summary>
        public readonly int VuhMaxPerMonth;

        [OutputConstructor]
        private GetProjectLimitsResult(
            int durationMaxPerTest,

            string id,

            string projectId,

            int vuBrowserMaxPerTest,

            int vuMaxPerTest,

            int vuhMaxPerMonth)
        {
            DurationMaxPerTest = durationMaxPerTest;
            Id = id;
            ProjectId = projectId;
            VuBrowserMaxPerTest = vuBrowserMaxPerTest;
            VuMaxPerTest = vuMaxPerTest;
            VuhMaxPerMonth = vuhMaxPerMonth;
        }
    }
}
