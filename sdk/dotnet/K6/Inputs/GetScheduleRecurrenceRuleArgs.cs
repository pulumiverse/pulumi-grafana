// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.K6.Inputs
{

    public sealed class GetScheduleRecurrenceRuleInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("bydays", required: true)]
        private InputList<string>? _bydays;

        /// <summary>
        /// The weekdays when the 'WEEKLY' recurrence will be applied (e.g., ['MO', 'WE', 'FR']). Cannot be set for other frequencies.
        /// </summary>
        public InputList<string> Bydays
        {
            get => _bydays ?? (_bydays = new InputList<string>());
            set => _bydays = value;
        }

        /// <summary>
        /// How many times the recurrence will repeat.
        /// </summary>
        [Input("count", required: true)]
        public Input<int> Count { get; set; } = null!;

        /// <summary>
        /// The frequency of the schedule (HOURLY, DAILY, WEEKLY, MONTHLY).
        /// </summary>
        [Input("frequency", required: true)]
        public Input<string> Frequency { get; set; } = null!;

        /// <summary>
        /// The interval between each frequency iteration (e.g., 2 = every 2 hours for HOURLY).
        /// </summary>
        [Input("interval", required: true)]
        public Input<int> Interval { get; set; } = null!;

        /// <summary>
        /// The end time for the recurrence (RFC3339 format).
        /// </summary>
        [Input("until", required: true)]
        public Input<string> Until { get; set; } = null!;

        public GetScheduleRecurrenceRuleInputArgs()
        {
        }
        public static new GetScheduleRecurrenceRuleInputArgs Empty => new GetScheduleRecurrenceRuleInputArgs();
    }
}
