// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.K6
{
    public static class GetLoadTests
    {
        /// <summary>
        /// Retrieves all k6 load tests that belong to a project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var loadTestProject = new Grafana.K6.Project("load_test_project", new()
        ///     {
        ///         Name = "Terraform Load Test Project",
        ///     });
        /// 
        ///     var testLoadTest = new Grafana.K6.LoadTest("test_load_test", new()
        ///     {
        ///         ProjectId = loadTestProject.Id,
        ///         Name = "Terraform Test Load Test",
        ///         Script = @"export default function() {
        ///   console.log('Hello from k6!');
        /// }
        /// ",
        ///     }, new CustomResourceOptions
        ///     {
        ///         DependsOn =
        ///         {
        ///             loadTestProject,
        ///         },
        ///     });
        /// 
        ///     var testLoadTest2 = new Grafana.K6.LoadTest("test_load_test_2", new()
        ///     {
        ///         ProjectId = loadTestProject.Id,
        ///         Name = "Terraform Test Load Test (2)",
        ///         Script = @"export default function() {
        ///   console.log('Hello from k6!');
        /// }
        /// ",
        ///     }, new CustomResourceOptions
        ///     {
        ///         DependsOn =
        ///         {
        ///             testLoadTest,
        ///         },
        ///     });
        /// 
        ///     var fromProjectId = Grafana.K6.GetLoadTests.Invoke(new()
        ///     {
        ///         ProjectId = loadTestProject.Id,
        ///     });
        /// 
        ///     var filterByName = Grafana.K6.GetLoadTests.Invoke(new()
        ///     {
        ///         Name = "Terraform Test Load Test (2)",
        ///         ProjectId = loadTestProject.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetLoadTestsResult> InvokeAsync(GetLoadTestsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLoadTestsResult>("grafana:k6/getLoadTests:getLoadTests", args ?? new GetLoadTestsArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves all k6 load tests that belong to a project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var loadTestProject = new Grafana.K6.Project("load_test_project", new()
        ///     {
        ///         Name = "Terraform Load Test Project",
        ///     });
        /// 
        ///     var testLoadTest = new Grafana.K6.LoadTest("test_load_test", new()
        ///     {
        ///         ProjectId = loadTestProject.Id,
        ///         Name = "Terraform Test Load Test",
        ///         Script = @"export default function() {
        ///   console.log('Hello from k6!');
        /// }
        /// ",
        ///     }, new CustomResourceOptions
        ///     {
        ///         DependsOn =
        ///         {
        ///             loadTestProject,
        ///         },
        ///     });
        /// 
        ///     var testLoadTest2 = new Grafana.K6.LoadTest("test_load_test_2", new()
        ///     {
        ///         ProjectId = loadTestProject.Id,
        ///         Name = "Terraform Test Load Test (2)",
        ///         Script = @"export default function() {
        ///   console.log('Hello from k6!');
        /// }
        /// ",
        ///     }, new CustomResourceOptions
        ///     {
        ///         DependsOn =
        ///         {
        ///             testLoadTest,
        ///         },
        ///     });
        /// 
        ///     var fromProjectId = Grafana.K6.GetLoadTests.Invoke(new()
        ///     {
        ///         ProjectId = loadTestProject.Id,
        ///     });
        /// 
        ///     var filterByName = Grafana.K6.GetLoadTests.Invoke(new()
        ///     {
        ///         Name = "Terraform Test Load Test (2)",
        ///         ProjectId = loadTestProject.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLoadTestsResult> Invoke(GetLoadTestsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLoadTestsResult>("grafana:k6/getLoadTests:getLoadTests", args ?? new GetLoadTestsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves all k6 load tests that belong to a project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var loadTestProject = new Grafana.K6.Project("load_test_project", new()
        ///     {
        ///         Name = "Terraform Load Test Project",
        ///     });
        /// 
        ///     var testLoadTest = new Grafana.K6.LoadTest("test_load_test", new()
        ///     {
        ///         ProjectId = loadTestProject.Id,
        ///         Name = "Terraform Test Load Test",
        ///         Script = @"export default function() {
        ///   console.log('Hello from k6!');
        /// }
        /// ",
        ///     }, new CustomResourceOptions
        ///     {
        ///         DependsOn =
        ///         {
        ///             loadTestProject,
        ///         },
        ///     });
        /// 
        ///     var testLoadTest2 = new Grafana.K6.LoadTest("test_load_test_2", new()
        ///     {
        ///         ProjectId = loadTestProject.Id,
        ///         Name = "Terraform Test Load Test (2)",
        ///         Script = @"export default function() {
        ///   console.log('Hello from k6!');
        /// }
        /// ",
        ///     }, new CustomResourceOptions
        ///     {
        ///         DependsOn =
        ///         {
        ///             testLoadTest,
        ///         },
        ///     });
        /// 
        ///     var fromProjectId = Grafana.K6.GetLoadTests.Invoke(new()
        ///     {
        ///         ProjectId = loadTestProject.Id,
        ///     });
        /// 
        ///     var filterByName = Grafana.K6.GetLoadTests.Invoke(new()
        ///     {
        ///         Name = "Terraform Test Load Test (2)",
        ///         ProjectId = loadTestProject.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLoadTestsResult> Invoke(GetLoadTestsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLoadTestsResult>("grafana:k6/getLoadTests:getLoadTests", args ?? new GetLoadTestsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLoadTestsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Human-friendly identifier of the load test.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The identifier of the project the load tests belong to.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetLoadTestsArgs()
        {
        }
        public static new GetLoadTestsArgs Empty => new GetLoadTestsArgs();
    }

    public sealed class GetLoadTestsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Human-friendly identifier of the load test.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The identifier of the project the load tests belong to.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetLoadTestsInvokeArgs()
        {
        }
        public static new GetLoadTestsInvokeArgs Empty => new GetLoadTestsInvokeArgs();
    }


    [OutputType]
    public sealed class GetLoadTestsResult
    {
        /// <summary>
        /// The identifier of the project the load tests belong to. This is set to the same as the project_id.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetLoadTestsLoadTestResult> LoadTests;
        /// <summary>
        /// Human-friendly identifier of the load test.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The identifier of the project the load tests belong to.
        /// </summary>
        public readonly string ProjectId;

        [OutputConstructor]
        private GetLoadTestsResult(
            string id,

            ImmutableArray<Outputs.GetLoadTestsLoadTestResult> loadTests,

            string? name,

            string projectId)
        {
            Id = id;
            LoadTests = loadTests;
            Name = name;
            ProjectId = projectId;
        }
    }
}
