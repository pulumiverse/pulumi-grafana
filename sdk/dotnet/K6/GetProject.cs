// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.K6
{
    public static class GetProject
    {
        /// <summary>
        /// Retrieves a k6 project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = new Grafana.K6.Project("test", new()
        ///     {
        ///         Name = "Terraform Test Project",
        ///     });
        /// 
        ///     var fromId = Grafana.K6.GetProject.Invoke(new()
        ///     {
        ///         Id = test.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetProjectResult> InvokeAsync(GetProjectArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectResult>("grafana:k6/getProject:getProject", args ?? new GetProjectArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a k6 project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = new Grafana.K6.Project("test", new()
        ///     {
        ///         Name = "Terraform Test Project",
        ///     });
        /// 
        ///     var fromId = Grafana.K6.GetProject.Invoke(new()
        ///     {
        ///         Id = test.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProjectResult> Invoke(GetProjectInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectResult>("grafana:k6/getProject:getProject", args ?? new GetProjectInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a k6 project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = new Grafana.K6.Project("test", new()
        ///     {
        ///         Name = "Terraform Test Project",
        ///     });
        /// 
        ///     var fromId = Grafana.K6.GetProject.Invoke(new()
        ///     {
        ///         Id = test.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProjectResult> Invoke(GetProjectInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectResult>("grafana:k6/getProject:getProject", args ?? new GetProjectInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Numeric identifier of the project.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetProjectArgs()
        {
        }
        public static new GetProjectArgs Empty => new GetProjectArgs();
    }

    public sealed class GetProjectInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Numeric identifier of the project.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetProjectInvokeArgs()
        {
        }
        public static new GetProjectInvokeArgs Empty => new GetProjectInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectResult
    {
        /// <summary>
        /// The date when the project was created.
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// The Grafana folder uid.
        /// </summary>
        public readonly string GrafanaFolderUid;
        /// <summary>
        /// Numeric identifier of the project.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether this project is the default for running tests when no explicit project identifier is provided.
        /// </summary>
        public readonly bool IsDefault;
        /// <summary>
        /// Human-friendly identifier of the project.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The date when the project was last updated.
        /// </summary>
        public readonly string Updated;

        [OutputConstructor]
        private GetProjectResult(
            string created,

            string grafanaFolderUid,

            string id,

            bool isDefault,

            string name,

            string updated)
        {
            Created = created;
            GrafanaFolderUid = grafanaFolderUid;
            Id = id;
            IsDefault = isDefault;
            Name = name;
            Updated = updated;
        }
    }
}
