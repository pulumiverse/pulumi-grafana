// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.K6
{
    /// <summary>
    /// Manages allowed private load zones for a k6 project.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Grafana = Pulumiverse.Grafana;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testProjectAllowedLoadZones = new Grafana.K6.Project("test_project_allowed_load_zones", new()
    ///     {
    ///         Name = "Terraform Project Test Allowed Load Zones",
    ///     });
    /// 
    ///     var testAllowedZones = new Grafana.K6.ProjectAllowedLoadZones("test_allowed_zones", new()
    ///     {
    ///         ProjectId = testProjectAllowedLoadZones.Id,
    ///         AllowedLoadZones = new[]
    ///         {
    ///             "my-load-zone-1",
    ///             "other-load-zone",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import grafana:k6/projectAllowedLoadZones:ProjectAllowedLoadZones name "{{ project_id }}"
    /// ```
    /// </summary>
    [GrafanaResourceType("grafana:k6/projectAllowedLoadZones:ProjectAllowedLoadZones")]
    public partial class ProjectAllowedLoadZones : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of allowed private k6 load zone IDs for this project.
        /// </summary>
        [Output("allowedLoadZones")]
        public Output<ImmutableArray<string>> AllowedLoadZones { get; private set; } = null!;

        /// <summary>
        /// The identifier of the project to manage private allowed load zones for.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;


        /// <summary>
        /// Create a ProjectAllowedLoadZones resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProjectAllowedLoadZones(string name, ProjectAllowedLoadZonesArgs args, CustomResourceOptions? options = null)
            : base("grafana:k6/projectAllowedLoadZones:ProjectAllowedLoadZones", name, args ?? new ProjectAllowedLoadZonesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProjectAllowedLoadZones(string name, Input<string> id, ProjectAllowedLoadZonesState? state = null, CustomResourceOptions? options = null)
            : base("grafana:k6/projectAllowedLoadZones:ProjectAllowedLoadZones", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProjectAllowedLoadZones resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProjectAllowedLoadZones Get(string name, Input<string> id, ProjectAllowedLoadZonesState? state = null, CustomResourceOptions? options = null)
        {
            return new ProjectAllowedLoadZones(name, id, state, options);
        }
    }

    public sealed class ProjectAllowedLoadZonesArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedLoadZones", required: true)]
        private InputList<string>? _allowedLoadZones;

        /// <summary>
        /// List of allowed private k6 load zone IDs for this project.
        /// </summary>
        public InputList<string> AllowedLoadZones
        {
            get => _allowedLoadZones ?? (_allowedLoadZones = new InputList<string>());
            set => _allowedLoadZones = value;
        }

        /// <summary>
        /// The identifier of the project to manage private allowed load zones for.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public ProjectAllowedLoadZonesArgs()
        {
        }
        public static new ProjectAllowedLoadZonesArgs Empty => new ProjectAllowedLoadZonesArgs();
    }

    public sealed class ProjectAllowedLoadZonesState : global::Pulumi.ResourceArgs
    {
        [Input("allowedLoadZones")]
        private InputList<string>? _allowedLoadZones;

        /// <summary>
        /// List of allowed private k6 load zone IDs for this project.
        /// </summary>
        public InputList<string> AllowedLoadZones
        {
            get => _allowedLoadZones ?? (_allowedLoadZones = new InputList<string>());
            set => _allowedLoadZones = value;
        }

        /// <summary>
        /// The identifier of the project to manage private allowed load zones for.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        public ProjectAllowedLoadZonesState()
        {
        }
        public static new ProjectAllowedLoadZonesState Empty => new ProjectAllowedLoadZonesState();
    }
}
