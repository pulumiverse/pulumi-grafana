// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.K6
{
    public static class GetLoadTest
    {
        /// <summary>
        /// Retrieves a k6 load test.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var loadTestProject = new Grafana.K6.Project("load_test_project", new()
        ///     {
        ///         Name = "Terraform Load Test Project",
        ///     });
        /// 
        ///     var testLoadTest = new Grafana.K6.LoadTest("test_load_test", new()
        ///     {
        ///         ProjectId = loadTestProject.Id,
        ///         Name = "Terraform Test Load Test",
        ///         Script = @"export default function() {
        ///   console.log('Hello from k6!');
        /// }
        /// ",
        ///     });
        /// 
        ///     var fromId = Grafana.K6.GetLoadTest.Invoke(new()
        ///     {
        ///         Id = testLoadTest.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetLoadTestResult> InvokeAsync(GetLoadTestArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLoadTestResult>("grafana:k6/getLoadTest:getLoadTest", args ?? new GetLoadTestArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a k6 load test.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var loadTestProject = new Grafana.K6.Project("load_test_project", new()
        ///     {
        ///         Name = "Terraform Load Test Project",
        ///     });
        /// 
        ///     var testLoadTest = new Grafana.K6.LoadTest("test_load_test", new()
        ///     {
        ///         ProjectId = loadTestProject.Id,
        ///         Name = "Terraform Test Load Test",
        ///         Script = @"export default function() {
        ///   console.log('Hello from k6!');
        /// }
        /// ",
        ///     });
        /// 
        ///     var fromId = Grafana.K6.GetLoadTest.Invoke(new()
        ///     {
        ///         Id = testLoadTest.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLoadTestResult> Invoke(GetLoadTestInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLoadTestResult>("grafana:k6/getLoadTest:getLoadTest", args ?? new GetLoadTestInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a k6 load test.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var loadTestProject = new Grafana.K6.Project("load_test_project", new()
        ///     {
        ///         Name = "Terraform Load Test Project",
        ///     });
        /// 
        ///     var testLoadTest = new Grafana.K6.LoadTest("test_load_test", new()
        ///     {
        ///         ProjectId = loadTestProject.Id,
        ///         Name = "Terraform Test Load Test",
        ///         Script = @"export default function() {
        ///   console.log('Hello from k6!');
        /// }
        /// ",
        ///     });
        /// 
        ///     var fromId = Grafana.K6.GetLoadTest.Invoke(new()
        ///     {
        ///         Id = testLoadTest.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLoadTestResult> Invoke(GetLoadTestInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLoadTestResult>("grafana:k6/getLoadTest:getLoadTest", args ?? new GetLoadTestInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLoadTestArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Numeric identifier of the load test.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetLoadTestArgs()
        {
        }
        public static new GetLoadTestArgs Empty => new GetLoadTestArgs();
    }

    public sealed class GetLoadTestInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Numeric identifier of the load test.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetLoadTestInvokeArgs()
        {
        }
        public static new GetLoadTestInvokeArgs Empty => new GetLoadTestInvokeArgs();
    }


    [OutputType]
    public sealed class GetLoadTestResult
    {
        /// <summary>
        /// Identifier of a baseline test run used for results comparison.
        /// </summary>
        public readonly string BaselineTestRunId;
        /// <summary>
        /// The date when the load test was created.
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// Numeric identifier of the load test.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Human-friendly identifier of the load test.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The identifier of the project this load test belongs to.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// The k6 test script content.
        /// </summary>
        public readonly string Script;
        /// <summary>
        /// The date when the load test was last updated.
        /// </summary>
        public readonly string Updated;

        [OutputConstructor]
        private GetLoadTestResult(
            string baselineTestRunId,

            string created,

            string id,

            string name,

            string projectId,

            string script,

            string updated)
        {
            BaselineTestRunId = baselineTestRunId;
            Created = created;
            Id = id;
            Name = name;
            ProjectId = projectId;
            Script = script;
            Updated = updated;
        }
    }
}
