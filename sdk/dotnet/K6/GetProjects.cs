// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.K6
{
    public static class GetProjects
    {
        /// <summary>
        /// Retrieves all k6 projects with the given name.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var project = new Grafana.K6.Project("project", new()
        ///     {
        ///         Name = "Terraform Test Project",
        ///     });
        /// 
        ///     var fromName = Grafana.K6.GetProjects.Invoke(new()
        ///     {
        ///         Name = "Terraform Test Project",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetProjectsResult> InvokeAsync(GetProjectsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectsResult>("grafana:k6/getProjects:getProjects", args ?? new GetProjectsArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves all k6 projects with the given name.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var project = new Grafana.K6.Project("project", new()
        ///     {
        ///         Name = "Terraform Test Project",
        ///     });
        /// 
        ///     var fromName = Grafana.K6.GetProjects.Invoke(new()
        ///     {
        ///         Name = "Terraform Test Project",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProjectsResult> Invoke(GetProjectsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectsResult>("grafana:k6/getProjects:getProjects", args ?? new GetProjectsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves all k6 projects with the given name.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var project = new Grafana.K6.Project("project", new()
        ///     {
        ///         Name = "Terraform Test Project",
        ///     });
        /// 
        ///     var fromName = Grafana.K6.GetProjects.Invoke(new()
        ///     {
        ///         Name = "Terraform Test Project",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProjectsResult> Invoke(GetProjectsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectsResult>("grafana:k6/getProjects:getProjects", args ?? new GetProjectsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Human-friendly identifier of the project.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetProjectsArgs()
        {
        }
        public static new GetProjectsArgs Empty => new GetProjectsArgs();
    }

    public sealed class GetProjectsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Human-friendly identifier of the project.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetProjectsInvokeArgs()
        {
        }
        public static new GetProjectsInvokeArgs Empty => new GetProjectsInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectsResult
    {
        /// <summary>
        /// Human-friendly identifier of the project. This is set to the same as name.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Human-friendly identifier of the project.
        /// </summary>
        public readonly string? Name;
        public readonly ImmutableArray<Outputs.GetProjectsProjectResult> Projects;

        [OutputConstructor]
        private GetProjectsResult(
            string id,

            string? name,

            ImmutableArray<Outputs.GetProjectsProjectResult> projects)
        {
            Id = id;
            Name = name;
            Projects = projects;
        }
    }
}
