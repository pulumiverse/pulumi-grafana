// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.K6.Outputs
{

    [OutputType]
    public sealed class ScheduleRecurrenceRule
    {
        /// <summary>
        /// The weekdays when the 'WEEKLY' recurrence will be applied (e.g., ['MO', 'WE', 'FR']). Cannot be set for other frequencies.
        /// </summary>
        public readonly ImmutableArray<string> Bydays;
        /// <summary>
        /// How many times the recurrence will repeat.
        /// </summary>
        public readonly int? Count;
        /// <summary>
        /// The frequency of the schedule (HOURLY, DAILY, WEEKLY, MONTHLY, YEARLY).
        /// </summary>
        public readonly string? Frequency;
        /// <summary>
        /// The interval between each frequency iteration (e.g., 2 = every 2 hours for HOURLY). Defaults to 1.
        /// </summary>
        public readonly int? Interval;
        /// <summary>
        /// The end time for the recurrence (RFC3339 format).
        /// </summary>
        public readonly string? Until;

        [OutputConstructor]
        private ScheduleRecurrenceRule(
            ImmutableArray<string> bydays,

            int? count,

            string? frequency,

            int? interval,

            string? until)
        {
            Bydays = bydays;
            Count = count;
            Frequency = frequency;
            Interval = interval;
            Until = until;
        }
    }
}
