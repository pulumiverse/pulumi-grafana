// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.K6
{
    public static class GetProjectAllowedLoadZones
    {
        /// <summary>
        /// Retrieves allowed private load zones for a k6 project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProjectAllowedLoadZones = new Grafana.K6.Project("test_project_allowed_load_zones", new()
        ///     {
        ///         Name = "Terraform Project Test Allowed Load Zones",
        ///     });
        /// 
        ///     var fromProjectId = Grafana.K6.GetProjectAllowedLoadZones.Invoke(new()
        ///     {
        ///         ProjectId = testProjectAllowedLoadZones.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetProjectAllowedLoadZonesResult> InvokeAsync(GetProjectAllowedLoadZonesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectAllowedLoadZonesResult>("grafana:k6/getProjectAllowedLoadZones:getProjectAllowedLoadZones", args ?? new GetProjectAllowedLoadZonesArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves allowed private load zones for a k6 project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProjectAllowedLoadZones = new Grafana.K6.Project("test_project_allowed_load_zones", new()
        ///     {
        ///         Name = "Terraform Project Test Allowed Load Zones",
        ///     });
        /// 
        ///     var fromProjectId = Grafana.K6.GetProjectAllowedLoadZones.Invoke(new()
        ///     {
        ///         ProjectId = testProjectAllowedLoadZones.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProjectAllowedLoadZonesResult> Invoke(GetProjectAllowedLoadZonesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectAllowedLoadZonesResult>("grafana:k6/getProjectAllowedLoadZones:getProjectAllowedLoadZones", args ?? new GetProjectAllowedLoadZonesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves allowed private load zones for a k6 project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProjectAllowedLoadZones = new Grafana.K6.Project("test_project_allowed_load_zones", new()
        ///     {
        ///         Name = "Terraform Project Test Allowed Load Zones",
        ///     });
        /// 
        ///     var fromProjectId = Grafana.K6.GetProjectAllowedLoadZones.Invoke(new()
        ///     {
        ///         ProjectId = testProjectAllowedLoadZones.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProjectAllowedLoadZonesResult> Invoke(GetProjectAllowedLoadZonesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectAllowedLoadZonesResult>("grafana:k6/getProjectAllowedLoadZones:getProjectAllowedLoadZones", args ?? new GetProjectAllowedLoadZonesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectAllowedLoadZonesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the project to retrieve private allowed load zones for.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetProjectAllowedLoadZonesArgs()
        {
        }
        public static new GetProjectAllowedLoadZonesArgs Empty => new GetProjectAllowedLoadZonesArgs();
    }

    public sealed class GetProjectAllowedLoadZonesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the project to retrieve private allowed load zones for.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetProjectAllowedLoadZonesInvokeArgs()
        {
        }
        public static new GetProjectAllowedLoadZonesInvokeArgs Empty => new GetProjectAllowedLoadZonesInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectAllowedLoadZonesResult
    {
        /// <summary>
        /// List of allowed private k6 load zone IDs for this project.
        /// </summary>
        public readonly ImmutableArray<string> AllowedLoadZones;
        /// <summary>
        /// The identifier of the project. This is set to the same as the project_id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The identifier of the project to retrieve private allowed load zones for.
        /// </summary>
        public readonly string ProjectId;

        [OutputConstructor]
        private GetProjectAllowedLoadZonesResult(
            ImmutableArray<string> allowedLoadZones,

            string id,

            string projectId)
        {
            AllowedLoadZones = allowedLoadZones;
            Id = id;
            ProjectId = projectId;
        }
    }
}
