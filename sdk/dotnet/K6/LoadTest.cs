// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.K6
{
    /// <summary>
    /// Manages a k6 load test.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Grafana = Pulumiverse.Grafana;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var loadTestProject = new Grafana.K6.Project("load_test_project", new()
    ///     {
    ///         Name = "Terraform Load Test Project",
    ///     });
    /// 
    ///     var testLoadTest = new Grafana.K6.LoadTest("test_load_test", new()
    ///     {
    ///         ProjectId = loadTestProject.Id,
    ///         Name = "Terraform Test Load Test",
    ///         Script = @"export default function() {
    ///   console.log('Hello from k6!');
    /// }
    /// ",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import grafana:k6/loadTest:LoadTest name "{{ id }}"
    /// ```
    /// </summary>
    [GrafanaResourceType("grafana:k6/loadTest:LoadTest")]
    public partial class LoadTest : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Identifier of a baseline test run used for results comparison.
        /// </summary>
        [Output("baselineTestRunId")]
        public Output<int?> BaselineTestRunId { get; private set; } = null!;

        /// <summary>
        /// The date when the load test was created.
        /// </summary>
        [Output("created")]
        public Output<string> Created { get; private set; } = null!;

        /// <summary>
        /// Human-friendly identifier of the load test.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The identifier of the project this load test belongs to.
        /// </summary>
        [Output("projectId")]
        public Output<int> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The k6 test script content. Can be provided inline or via the `file()` function.
        /// </summary>
        [Output("script")]
        public Output<string> Script { get; private set; } = null!;

        /// <summary>
        /// The date when the load test was last updated.
        /// </summary>
        [Output("updated")]
        public Output<string> Updated { get; private set; } = null!;


        /// <summary>
        /// Create a LoadTest resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LoadTest(string name, LoadTestArgs args, CustomResourceOptions? options = null)
            : base("grafana:k6/loadTest:LoadTest", name, args ?? new LoadTestArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LoadTest(string name, Input<string> id, LoadTestState? state = null, CustomResourceOptions? options = null)
            : base("grafana:k6/loadTest:LoadTest", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LoadTest resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LoadTest Get(string name, Input<string> id, LoadTestState? state = null, CustomResourceOptions? options = null)
        {
            return new LoadTest(name, id, state, options);
        }
    }

    public sealed class LoadTestArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifier of a baseline test run used for results comparison.
        /// </summary>
        [Input("baselineTestRunId")]
        public Input<int>? BaselineTestRunId { get; set; }

        /// <summary>
        /// Human-friendly identifier of the load test.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The identifier of the project this load test belongs to.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        /// <summary>
        /// The k6 test script content. Can be provided inline or via the `file()` function.
        /// </summary>
        [Input("script", required: true)]
        public Input<string> Script { get; set; } = null!;

        public LoadTestArgs()
        {
        }
        public static new LoadTestArgs Empty => new LoadTestArgs();
    }

    public sealed class LoadTestState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifier of a baseline test run used for results comparison.
        /// </summary>
        [Input("baselineTestRunId")]
        public Input<int>? BaselineTestRunId { get; set; }

        /// <summary>
        /// The date when the load test was created.
        /// </summary>
        [Input("created")]
        public Input<string>? Created { get; set; }

        /// <summary>
        /// Human-friendly identifier of the load test.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The identifier of the project this load test belongs to.
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        /// <summary>
        /// The k6 test script content. Can be provided inline or via the `file()` function.
        /// </summary>
        [Input("script")]
        public Input<string>? Script { get; set; }

        /// <summary>
        /// The date when the load test was last updated.
        /// </summary>
        [Input("updated")]
        public Input<string>? Updated { get; set; }

        public LoadTestState()
        {
        }
        public static new LoadTestState Empty => new LoadTestState();
    }
}
