// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana
{
    [Obsolete(@"grafana.index/getslos.getSlos has been deprecated in favor of grafana.slo/getslos.getSlos")]
    public static class GetSlos
    {
        /// <summary>
        /// Datasource for retrieving all SLOs.
        /// 		
        /// * [Official documentation](https://grafana.com/docs/grafana-cloud/alerting-and-irm/slo/)
        /// * [API documentation](https://grafana.com/docs/grafana-cloud/alerting-and-irm/slo/api/)
        /// * [Additional Information On Alerting Rule Annotations and Labels](https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/#templating/)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = new Grafana.Slo.SLO("test", new()
        ///     {
        ///         Name = "Terraform Testing",
        ///         Description = "Terraform Description",
        ///         Queries = new[]
        ///         {
        ///             new Grafana.Slo.Inputs.SLOQueryArgs
        ///             {
        ///                 Freeform = new Grafana.Slo.Inputs.SLOQueryFreeformArgs
        ///                 {
        ///                     Query = "sum(rate(apiserver_request_total{code!=\"500\"}[$__rate_interval])) / sum(rate(apiserver_request_total[$__rate_interval]))",
        ///                 },
        ///                 Type = "freeform",
        ///             },
        ///         },
        ///         Objectives = new[]
        ///         {
        ///             new Grafana.Slo.Inputs.SLOObjectiveArgs
        ///             {
        ///                 Value = 0.995,
        ///                 Window = "30d",
        ///             },
        ///         },
        ///         DestinationDatasource = new Grafana.Slo.Inputs.SLODestinationDatasourceArgs
        ///         {
        ///             Uid = "grafanacloud-prom",
        ///         },
        ///         Labels = new[]
        ///         {
        ///             new Grafana.Slo.Inputs.SLOLabelArgs
        ///             {
        ///                 Key = "custom",
        ///                 Value = "value",
        ///             },
        ///         },
        ///         Alertings = new[]
        ///         {
        ///             new Grafana.Slo.Inputs.SLOAlertingArgs
        ///             {
        ///                 Fastburns = new[]
        ///                 {
        ///                     new Grafana.Slo.Inputs.SLOAlertingFastburnArgs
        ///                     {
        ///                         Annotations = new[]
        ///                         {
        ///                             new Grafana.Slo.Inputs.SLOAlertingFastburnAnnotationArgs
        ///                             {
        ///                                 Key = "name",
        ///                                 Value = "Critical - SLO Burn Rate Alert",
        ///                             },
        ///                         },
        ///                         Labels = new[]
        ///                         {
        ///                             new Grafana.Slo.Inputs.SLOAlertingFastburnLabelArgs
        ///                             {
        ///                                 Key = "type",
        ///                                 Value = "slo",
        ///                             },
        ///                         },
        ///                     },
        ///                 },
        ///                 Slowburns = new[]
        ///                 {
        ///                     new Grafana.Slo.Inputs.SLOAlertingSlowburnArgs
        ///                     {
        ///                         Annotations = new[]
        ///                         {
        ///                             new Grafana.Slo.Inputs.SLOAlertingSlowburnAnnotationArgs
        ///                             {
        ///                                 Key = "name",
        ///                                 Value = "Warning - SLO Burn Rate Alert",
        ///                             },
        ///                         },
        ///                         Labels = new[]
        ///                         {
        ///                             new Grafana.Slo.Inputs.SLOAlertingSlowburnLabelArgs
        ///                             {
        ///                                 Key = "type",
        ///                                 Value = "slo",
        ///                             },
        ///                         },
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var slos = Grafana.Slo.GetSlos.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSlosResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSlosResult>("grafana:index/getSlos:getSlos", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Datasource for retrieving all SLOs.
        /// 		
        /// * [Official documentation](https://grafana.com/docs/grafana-cloud/alerting-and-irm/slo/)
        /// * [API documentation](https://grafana.com/docs/grafana-cloud/alerting-and-irm/slo/api/)
        /// * [Additional Information On Alerting Rule Annotations and Labels](https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/#templating/)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = new Grafana.Slo.SLO("test", new()
        ///     {
        ///         Name = "Terraform Testing",
        ///         Description = "Terraform Description",
        ///         Queries = new[]
        ///         {
        ///             new Grafana.Slo.Inputs.SLOQueryArgs
        ///             {
        ///                 Freeform = new Grafana.Slo.Inputs.SLOQueryFreeformArgs
        ///                 {
        ///                     Query = "sum(rate(apiserver_request_total{code!=\"500\"}[$__rate_interval])) / sum(rate(apiserver_request_total[$__rate_interval]))",
        ///                 },
        ///                 Type = "freeform",
        ///             },
        ///         },
        ///         Objectives = new[]
        ///         {
        ///             new Grafana.Slo.Inputs.SLOObjectiveArgs
        ///             {
        ///                 Value = 0.995,
        ///                 Window = "30d",
        ///             },
        ///         },
        ///         DestinationDatasource = new Grafana.Slo.Inputs.SLODestinationDatasourceArgs
        ///         {
        ///             Uid = "grafanacloud-prom",
        ///         },
        ///         Labels = new[]
        ///         {
        ///             new Grafana.Slo.Inputs.SLOLabelArgs
        ///             {
        ///                 Key = "custom",
        ///                 Value = "value",
        ///             },
        ///         },
        ///         Alertings = new[]
        ///         {
        ///             new Grafana.Slo.Inputs.SLOAlertingArgs
        ///             {
        ///                 Fastburns = new[]
        ///                 {
        ///                     new Grafana.Slo.Inputs.SLOAlertingFastburnArgs
        ///                     {
        ///                         Annotations = new[]
        ///                         {
        ///                             new Grafana.Slo.Inputs.SLOAlertingFastburnAnnotationArgs
        ///                             {
        ///                                 Key = "name",
        ///                                 Value = "Critical - SLO Burn Rate Alert",
        ///                             },
        ///                         },
        ///                         Labels = new[]
        ///                         {
        ///                             new Grafana.Slo.Inputs.SLOAlertingFastburnLabelArgs
        ///                             {
        ///                                 Key = "type",
        ///                                 Value = "slo",
        ///                             },
        ///                         },
        ///                     },
        ///                 },
        ///                 Slowburns = new[]
        ///                 {
        ///                     new Grafana.Slo.Inputs.SLOAlertingSlowburnArgs
        ///                     {
        ///                         Annotations = new[]
        ///                         {
        ///                             new Grafana.Slo.Inputs.SLOAlertingSlowburnAnnotationArgs
        ///                             {
        ///                                 Key = "name",
        ///                                 Value = "Warning - SLO Burn Rate Alert",
        ///                             },
        ///                         },
        ///                         Labels = new[]
        ///                         {
        ///                             new Grafana.Slo.Inputs.SLOAlertingSlowburnLabelArgs
        ///                             {
        ///                                 Key = "type",
        ///                                 Value = "slo",
        ///                             },
        ///                         },
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var slos = Grafana.Slo.GetSlos.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSlosResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSlosResult>("grafana:index/getSlos:getSlos", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Datasource for retrieving all SLOs.
        /// 		
        /// * [Official documentation](https://grafana.com/docs/grafana-cloud/alerting-and-irm/slo/)
        /// * [API documentation](https://grafana.com/docs/grafana-cloud/alerting-and-irm/slo/api/)
        /// * [Additional Information On Alerting Rule Annotations and Labels](https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/#templating/)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = new Grafana.Slo.SLO("test", new()
        ///     {
        ///         Name = "Terraform Testing",
        ///         Description = "Terraform Description",
        ///         Queries = new[]
        ///         {
        ///             new Grafana.Slo.Inputs.SLOQueryArgs
        ///             {
        ///                 Freeform = new Grafana.Slo.Inputs.SLOQueryFreeformArgs
        ///                 {
        ///                     Query = "sum(rate(apiserver_request_total{code!=\"500\"}[$__rate_interval])) / sum(rate(apiserver_request_total[$__rate_interval]))",
        ///                 },
        ///                 Type = "freeform",
        ///             },
        ///         },
        ///         Objectives = new[]
        ///         {
        ///             new Grafana.Slo.Inputs.SLOObjectiveArgs
        ///             {
        ///                 Value = 0.995,
        ///                 Window = "30d",
        ///             },
        ///         },
        ///         DestinationDatasource = new Grafana.Slo.Inputs.SLODestinationDatasourceArgs
        ///         {
        ///             Uid = "grafanacloud-prom",
        ///         },
        ///         Labels = new[]
        ///         {
        ///             new Grafana.Slo.Inputs.SLOLabelArgs
        ///             {
        ///                 Key = "custom",
        ///                 Value = "value",
        ///             },
        ///         },
        ///         Alertings = new[]
        ///         {
        ///             new Grafana.Slo.Inputs.SLOAlertingArgs
        ///             {
        ///                 Fastburns = new[]
        ///                 {
        ///                     new Grafana.Slo.Inputs.SLOAlertingFastburnArgs
        ///                     {
        ///                         Annotations = new[]
        ///                         {
        ///                             new Grafana.Slo.Inputs.SLOAlertingFastburnAnnotationArgs
        ///                             {
        ///                                 Key = "name",
        ///                                 Value = "Critical - SLO Burn Rate Alert",
        ///                             },
        ///                         },
        ///                         Labels = new[]
        ///                         {
        ///                             new Grafana.Slo.Inputs.SLOAlertingFastburnLabelArgs
        ///                             {
        ///                                 Key = "type",
        ///                                 Value = "slo",
        ///                             },
        ///                         },
        ///                     },
        ///                 },
        ///                 Slowburns = new[]
        ///                 {
        ///                     new Grafana.Slo.Inputs.SLOAlertingSlowburnArgs
        ///                     {
        ///                         Annotations = new[]
        ///                         {
        ///                             new Grafana.Slo.Inputs.SLOAlertingSlowburnAnnotationArgs
        ///                             {
        ///                                 Key = "name",
        ///                                 Value = "Warning - SLO Burn Rate Alert",
        ///                             },
        ///                         },
        ///                         Labels = new[]
        ///                         {
        ///                             new Grafana.Slo.Inputs.SLOAlertingSlowburnLabelArgs
        ///                             {
        ///                                 Key = "type",
        ///                                 Value = "slo",
        ///                             },
        ///                         },
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var slos = Grafana.Slo.GetSlos.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSlosResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSlosResult>("grafana:index/getSlos:getSlos", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetSlosResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Returns a list of all SLOs"
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSlosSloResult> Slos;

        [OutputConstructor]
        private GetSlosResult(
            string id,

            ImmutableArray<Outputs.GetSlosSloResult> slos)
        {
            Id = id;
            Slos = slos;
        }
    }
}
