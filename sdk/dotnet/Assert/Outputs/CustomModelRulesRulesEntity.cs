// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Assert.Outputs
{

    [OutputType]
    public sealed class CustomModelRulesRulesEntity
    {
        /// <summary>
        /// List of queries that define this entity.
        /// </summary>
        public readonly ImmutableArray<Outputs.CustomModelRulesRulesEntityDefinedBy> DefinedBies;
        /// <summary>
        /// Whether this entity is disabled.
        /// </summary>
        public readonly bool? Disabled;
        /// <summary>
        /// List of enrichment sources for the entity.
        /// </summary>
        public readonly ImmutableArray<string> EnrichedBies;
        /// <summary>
        /// Lookup mappings for the entity.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Lookup;
        /// <summary>
        /// The name of the entity.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Scope labels for the entity.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Scope;
        /// <summary>
        /// The type of the entity (e.g., Service, Pod, Namespace).
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private CustomModelRulesRulesEntity(
            ImmutableArray<Outputs.CustomModelRulesRulesEntityDefinedBy> definedBies,

            bool? disabled,

            ImmutableArray<string> enrichedBies,

            ImmutableDictionary<string, string>? lookup,

            string name,

            ImmutableDictionary<string, string>? scope,

            string type)
        {
            DefinedBies = definedBies;
            Disabled = disabled;
            EnrichedBies = enrichedBies;
            Lookup = lookup;
            Name = name;
            Scope = scope;
            Type = type;
        }
    }
}
