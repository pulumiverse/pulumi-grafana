// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.FleetManagement
{
    public static class GetCollectors
    {
        /// <summary>
        /// Represents a list of Grafana Fleet Management collectors.
        /// 
        /// * [Official documentation](https://grafana.com/docs/grafana-cloud/send-data/fleet-management/)
        /// * [API documentation](https://grafana.com/docs/grafana-cloud/send-data/fleet-management/api-reference/collector-api/)
        /// 
        /// Required access policy scopes:
        /// 
        /// * fleet-management:read
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Grafana.FleetManagement.GetCollectors.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCollectorsResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCollectorsResult>("grafana:fleetManagement/getCollectors:getCollectors", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Represents a list of Grafana Fleet Management collectors.
        /// 
        /// * [Official documentation](https://grafana.com/docs/grafana-cloud/send-data/fleet-management/)
        /// * [API documentation](https://grafana.com/docs/grafana-cloud/send-data/fleet-management/api-reference/collector-api/)
        /// 
        /// Required access policy scopes:
        /// 
        /// * fleet-management:read
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Grafana.FleetManagement.GetCollectors.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCollectorsResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCollectorsResult>("grafana:fleetManagement/getCollectors:getCollectors", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Represents a list of Grafana Fleet Management collectors.
        /// 
        /// * [Official documentation](https://grafana.com/docs/grafana-cloud/send-data/fleet-management/)
        /// * [API documentation](https://grafana.com/docs/grafana-cloud/send-data/fleet-management/api-reference/collector-api/)
        /// 
        /// Required access policy scopes:
        /// 
        /// * fleet-management:read
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Grafana.FleetManagement.GetCollectors.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCollectorsResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCollectorsResult>("grafana:fleetManagement/getCollectors:getCollectors", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetCollectorsResult
    {
        /// <summary>
        /// List of collectors
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCollectorsCollectorResult> Collectors;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetCollectorsResult(
            ImmutableArray<Outputs.GetCollectorsCollectorResult> collectors,

            string id)
        {
            Collectors = collectors;
            Id = id;
        }
    }
}
