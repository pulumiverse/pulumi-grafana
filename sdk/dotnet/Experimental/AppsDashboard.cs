// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Experimental
{
    /// <summary>
    /// Manages Grafana dashboards via the new Grafana App Platform API. This resource is currently **EXPERIMENTAL** and may be subject to change. It requires a development build of Grafana with specific feature flags enabled.
    /// </summary>
    [GrafanaResourceType("grafana:experimental/appsDashboard:AppsDashboard")]
    public partial class AppsDashboard : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The metadata of the resource.
        /// </summary>
        [Output("metadata")]
        public Output<Outputs.AppsDashboardMetadata?> Metadata { get; private set; } = null!;

        /// <summary>
        /// Options for applying the resource.
        /// </summary>
        [Output("options")]
        public Output<Outputs.AppsDashboardOptions?> Options { get; private set; } = null!;

        /// <summary>
        /// The spec of the resource.
        /// </summary>
        [Output("spec")]
        public Output<Outputs.AppsDashboardSpec?> Spec { get; private set; } = null!;


        /// <summary>
        /// Create a AppsDashboard resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppsDashboard(string name, AppsDashboardArgs? args = null, CustomResourceOptions? options = null)
            : base("grafana:experimental/appsDashboard:AppsDashboard", name, args ?? new AppsDashboardArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppsDashboard(string name, Input<string> id, AppsDashboardState? state = null, CustomResourceOptions? options = null)
            : base("grafana:experimental/appsDashboard:AppsDashboard", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppsDashboard resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppsDashboard Get(string name, Input<string> id, AppsDashboardState? state = null, CustomResourceOptions? options = null)
        {
            return new AppsDashboard(name, id, state, options);
        }
    }

    public sealed class AppsDashboardArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The metadata of the resource.
        /// </summary>
        [Input("metadata")]
        public Input<Inputs.AppsDashboardMetadataArgs>? Metadata { get; set; }

        /// <summary>
        /// Options for applying the resource.
        /// </summary>
        [Input("options")]
        public Input<Inputs.AppsDashboardOptionsArgs>? Options { get; set; }

        /// <summary>
        /// The spec of the resource.
        /// </summary>
        [Input("spec")]
        public Input<Inputs.AppsDashboardSpecArgs>? Spec { get; set; }

        public AppsDashboardArgs()
        {
        }
        public static new AppsDashboardArgs Empty => new AppsDashboardArgs();
    }

    public sealed class AppsDashboardState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The metadata of the resource.
        /// </summary>
        [Input("metadata")]
        public Input<Inputs.AppsDashboardMetadataGetArgs>? Metadata { get; set; }

        /// <summary>
        /// Options for applying the resource.
        /// </summary>
        [Input("options")]
        public Input<Inputs.AppsDashboardOptionsGetArgs>? Options { get; set; }

        /// <summary>
        /// The spec of the resource.
        /// </summary>
        [Input("spec")]
        public Input<Inputs.AppsDashboardSpecGetArgs>? Spec { get; set; }

        public AppsDashboardState()
        {
        }
        public static new AppsDashboardState Empty => new AppsDashboardState();
    }
}
