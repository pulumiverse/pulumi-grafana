// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana
{
    /// <summary>
    /// Manages service accounts of a Grafana Cloud stack using the Cloud API
    /// This can be used to bootstrap a management service account for a new stack
    /// 
    /// * [Official documentation](https://grafana.com/docs/grafana/latest/administration/service-accounts/)
    /// * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api)
    /// 
    /// Required access policy scopes:
    /// 
    /// * stacks:read
    /// * stack-service-accounts:write
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Grafana = Pulumiverse.Grafana;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var cloudSa = new Grafana.Cloud.StackServiceAccount("cloud_sa", new()
    ///     {
    ///         StackSlug = "&lt;your stack slug&gt;",
    ///         Name = "cloud service account",
    ///         Role = "Admin",
    ///         IsDisabled = false,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import grafana:index/cloudStackServiceAccount:CloudStackServiceAccount name "{{ stackSlug }}:{{ serviceAccountID }}"
    /// ```
    /// </summary>
    [Obsolete(@"grafana.index/cloudstackserviceaccount.CloudStackServiceAccount has been deprecated in favor of grafana.cloud/stackserviceaccount.StackServiceAccount")]
    [GrafanaResourceType("grafana:index/cloudStackServiceAccount:CloudStackServiceAccount")]
    public partial class CloudStackServiceAccount : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The disabled status for the service account. Defaults to `false`.
        /// </summary>
        [Output("isDisabled")]
        public Output<bool?> IsDisabled { get; private set; } = null!;

        /// <summary>
        /// The name of the service account.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The basic role of the service account in the organization.
        /// </summary>
        [Output("role")]
        public Output<string> Role { get; private set; } = null!;

        [Output("stackSlug")]
        public Output<string> StackSlug { get; private set; } = null!;


        /// <summary>
        /// Create a CloudStackServiceAccount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudStackServiceAccount(string name, CloudStackServiceAccountArgs args, CustomResourceOptions? options = null)
            : base("grafana:index/cloudStackServiceAccount:CloudStackServiceAccount", name, args ?? new CloudStackServiceAccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudStackServiceAccount(string name, Input<string> id, CloudStackServiceAccountState? state = null, CustomResourceOptions? options = null)
            : base("grafana:index/cloudStackServiceAccount:CloudStackServiceAccount", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudStackServiceAccount resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudStackServiceAccount Get(string name, Input<string> id, CloudStackServiceAccountState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudStackServiceAccount(name, id, state, options);
        }
    }

    public sealed class CloudStackServiceAccountArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The disabled status for the service account. Defaults to `false`.
        /// </summary>
        [Input("isDisabled")]
        public Input<bool>? IsDisabled { get; set; }

        /// <summary>
        /// The name of the service account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The basic role of the service account in the organization.
        /// </summary>
        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        [Input("stackSlug", required: true)]
        public Input<string> StackSlug { get; set; } = null!;

        public CloudStackServiceAccountArgs()
        {
        }
        public static new CloudStackServiceAccountArgs Empty => new CloudStackServiceAccountArgs();
    }

    public sealed class CloudStackServiceAccountState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The disabled status for the service account. Defaults to `false`.
        /// </summary>
        [Input("isDisabled")]
        public Input<bool>? IsDisabled { get; set; }

        /// <summary>
        /// The name of the service account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The basic role of the service account in the organization.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        [Input("stackSlug")]
        public Input<string>? StackSlug { get; set; }

        public CloudStackServiceAccountState()
        {
        }
        public static new CloudStackServiceAccountState Empty => new CloudStackServiceAccountState();
    }
}
