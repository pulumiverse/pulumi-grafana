// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Enterprise
{
    /// <summary>
    /// **Note:** This resource is available only with Grafana Enterprise.
    /// 
    /// * [Official documentation](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-scim-provisioning/)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Grafana = Pulumiverse.Grafana;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Grafana.Enterprise.ScimConfig("default", new()
    ///     {
    ///         EnableUserSync = true,
    ///         EnableGroupSync = false,
    ///         AllowNonProvisionedUsers = false,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import grafana:enterprise/scimConfig:ScimConfig name ""
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import grafana:enterprise/scimConfig:ScimConfig name "{{ orgID }}"
    /// ```
    /// </summary>
    [GrafanaResourceType("grafana:enterprise/scimConfig:ScimConfig")]
    public partial class ScimConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to allow non-provisioned users to access Grafana.
        /// </summary>
        [Output("allowNonProvisionedUsers")]
        public Output<bool> AllowNonProvisionedUsers { get; private set; } = null!;

        /// <summary>
        /// Whether group synchronization is enabled.
        /// </summary>
        [Output("enableGroupSync")]
        public Output<bool> EnableGroupSync { get; private set; } = null!;

        /// <summary>
        /// Whether user synchronization is enabled.
        /// </summary>
        [Output("enableUserSync")]
        public Output<bool> EnableUserSync { get; private set; } = null!;

        /// <summary>
        /// The Organization ID. If not set, the Org ID defined in the provider block will be used.
        /// </summary>
        [Output("orgId")]
        public Output<string?> OrgId { get; private set; } = null!;


        /// <summary>
        /// Create a ScimConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScimConfig(string name, ScimConfigArgs args, CustomResourceOptions? options = null)
            : base("grafana:enterprise/scimConfig:ScimConfig", name, args ?? new ScimConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScimConfig(string name, Input<string> id, ScimConfigState? state = null, CustomResourceOptions? options = null)
            : base("grafana:enterprise/scimConfig:ScimConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScimConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScimConfig Get(string name, Input<string> id, ScimConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new ScimConfig(name, id, state, options);
        }
    }

    public sealed class ScimConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to allow non-provisioned users to access Grafana.
        /// </summary>
        [Input("allowNonProvisionedUsers", required: true)]
        public Input<bool> AllowNonProvisionedUsers { get; set; } = null!;

        /// <summary>
        /// Whether group synchronization is enabled.
        /// </summary>
        [Input("enableGroupSync", required: true)]
        public Input<bool> EnableGroupSync { get; set; } = null!;

        /// <summary>
        /// Whether user synchronization is enabled.
        /// </summary>
        [Input("enableUserSync", required: true)]
        public Input<bool> EnableUserSync { get; set; } = null!;

        /// <summary>
        /// The Organization ID. If not set, the Org ID defined in the provider block will be used.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        public ScimConfigArgs()
        {
        }
        public static new ScimConfigArgs Empty => new ScimConfigArgs();
    }

    public sealed class ScimConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to allow non-provisioned users to access Grafana.
        /// </summary>
        [Input("allowNonProvisionedUsers")]
        public Input<bool>? AllowNonProvisionedUsers { get; set; }

        /// <summary>
        /// Whether group synchronization is enabled.
        /// </summary>
        [Input("enableGroupSync")]
        public Input<bool>? EnableGroupSync { get; set; }

        /// <summary>
        /// Whether user synchronization is enabled.
        /// </summary>
        [Input("enableUserSync")]
        public Input<bool>? EnableUserSync { get; set; }

        /// <summary>
        /// The Organization ID. If not set, the Org ID defined in the provider block will be used.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        public ScimConfigState()
        {
        }
        public static new ScimConfigState Empty => new ScimConfigState();
    }
}
