// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Enterprise
{
    /// <summary>
    /// Manages LBAC rules for a data source.
    /// 
    /// !&gt; Warning: The resource is experimental and will be subject to change. This resource manages the entire LBAC rules tree, and will overwrite any existing rules.
    /// 
    /// * [Official documentation](https://grafana.com/docs/grafana/latest/administration/data-source-management/teamlbac/)
    /// * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/datasource_lbac_rules/)
    /// 
    /// This resource requires Grafana &gt;=11.5.0.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Grafana = Pulumiverse.Grafana;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var team = new Grafana.Oss.Team("team", new()
    ///     {
    ///         Name = "Team Name",
    ///     });
    /// 
    ///     var test = new Grafana.Oss.DataSource("test", new()
    ///     {
    ///         Type = "loki",
    ///         Name = "loki-from-terraform",
    ///         Url = "https://mylokiurl.net",
    ///         BasicAuthEnabled = true,
    ///         BasicAuthUsername = "username",
    ///         JsonDataEncoded = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["authType"] = "default",
    ///             ["basicAuthPassword"] = "password",
    ///         }),
    ///     });
    /// 
    ///     var testRule = new Grafana.Enterprise.DataSourceConfigLbacRules("test_rule", new()
    ///     {
    ///         DatasourceUid = test.Uid,
    ///         Rules = Output.JsonSerialize(Output.Create(team.TeamUid.Apply(teamUid =&gt; 
    ///         {
    ///             { teamUid, new[]
    ///             {
    ///                 "{ cluster = \"dev-us-central-0\", namespace = \"hosted-grafana\" }",
    ///                 "{ foo = \"qux\" }",
    ///             } },
    ///         }))),
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             team,
    ///             test,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import grafana:enterprise/dataSourceConfigLbacRules:DataSourceConfigLbacRules name "{{ datasource_uid }}"
    /// ```
    /// </summary>
    [GrafanaResourceType("grafana:enterprise/dataSourceConfigLbacRules:DataSourceConfigLbacRules")]
    public partial class DataSourceConfigLbacRules : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The UID of the datasource.
        /// </summary>
        [Output("datasourceUid")]
        public Output<string> DatasourceUid { get; private set; } = null!;

        /// <summary>
        /// JSON-encoded LBAC rules for the data source. Map of team UIDs to lists of rule strings.
        /// </summary>
        [Output("rules")]
        public Output<string> Rules { get; private set; } = null!;


        /// <summary>
        /// Create a DataSourceConfigLbacRules resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataSourceConfigLbacRules(string name, DataSourceConfigLbacRulesArgs args, CustomResourceOptions? options = null)
            : base("grafana:enterprise/dataSourceConfigLbacRules:DataSourceConfigLbacRules", name, args ?? new DataSourceConfigLbacRulesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataSourceConfigLbacRules(string name, Input<string> id, DataSourceConfigLbacRulesState? state = null, CustomResourceOptions? options = null)
            : base("grafana:enterprise/dataSourceConfigLbacRules:DataSourceConfigLbacRules", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataSourceConfigLbacRules resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataSourceConfigLbacRules Get(string name, Input<string> id, DataSourceConfigLbacRulesState? state = null, CustomResourceOptions? options = null)
        {
            return new DataSourceConfigLbacRules(name, id, state, options);
        }
    }

    public sealed class DataSourceConfigLbacRulesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The UID of the datasource.
        /// </summary>
        [Input("datasourceUid", required: true)]
        public Input<string> DatasourceUid { get; set; } = null!;

        /// <summary>
        /// JSON-encoded LBAC rules for the data source. Map of team UIDs to lists of rule strings.
        /// </summary>
        [Input("rules", required: true)]
        public Input<string> Rules { get; set; } = null!;

        public DataSourceConfigLbacRulesArgs()
        {
        }
        public static new DataSourceConfigLbacRulesArgs Empty => new DataSourceConfigLbacRulesArgs();
    }

    public sealed class DataSourceConfigLbacRulesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The UID of the datasource.
        /// </summary>
        [Input("datasourceUid")]
        public Input<string>? DatasourceUid { get; set; }

        /// <summary>
        /// JSON-encoded LBAC rules for the data source. Map of team UIDs to lists of rule strings.
        /// </summary>
        [Input("rules")]
        public Input<string>? Rules { get; set; }

        public DataSourceConfigLbacRulesState()
        {
        }
        public static new DataSourceConfigLbacRulesState Empty => new DataSourceConfigLbacRulesState();
    }
}
