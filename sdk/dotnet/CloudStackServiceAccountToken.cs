// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana
{
    /// <summary>
    /// Manages service account tokens of a Grafana Cloud stack using the Cloud API
    /// This can be used to bootstrap a management service account token for a new stack
    /// 
    /// * [Official documentation](https://grafana.com/docs/grafana/latest/administration/service-accounts/)
    /// * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api)
    /// 
    /// Required access policy scopes:
    /// 
    /// * stack-service-accounts:write
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Grafana = Pulumiverse.Grafana;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var cloudSa = new Grafana.Cloud.StackServiceAccount("cloud_sa", new()
    ///     {
    ///         StackSlug = "&lt;your stack slug&gt;",
    ///         Name = "cloud service account",
    ///         Role = "Admin",
    ///         IsDisabled = false,
    ///     });
    /// 
    ///     var foo = new Grafana.Cloud.StackServiceAccountToken("foo", new()
    ///     {
    ///         Name = "key_foo",
    ///         ServiceAccountId = cloudSa.Id,
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["serviceAccountTokenFooKey"] = foo.Key,
    ///     };
    /// });
    /// ```
    /// </summary>
    [Obsolete(@"grafana.index/cloudstackserviceaccounttoken.CloudStackServiceAccountToken has been deprecated in favor of grafana.cloud/stackserviceaccounttoken.StackServiceAccountToken")]
    [GrafanaResourceType("grafana:index/cloudStackServiceAccountToken:CloudStackServiceAccountToken")]
    public partial class CloudStackServiceAccountToken : global::Pulumi.CustomResource
    {
        [Output("expiration")]
        public Output<string> Expiration { get; private set; } = null!;

        [Output("hasExpired")]
        public Output<bool> HasExpired { get; private set; } = null!;

        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("secondsToLive")]
        public Output<int?> SecondsToLive { get; private set; } = null!;

        [Output("serviceAccountId")]
        public Output<string> ServiceAccountId { get; private set; } = null!;

        [Output("stackSlug")]
        public Output<string> StackSlug { get; private set; } = null!;


        /// <summary>
        /// Create a CloudStackServiceAccountToken resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudStackServiceAccountToken(string name, CloudStackServiceAccountTokenArgs args, CustomResourceOptions? options = null)
            : base("grafana:index/cloudStackServiceAccountToken:CloudStackServiceAccountToken", name, args ?? new CloudStackServiceAccountTokenArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudStackServiceAccountToken(string name, Input<string> id, CloudStackServiceAccountTokenState? state = null, CustomResourceOptions? options = null)
            : base("grafana:index/cloudStackServiceAccountToken:CloudStackServiceAccountToken", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
                AdditionalSecretOutputs =
                {
                    "key",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudStackServiceAccountToken resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudStackServiceAccountToken Get(string name, Input<string> id, CloudStackServiceAccountTokenState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudStackServiceAccountToken(name, id, state, options);
        }
    }

    public sealed class CloudStackServiceAccountTokenArgs : global::Pulumi.ResourceArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("secondsToLive")]
        public Input<int>? SecondsToLive { get; set; }

        [Input("serviceAccountId", required: true)]
        public Input<string> ServiceAccountId { get; set; } = null!;

        [Input("stackSlug", required: true)]
        public Input<string> StackSlug { get; set; } = null!;

        public CloudStackServiceAccountTokenArgs()
        {
        }
        public static new CloudStackServiceAccountTokenArgs Empty => new CloudStackServiceAccountTokenArgs();
    }

    public sealed class CloudStackServiceAccountTokenState : global::Pulumi.ResourceArgs
    {
        [Input("expiration")]
        public Input<string>? Expiration { get; set; }

        [Input("hasExpired")]
        public Input<bool>? HasExpired { get; set; }

        [Input("key")]
        private Input<string>? _key;
        public Input<string>? Key
        {
            get => _key;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _key = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("secondsToLive")]
        public Input<int>? SecondsToLive { get; set; }

        [Input("serviceAccountId")]
        public Input<string>? ServiceAccountId { get; set; }

        [Input("stackSlug")]
        public Input<string>? StackSlug { get; set; }

        public CloudStackServiceAccountTokenState()
        {
        }
        public static new CloudStackServiceAccountTokenState Empty => new CloudStackServiceAccountTokenState();
    }
}
