// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.CloudProvider
{
    public static class GetAwsAccount
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Grafana.Cloud.GetStack.Invoke(new()
        ///     {
        ///         Slug = "gcloudstacktest",
        ///     });
        /// 
        ///     var testAwsAccount = new Grafana.CloudProvider.AwsAccount("test", new()
        ///     {
        ///         StackId = test.Apply(getStackResult =&gt; getStackResult.Id),
        ///         RoleArn = testAwsIamRole.Arn,
        ///         Regions = new[]
        ///         {
        ///             "us-east-2",
        ///             "eu-west-3",
        ///         },
        ///     });
        /// 
        ///     var testGetAwsAccount = Grafana.CloudProvider.GetAwsAccount.Invoke(new()
        ///     {
        ///         StackId = test.Apply(getStackResult =&gt; getStackResult.Id),
        ///         ResourceId = testAwsAccount.ResourceId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAwsAccountResult> InvokeAsync(GetAwsAccountArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAwsAccountResult>("grafana:cloudProvider/getAwsAccount:getAwsAccount", args ?? new GetAwsAccountArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Grafana.Cloud.GetStack.Invoke(new()
        ///     {
        ///         Slug = "gcloudstacktest",
        ///     });
        /// 
        ///     var testAwsAccount = new Grafana.CloudProvider.AwsAccount("test", new()
        ///     {
        ///         StackId = test.Apply(getStackResult =&gt; getStackResult.Id),
        ///         RoleArn = testAwsIamRole.Arn,
        ///         Regions = new[]
        ///         {
        ///             "us-east-2",
        ///             "eu-west-3",
        ///         },
        ///     });
        /// 
        ///     var testGetAwsAccount = Grafana.CloudProvider.GetAwsAccount.Invoke(new()
        ///     {
        ///         StackId = test.Apply(getStackResult =&gt; getStackResult.Id),
        ///         ResourceId = testAwsAccount.ResourceId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAwsAccountResult> Invoke(GetAwsAccountInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAwsAccountResult>("grafana:cloudProvider/getAwsAccount:getAwsAccount", args ?? new GetAwsAccountInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// using Grafana = Pulumiverse.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Grafana.Cloud.GetStack.Invoke(new()
        ///     {
        ///         Slug = "gcloudstacktest",
        ///     });
        /// 
        ///     var testAwsAccount = new Grafana.CloudProvider.AwsAccount("test", new()
        ///     {
        ///         StackId = test.Apply(getStackResult =&gt; getStackResult.Id),
        ///         RoleArn = testAwsIamRole.Arn,
        ///         Regions = new[]
        ///         {
        ///             "us-east-2",
        ///             "eu-west-3",
        ///         },
        ///     });
        /// 
        ///     var testGetAwsAccount = Grafana.CloudProvider.GetAwsAccount.Invoke(new()
        ///     {
        ///         StackId = test.Apply(getStackResult =&gt; getStackResult.Id),
        ///         ResourceId = testAwsAccount.ResourceId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAwsAccountResult> Invoke(GetAwsAccountInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAwsAccountResult>("grafana:cloudProvider/getAwsAccount:getAwsAccount", args ?? new GetAwsAccountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAwsAccountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID given by the Grafana Cloud Provider API to this AWS Account resource.
        /// </summary>
        [Input("resourceId", required: true)]
        public string ResourceId { get; set; } = null!;

        [Input("stackId", required: true)]
        public string StackId { get; set; } = null!;

        public GetAwsAccountArgs()
        {
        }
        public static new GetAwsAccountArgs Empty => new GetAwsAccountArgs();
    }

    public sealed class GetAwsAccountInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID given by the Grafana Cloud Provider API to this AWS Account resource.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        [Input("stackId", required: true)]
        public Input<string> StackId { get; set; } = null!;

        public GetAwsAccountInvokeArgs()
        {
        }
        public static new GetAwsAccountInvokeArgs Empty => new GetAwsAccountInvokeArgs();
    }


    [OutputType]
    public sealed class GetAwsAccountResult
    {
        public readonly string Id;
        /// <summary>
        /// An optional human-readable name for this AWS Account resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A set of regions that this AWS Account resource applies to.
        /// </summary>
        public readonly ImmutableArray<string> Regions;
        /// <summary>
        /// The ID given by the Grafana Cloud Provider API to this AWS Account resource.
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// An IAM Role ARN string to represent with this AWS Account resource.
        /// </summary>
        public readonly string RoleArn;
        public readonly string StackId;

        [OutputConstructor]
        private GetAwsAccountResult(
            string id,

            string name,

            ImmutableArray<string> regions,

            string resourceId,

            string roleArn,

            string stackId)
        {
            Id = id;
            Name = name;
            Regions = regions;
            ResourceId = resourceId;
            RoleArn = roleArn;
            StackId = stackId;
        }
    }
}
