// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.CloudProvider
{
    public static class GetAwsCloudwatchScrapeJobs
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Grafana.Cloud.GetStack.Invoke(new()
        ///     {
        ///         Slug = "gcloudstacktest",
        ///     });
        /// 
        ///     var testGetAwsCloudwatchScrapeJobs = Grafana.CloudProvider.GetAwsCloudwatchScrapeJobs.Invoke(new()
        ///     {
        ///         StackId = test.Apply(getStackResult =&gt; getStackResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAwsCloudwatchScrapeJobsResult> InvokeAsync(GetAwsCloudwatchScrapeJobsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAwsCloudwatchScrapeJobsResult>("grafana:cloudProvider/getAwsCloudwatchScrapeJobs:getAwsCloudwatchScrapeJobs", args ?? new GetAwsCloudwatchScrapeJobsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Grafana.Cloud.GetStack.Invoke(new()
        ///     {
        ///         Slug = "gcloudstacktest",
        ///     });
        /// 
        ///     var testGetAwsCloudwatchScrapeJobs = Grafana.CloudProvider.GetAwsCloudwatchScrapeJobs.Invoke(new()
        ///     {
        ///         StackId = test.Apply(getStackResult =&gt; getStackResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAwsCloudwatchScrapeJobsResult> Invoke(GetAwsCloudwatchScrapeJobsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAwsCloudwatchScrapeJobsResult>("grafana:cloudProvider/getAwsCloudwatchScrapeJobs:getAwsCloudwatchScrapeJobs", args ?? new GetAwsCloudwatchScrapeJobsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Grafana.Cloud.GetStack.Invoke(new()
        ///     {
        ///         Slug = "gcloudstacktest",
        ///     });
        /// 
        ///     var testGetAwsCloudwatchScrapeJobs = Grafana.CloudProvider.GetAwsCloudwatchScrapeJobs.Invoke(new()
        ///     {
        ///         StackId = test.Apply(getStackResult =&gt; getStackResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAwsCloudwatchScrapeJobsResult> Invoke(GetAwsCloudwatchScrapeJobsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAwsCloudwatchScrapeJobsResult>("grafana:cloudProvider/getAwsCloudwatchScrapeJobs:getAwsCloudwatchScrapeJobs", args ?? new GetAwsCloudwatchScrapeJobsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAwsCloudwatchScrapeJobsArgs : global::Pulumi.InvokeArgs
    {
        [Input("scrapeJobs")]
        private List<Inputs.GetAwsCloudwatchScrapeJobsScrapeJobArgs>? _scrapeJobs;

        /// <summary>
        /// A list of AWS CloudWatch Scrape Job objects associated with the given StackID.
        /// </summary>
        public List<Inputs.GetAwsCloudwatchScrapeJobsScrapeJobArgs> ScrapeJobs
        {
            get => _scrapeJobs ?? (_scrapeJobs = new List<Inputs.GetAwsCloudwatchScrapeJobsScrapeJobArgs>());
            set => _scrapeJobs = value;
        }

        [Input("stackId", required: true)]
        public string StackId { get; set; } = null!;

        public GetAwsCloudwatchScrapeJobsArgs()
        {
        }
        public static new GetAwsCloudwatchScrapeJobsArgs Empty => new GetAwsCloudwatchScrapeJobsArgs();
    }

    public sealed class GetAwsCloudwatchScrapeJobsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("scrapeJobs")]
        private InputList<Inputs.GetAwsCloudwatchScrapeJobsScrapeJobInputArgs>? _scrapeJobs;

        /// <summary>
        /// A list of AWS CloudWatch Scrape Job objects associated with the given StackID.
        /// </summary>
        public InputList<Inputs.GetAwsCloudwatchScrapeJobsScrapeJobInputArgs> ScrapeJobs
        {
            get => _scrapeJobs ?? (_scrapeJobs = new InputList<Inputs.GetAwsCloudwatchScrapeJobsScrapeJobInputArgs>());
            set => _scrapeJobs = value;
        }

        [Input("stackId", required: true)]
        public Input<string> StackId { get; set; } = null!;

        public GetAwsCloudwatchScrapeJobsInvokeArgs()
        {
        }
        public static new GetAwsCloudwatchScrapeJobsInvokeArgs Empty => new GetAwsCloudwatchScrapeJobsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAwsCloudwatchScrapeJobsResult
    {
        public readonly string Id;
        /// <summary>
        /// A list of AWS CloudWatch Scrape Job objects associated with the given StackID.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAwsCloudwatchScrapeJobsScrapeJobResult> ScrapeJobs;
        public readonly string StackId;

        [OutputConstructor]
        private GetAwsCloudwatchScrapeJobsResult(
            string id,

            ImmutableArray<Outputs.GetAwsCloudwatchScrapeJobsScrapeJobResult> scrapeJobs,

            string stackId)
        {
            Id = id;
            ScrapeJobs = scrapeJobs;
            StackId = stackId;
        }
    }
}
