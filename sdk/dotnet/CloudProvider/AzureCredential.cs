// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.CloudProvider
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import grafana:cloudProvider/azureCredential:AzureCredential name "{{ stack_id }}:{{ resource_id }}"
    /// ```
    /// </summary>
    [GrafanaResourceType("grafana:cloudProvider/azureCredential:AzureCredential")]
    public partial class AzureCredential : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The list of auto discovery configurations.
        /// </summary>
        [Output("autoDiscoveryConfigurations")]
        public Output<ImmutableArray<Outputs.AzureCredentialAutoDiscoveryConfiguration>> AutoDiscoveryConfigurations { get; private set; } = null!;

        /// <summary>
        /// The client ID of the Azure Credential.
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        /// <summary>
        /// The client secret of the Azure Credential.
        /// </summary>
        [Output("clientSecret")]
        public Output<string> ClientSecret { get; private set; } = null!;

        /// <summary>
        /// The name of the Azure Credential.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The list of tag filters to apply to resources.
        /// </summary>
        [Output("resourceDiscoveryTagFilters")]
        public Output<ImmutableArray<Outputs.AzureCredentialResourceDiscoveryTagFilter>> ResourceDiscoveryTagFilters { get; private set; } = null!;

        /// <summary>
        /// The ID given by the Grafana Cloud Provider API to this AWS Account resource.
        /// </summary>
        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;

        /// <summary>
        /// A set of regions that this AWS Account resource applies to.
        /// </summary>
        [Output("resourceTagsToAddToMetrics")]
        public Output<ImmutableArray<string>> ResourceTagsToAddToMetrics { get; private set; } = null!;

        [Output("stackId")]
        public Output<string> StackId { get; private set; } = null!;

        /// <summary>
        /// The tenant ID of the Azure Credential.
        /// </summary>
        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;


        /// <summary>
        /// Create a AzureCredential resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AzureCredential(string name, AzureCredentialArgs args, CustomResourceOptions? options = null)
            : base("grafana:cloudProvider/azureCredential:AzureCredential", name, args ?? new AzureCredentialArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AzureCredential(string name, Input<string> id, AzureCredentialState? state = null, CustomResourceOptions? options = null)
            : base("grafana:cloudProvider/azureCredential:AzureCredential", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "grafana:cloud/providerAzureCredential:ProviderAzureCredential" },
                },
                AdditionalSecretOutputs =
                {
                    "clientSecret",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AzureCredential resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AzureCredential Get(string name, Input<string> id, AzureCredentialState? state = null, CustomResourceOptions? options = null)
        {
            return new AzureCredential(name, id, state, options);
        }
    }

    public sealed class AzureCredentialArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoDiscoveryConfigurations")]
        private InputList<Inputs.AzureCredentialAutoDiscoveryConfigurationArgs>? _autoDiscoveryConfigurations;

        /// <summary>
        /// The list of auto discovery configurations.
        /// </summary>
        public InputList<Inputs.AzureCredentialAutoDiscoveryConfigurationArgs> AutoDiscoveryConfigurations
        {
            get => _autoDiscoveryConfigurations ?? (_autoDiscoveryConfigurations = new InputList<Inputs.AzureCredentialAutoDiscoveryConfigurationArgs>());
            set => _autoDiscoveryConfigurations = value;
        }

        /// <summary>
        /// The client ID of the Azure Credential.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret", required: true)]
        private Input<string>? _clientSecret;

        /// <summary>
        /// The client secret of the Azure Credential.
        /// </summary>
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The name of the Azure Credential.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("resourceDiscoveryTagFilters")]
        private InputList<Inputs.AzureCredentialResourceDiscoveryTagFilterArgs>? _resourceDiscoveryTagFilters;

        /// <summary>
        /// The list of tag filters to apply to resources.
        /// </summary>
        public InputList<Inputs.AzureCredentialResourceDiscoveryTagFilterArgs> ResourceDiscoveryTagFilters
        {
            get => _resourceDiscoveryTagFilters ?? (_resourceDiscoveryTagFilters = new InputList<Inputs.AzureCredentialResourceDiscoveryTagFilterArgs>());
            set => _resourceDiscoveryTagFilters = value;
        }

        [Input("resourceTagsToAddToMetrics")]
        private InputList<string>? _resourceTagsToAddToMetrics;

        /// <summary>
        /// A set of regions that this AWS Account resource applies to.
        /// </summary>
        public InputList<string> ResourceTagsToAddToMetrics
        {
            get => _resourceTagsToAddToMetrics ?? (_resourceTagsToAddToMetrics = new InputList<string>());
            set => _resourceTagsToAddToMetrics = value;
        }

        [Input("stackId", required: true)]
        public Input<string> StackId { get; set; } = null!;

        /// <summary>
        /// The tenant ID of the Azure Credential.
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        public AzureCredentialArgs()
        {
        }
        public static new AzureCredentialArgs Empty => new AzureCredentialArgs();
    }

    public sealed class AzureCredentialState : global::Pulumi.ResourceArgs
    {
        [Input("autoDiscoveryConfigurations")]
        private InputList<Inputs.AzureCredentialAutoDiscoveryConfigurationGetArgs>? _autoDiscoveryConfigurations;

        /// <summary>
        /// The list of auto discovery configurations.
        /// </summary>
        public InputList<Inputs.AzureCredentialAutoDiscoveryConfigurationGetArgs> AutoDiscoveryConfigurations
        {
            get => _autoDiscoveryConfigurations ?? (_autoDiscoveryConfigurations = new InputList<Inputs.AzureCredentialAutoDiscoveryConfigurationGetArgs>());
            set => _autoDiscoveryConfigurations = value;
        }

        /// <summary>
        /// The client ID of the Azure Credential.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        [Input("clientSecret")]
        private Input<string>? _clientSecret;

        /// <summary>
        /// The client secret of the Azure Credential.
        /// </summary>
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The name of the Azure Credential.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("resourceDiscoveryTagFilters")]
        private InputList<Inputs.AzureCredentialResourceDiscoveryTagFilterGetArgs>? _resourceDiscoveryTagFilters;

        /// <summary>
        /// The list of tag filters to apply to resources.
        /// </summary>
        public InputList<Inputs.AzureCredentialResourceDiscoveryTagFilterGetArgs> ResourceDiscoveryTagFilters
        {
            get => _resourceDiscoveryTagFilters ?? (_resourceDiscoveryTagFilters = new InputList<Inputs.AzureCredentialResourceDiscoveryTagFilterGetArgs>());
            set => _resourceDiscoveryTagFilters = value;
        }

        /// <summary>
        /// The ID given by the Grafana Cloud Provider API to this AWS Account resource.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        [Input("resourceTagsToAddToMetrics")]
        private InputList<string>? _resourceTagsToAddToMetrics;

        /// <summary>
        /// A set of regions that this AWS Account resource applies to.
        /// </summary>
        public InputList<string> ResourceTagsToAddToMetrics
        {
            get => _resourceTagsToAddToMetrics ?? (_resourceTagsToAddToMetrics = new InputList<string>());
            set => _resourceTagsToAddToMetrics = value;
        }

        [Input("stackId")]
        public Input<string>? StackId { get; set; }

        /// <summary>
        /// The tenant ID of the Azure Credential.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public AzureCredentialState()
        {
        }
        public static new AzureCredentialState Empty => new AzureCredentialState();
    }
}
