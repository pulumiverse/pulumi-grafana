// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Cloud
{
    public static class GetPrivateDataSourceConnectNetworks
    {
        /// <summary>
        /// Fetches Private Data source Connect networks from Grafana Cloud.
        /// 
        /// * [Official documentation](https://grafana.com/docs/grafana-cloud/security-and-account-management/authentication-and-permissions/access-policies/)
        /// * [API documentation](https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-access-policies)
        /// 
        /// Required access policy scopes:
        /// 
        /// * accesspolicies:read
        /// </summary>
        public static Task<GetPrivateDataSourceConnectNetworksResult> InvokeAsync(GetPrivateDataSourceConnectNetworksArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPrivateDataSourceConnectNetworksResult>("grafana:cloud/getPrivateDataSourceConnectNetworks:getPrivateDataSourceConnectNetworks", args ?? new GetPrivateDataSourceConnectNetworksArgs(), options.WithDefaults());

        /// <summary>
        /// Fetches Private Data source Connect networks from Grafana Cloud.
        /// 
        /// * [Official documentation](https://grafana.com/docs/grafana-cloud/security-and-account-management/authentication-and-permissions/access-policies/)
        /// * [API documentation](https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-access-policies)
        /// 
        /// Required access policy scopes:
        /// 
        /// * accesspolicies:read
        /// </summary>
        public static Output<GetPrivateDataSourceConnectNetworksResult> Invoke(GetPrivateDataSourceConnectNetworksInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateDataSourceConnectNetworksResult>("grafana:cloud/getPrivateDataSourceConnectNetworks:getPrivateDataSourceConnectNetworks", args ?? new GetPrivateDataSourceConnectNetworksInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Fetches Private Data source Connect networks from Grafana Cloud.
        /// 
        /// * [Official documentation](https://grafana.com/docs/grafana-cloud/security-and-account-management/authentication-and-permissions/access-policies/)
        /// * [API documentation](https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-access-policies)
        /// 
        /// Required access policy scopes:
        /// 
        /// * accesspolicies:read
        /// </summary>
        public static Output<GetPrivateDataSourceConnectNetworksResult> Invoke(GetPrivateDataSourceConnectNetworksInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateDataSourceConnectNetworksResult>("grafana:cloud/getPrivateDataSourceConnectNetworks:getPrivateDataSourceConnectNetworks", args ?? new GetPrivateDataSourceConnectNetworksInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrivateDataSourceConnectNetworksArgs : global::Pulumi.InvokeArgs
    {
        [Input("nameFilter")]
        public string? NameFilter { get; set; }

        [Input("regionFilter")]
        public string? RegionFilter { get; set; }

        public GetPrivateDataSourceConnectNetworksArgs()
        {
        }
        public static new GetPrivateDataSourceConnectNetworksArgs Empty => new GetPrivateDataSourceConnectNetworksArgs();
    }

    public sealed class GetPrivateDataSourceConnectNetworksInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("nameFilter")]
        public Input<string>? NameFilter { get; set; }

        [Input("regionFilter")]
        public Input<string>? RegionFilter { get; set; }

        public GetPrivateDataSourceConnectNetworksInvokeArgs()
        {
        }
        public static new GetPrivateDataSourceConnectNetworksInvokeArgs Empty => new GetPrivateDataSourceConnectNetworksInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrivateDataSourceConnectNetworksResult
    {
        /// <summary>
        /// The ID of this datasource. This is an internal identifier used by the provider to track this datasource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameFilter;
        public readonly ImmutableArray<Outputs.GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkResult> PrivateDataSourceConnectNetworks;
        public readonly string? RegionFilter;

        [OutputConstructor]
        private GetPrivateDataSourceConnectNetworksResult(
            string id,

            string? nameFilter,

            ImmutableArray<Outputs.GetPrivateDataSourceConnectNetworksPrivateDataSourceConnectNetworkResult> privateDataSourceConnectNetworks,

            string? regionFilter)
        {
            Id = id;
            NameFilter = nameFilter;
            PrivateDataSourceConnectNetworks = privateDataSourceConnectNetworks;
            RegionFilter = regionFilter;
        }
    }
}
