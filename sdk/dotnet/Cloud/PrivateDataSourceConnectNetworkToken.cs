// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Cloud
{
    /// <summary>
    /// * [Official documentation](https://grafana.com/docs/grafana-cloud/connect-externally-hosted/private-data-source-connect/)
    /// * [API documentation](https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#create-a-token)
    /// 
    /// Required access policy scopes:
    /// 
    /// * accesspolicies:read
    /// * accesspolicies:write
    /// * accesspolicies:delete
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Grafana = Pulumi.Grafana;
    /// using Grafana = Pulumiverse.Grafana;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Grafana.Cloud.GetStack.Invoke(new()
    ///     {
    ///         Slug = "&lt;your slug&gt;",
    ///     });
    /// 
    ///     var test = new Grafana.Cloud.PrivateDataSourceConnectNetwork("test", new()
    ///     {
    ///         Region = "us",
    ///         Name = "my-pdc",
    ///         DisplayName = "My PDC",
    ///         StackIdentifier = current.Apply(getStackResult =&gt; getStackResult.Id),
    ///     });
    /// 
    ///     var testPrivateDataSourceConnectNetworkToken = new Grafana.Cloud.PrivateDataSourceConnectNetworkToken("test", new()
    ///     {
    ///         PdcNetworkId = test.PdcNetworkId,
    ///         Region = test.Region,
    ///         Name = "my-pdc-token",
    ///         DisplayName = "My PDC Token",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import grafana:cloud/privateDataSourceConnectNetworkToken:PrivateDataSourceConnectNetworkToken name "{{ region }}:{{ tokenId }}"
    /// ```
    /// </summary>
    [GrafanaResourceType("grafana:cloud/privateDataSourceConnectNetworkToken:PrivateDataSourceConnectNetworkToken")]
    public partial class PrivateDataSourceConnectNetworkToken : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Creation date of the private data source network token.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Display name of the private data source network token. Defaults to the name.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Expiration date of the private data source network token. Does not expire by default.
        /// </summary>
        [Output("expiresAt")]
        public Output<string?> ExpiresAt { get; private set; } = null!;

        /// <summary>
        /// Name of the private data source network token.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ID of the private data source network for which to create a token.
        /// </summary>
        [Output("pdcNetworkId")]
        public Output<string> PdcNetworkId { get; private set; } = null!;

        /// <summary>
        /// Region of the private data source network. Should be set to the same region as the private data source network. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("token")]
        public Output<string> Token { get; private set; } = null!;

        /// <summary>
        /// Last update date of the private data source network token.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a PrivateDataSourceConnectNetworkToken resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PrivateDataSourceConnectNetworkToken(string name, PrivateDataSourceConnectNetworkTokenArgs args, CustomResourceOptions? options = null)
            : base("grafana:cloud/privateDataSourceConnectNetworkToken:PrivateDataSourceConnectNetworkToken", name, args ?? new PrivateDataSourceConnectNetworkTokenArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PrivateDataSourceConnectNetworkToken(string name, Input<string> id, PrivateDataSourceConnectNetworkTokenState? state = null, CustomResourceOptions? options = null)
            : base("grafana:cloud/privateDataSourceConnectNetworkToken:PrivateDataSourceConnectNetworkToken", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
                AdditionalSecretOutputs =
                {
                    "token",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PrivateDataSourceConnectNetworkToken resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PrivateDataSourceConnectNetworkToken Get(string name, Input<string> id, PrivateDataSourceConnectNetworkTokenState? state = null, CustomResourceOptions? options = null)
        {
            return new PrivateDataSourceConnectNetworkToken(name, id, state, options);
        }
    }

    public sealed class PrivateDataSourceConnectNetworkTokenArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Display name of the private data source network token. Defaults to the name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Expiration date of the private data source network token. Does not expire by default.
        /// </summary>
        [Input("expiresAt")]
        public Input<string>? ExpiresAt { get; set; }

        /// <summary>
        /// Name of the private data source network token.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of the private data source network for which to create a token.
        /// </summary>
        [Input("pdcNetworkId", required: true)]
        public Input<string> PdcNetworkId { get; set; } = null!;

        /// <summary>
        /// Region of the private data source network. Should be set to the same region as the private data source network. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        public PrivateDataSourceConnectNetworkTokenArgs()
        {
        }
        public static new PrivateDataSourceConnectNetworkTokenArgs Empty => new PrivateDataSourceConnectNetworkTokenArgs();
    }

    public sealed class PrivateDataSourceConnectNetworkTokenState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Creation date of the private data source network token.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Display name of the private data source network token. Defaults to the name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Expiration date of the private data source network token. Does not expire by default.
        /// </summary>
        [Input("expiresAt")]
        public Input<string>? ExpiresAt { get; set; }

        /// <summary>
        /// Name of the private data source network token.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of the private data source network for which to create a token.
        /// </summary>
        [Input("pdcNetworkId")]
        public Input<string>? PdcNetworkId { get; set; }

        /// <summary>
        /// Region of the private data source network. Should be set to the same region as the private data source network. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("token")]
        private Input<string>? _token;
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Last update date of the private data source network token.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public PrivateDataSourceConnectNetworkTokenState()
        {
        }
        public static new PrivateDataSourceConnectNetworkTokenState Empty => new PrivateDataSourceConnectNetworkTokenState();
    }
}
