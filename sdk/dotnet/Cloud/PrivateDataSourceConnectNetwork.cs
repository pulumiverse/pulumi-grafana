// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Cloud
{
    /// <summary>
    /// * [Official documentation](https://grafana.com/docs/grafana-cloud/connect-externally-hosted/private-data-source-connect/)
    /// * [API documentation](https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#create-an-access-policy)
    /// 
    /// Required access policy scopes:
    /// 
    /// * accesspolicies:read
    /// * accesspolicies:write
    /// * accesspolicies:delete
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Grafana = Pulumi.Grafana;
    /// using Grafana = Pulumiverse.Grafana;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Grafana.Cloud.GetStack.Invoke(new()
    ///     {
    ///         Slug = "&lt;your slug&gt;",
    ///     });
    /// 
    ///     var test = new Grafana.Cloud.PrivateDataSourceConnectNetwork("test", new()
    ///     {
    ///         Region = "us",
    ///         Name = "my-pdc",
    ///         DisplayName = "My PDC",
    ///         StackIdentifier = current.Apply(getStackResult =&gt; getStackResult.Id),
    ///     });
    /// 
    ///     var testPrivateDataSourceConnectNetworkToken = new Grafana.Cloud.PrivateDataSourceConnectNetworkToken("test", new()
    ///     {
    ///         PdcNetworkId = test.PdcNetworkId,
    ///         Region = test.Region,
    ///         Name = "my-pdc-token",
    ///         DisplayName = "My PDC Token",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import grafana:cloud/privateDataSourceConnectNetwork:PrivateDataSourceConnectNetwork name "{{ region }}:{{ policyId }}"
    /// ```
    /// </summary>
    [GrafanaResourceType("grafana:cloud/privateDataSourceConnectNetwork:PrivateDataSourceConnectNetwork")]
    public partial class PrivateDataSourceConnectNetwork : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Creation date of the private data source connect network.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Display name of the PDC network. Defaults to the name.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Name of the PDC network.**Note:** The name must be lowercase and can contain hyphens or underscores. See full requirements here: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#request-body
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ID of the private data source connect network.
        /// </summary>
        [Output("pdcNetworkId")]
        public Output<string> PdcNetworkId { get; private set; } = null!;

        /// <summary>
        /// The region where your stack is deployed. Use the instances list API to get the region for your instance - use the regionSlug property: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-stacks
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The identifier of the stack.
        /// </summary>
        [Output("stackIdentifier")]
        public Output<string> StackIdentifier { get; private set; } = null!;

        /// <summary>
        /// Last update date of the private data source connect network.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a PrivateDataSourceConnectNetwork resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PrivateDataSourceConnectNetwork(string name, PrivateDataSourceConnectNetworkArgs args, CustomResourceOptions? options = null)
            : base("grafana:cloud/privateDataSourceConnectNetwork:PrivateDataSourceConnectNetwork", name, args ?? new PrivateDataSourceConnectNetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PrivateDataSourceConnectNetwork(string name, Input<string> id, PrivateDataSourceConnectNetworkState? state = null, CustomResourceOptions? options = null)
            : base("grafana:cloud/privateDataSourceConnectNetwork:PrivateDataSourceConnectNetwork", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PrivateDataSourceConnectNetwork resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PrivateDataSourceConnectNetwork Get(string name, Input<string> id, PrivateDataSourceConnectNetworkState? state = null, CustomResourceOptions? options = null)
        {
            return new PrivateDataSourceConnectNetwork(name, id, state, options);
        }
    }

    public sealed class PrivateDataSourceConnectNetworkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Display name of the PDC network. Defaults to the name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Name of the PDC network.**Note:** The name must be lowercase and can contain hyphens or underscores. See full requirements here: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#request-body
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The region where your stack is deployed. Use the instances list API to get the region for your instance - use the regionSlug property: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-stacks
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// The identifier of the stack.
        /// </summary>
        [Input("stackIdentifier", required: true)]
        public Input<string> StackIdentifier { get; set; } = null!;

        public PrivateDataSourceConnectNetworkArgs()
        {
        }
        public static new PrivateDataSourceConnectNetworkArgs Empty => new PrivateDataSourceConnectNetworkArgs();
    }

    public sealed class PrivateDataSourceConnectNetworkState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Creation date of the private data source connect network.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Display name of the PDC network. Defaults to the name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Name of the PDC network.**Note:** The name must be lowercase and can contain hyphens or underscores. See full requirements here: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#request-body
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of the private data source connect network.
        /// </summary>
        [Input("pdcNetworkId")]
        public Input<string>? PdcNetworkId { get; set; }

        /// <summary>
        /// The region where your stack is deployed. Use the instances list API to get the region for your instance - use the regionSlug property: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-stacks
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The identifier of the stack.
        /// </summary>
        [Input("stackIdentifier")]
        public Input<string>? StackIdentifier { get; set; }

        /// <summary>
        /// Last update date of the private data source connect network.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public PrivateDataSourceConnectNetworkState()
        {
        }
        public static new PrivateDataSourceConnectNetworkState Empty => new PrivateDataSourceConnectNetworkState();
    }
}
