// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Alerting.Outputs
{

    [OutputType]
    public sealed class AlertEnrichmentSpecStepConditionalThenStep
    {
        /// <summary>
        /// Integrate with Grafana Asserts for enrichment.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalThenStepAsserts? Asserts;
        /// <summary>
        /// Assign annotations to an alert.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalThenStepAssign? Assign;
        /// <summary>
        /// Use AI assistant to investigate alerts and add insights.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalThenStepAssistantInvestigations? AssistantInvestigations;
        /// <summary>
        /// Query Grafana data sources and add results to alerts.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalThenStepDataSource? DataSource;
        /// <summary>
        /// Generate AI explanation and store in an annotation.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalThenStepExplain? Explain;
        /// <summary>
        /// Call an external HTTP service for enrichment.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalThenStepExternal? External;
        /// <summary>
        /// Analyze alerts for patterns and insights.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalThenStepSift? Sift;

        [OutputConstructor]
        private AlertEnrichmentSpecStepConditionalThenStep(
            Outputs.AlertEnrichmentSpecStepConditionalThenStepAsserts? asserts,

            Outputs.AlertEnrichmentSpecStepConditionalThenStepAssign? assign,

            Outputs.AlertEnrichmentSpecStepConditionalThenStepAssistantInvestigations? assistantInvestigations,

            Outputs.AlertEnrichmentSpecStepConditionalThenStepDataSource? dataSource,

            Outputs.AlertEnrichmentSpecStepConditionalThenStepExplain? explain,

            Outputs.AlertEnrichmentSpecStepConditionalThenStepExternal? external,

            Outputs.AlertEnrichmentSpecStepConditionalThenStepSift? sift)
        {
            Asserts = asserts;
            Assign = assign;
            AssistantInvestigations = assistantInvestigations;
            DataSource = dataSource;
            Explain = explain;
            External = external;
            Sift = sift;
        }
    }
}
