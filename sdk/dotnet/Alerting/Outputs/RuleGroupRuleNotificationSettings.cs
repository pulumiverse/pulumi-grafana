// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Alerting.Outputs
{

    [OutputType]
    public sealed class RuleGroupRuleNotificationSettings
    {
        /// <summary>
        /// The contact point to route notifications that match this rule to.
        /// </summary>
        public readonly string ContactPoint;
        /// <summary>
        /// A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. If empty, no grouping is used. If specified, requires labels 'alertname' and 'grafana_folder' to be included.
        /// </summary>
        public readonly ImmutableArray<string> GroupBies;
        /// <summary>
        /// Minimum time interval between two notifications for the same group. Default is 5 minutes.
        /// </summary>
        public readonly string? GroupInterval;
        /// <summary>
        /// Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
        /// </summary>
        public readonly string? GroupWait;
        /// <summary>
        /// A list of mute timing names to apply to alerts that match this policy.
        /// </summary>
        public readonly ImmutableArray<string> MuteTimings;
        /// <summary>
        /// Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
        /// </summary>
        public readonly string? RepeatInterval;

        [OutputConstructor]
        private RuleGroupRuleNotificationSettings(
            string contactPoint,

            ImmutableArray<string> groupBies,

            string? groupInterval,

            string? groupWait,

            ImmutableArray<string> muteTimings,

            string? repeatInterval)
        {
            ContactPoint = contactPoint;
            GroupBies = groupBies;
            GroupInterval = groupInterval;
            GroupWait = groupWait;
            MuteTimings = muteTimings;
            RepeatInterval = repeatInterval;
        }
    }
}
