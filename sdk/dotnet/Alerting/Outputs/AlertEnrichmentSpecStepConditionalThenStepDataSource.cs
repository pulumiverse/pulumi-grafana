// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Alerting.Outputs
{

    [OutputType]
    public sealed class AlertEnrichmentSpecStepConditionalThenStepDataSource
    {
        /// <summary>
        /// Logs query configuration for querying log data sources.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalThenStepDataSourceLogsQuery? LogsQuery;
        /// <summary>
        /// Raw query configuration for advanced data source queries.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalThenStepDataSourceRawQuery? RawQuery;
        /// <summary>
        /// Maximum execution time (e.g., '30s', '1m')
        /// </summary>
        public readonly string? Timeout;

        [OutputConstructor]
        private AlertEnrichmentSpecStepConditionalThenStepDataSource(
            Outputs.AlertEnrichmentSpecStepConditionalThenStepDataSourceLogsQuery? logsQuery,

            Outputs.AlertEnrichmentSpecStepConditionalThenStepDataSourceRawQuery? rawQuery,

            string? timeout)
        {
            LogsQuery = logsQuery;
            RawQuery = rawQuery;
            Timeout = timeout;
        }
    }
}
