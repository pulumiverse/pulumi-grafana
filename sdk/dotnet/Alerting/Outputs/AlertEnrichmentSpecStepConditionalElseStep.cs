// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Alerting.Outputs
{

    [OutputType]
    public sealed class AlertEnrichmentSpecStepConditionalElseStep
    {
        /// <summary>
        /// Integrate with Grafana Asserts for enrichment.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalElseStepAsserts? Asserts;
        /// <summary>
        /// Assign annotations to an alert.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalElseStepAssign? Assign;
        /// <summary>
        /// Use AI assistant to investigate alerts and add insights.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalElseStepAssistantInvestigations? AssistantInvestigations;
        /// <summary>
        /// Query Grafana data sources and add results to alerts.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalElseStepDataSource? DataSource;
        /// <summary>
        /// Generate AI explanation and store in an annotation.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalElseStepExplain? Explain;
        /// <summary>
        /// Call an external HTTP service for enrichment.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalElseStepExternal? External;
        /// <summary>
        /// Analyze alerts for patterns and insights.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalElseStepSift? Sift;

        [OutputConstructor]
        private AlertEnrichmentSpecStepConditionalElseStep(
            Outputs.AlertEnrichmentSpecStepConditionalElseStepAsserts? asserts,

            Outputs.AlertEnrichmentSpecStepConditionalElseStepAssign? assign,

            Outputs.AlertEnrichmentSpecStepConditionalElseStepAssistantInvestigations? assistantInvestigations,

            Outputs.AlertEnrichmentSpecStepConditionalElseStepDataSource? dataSource,

            Outputs.AlertEnrichmentSpecStepConditionalElseStepExplain? explain,

            Outputs.AlertEnrichmentSpecStepConditionalElseStepExternal? external,

            Outputs.AlertEnrichmentSpecStepConditionalElseStepSift? sift)
        {
            Asserts = asserts;
            Assign = assign;
            AssistantInvestigations = assistantInvestigations;
            DataSource = dataSource;
            Explain = explain;
            External = external;
            Sift = sift;
        }
    }
}
