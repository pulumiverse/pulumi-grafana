// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Alerting.Outputs
{

    [OutputType]
    public sealed class MuteTimingInterval
    {
        /// <summary>
        /// An inclusive range of days, 1-31, within a month, e.g. "1" or "14:16". Negative values can be used to represent days counting from the end of a month, e.g. "-1".
        /// </summary>
        public readonly ImmutableArray<string> DaysOfMonths;
        /// <summary>
        /// Provides the time zone for the time interval. Must be a location in the IANA time zone database, e.g "America/New_York"
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// An inclusive range of months, either numerical or full calendar month, e.g. "1:3", "december", or "may:august".
        /// </summary>
        public readonly ImmutableArray<string> Months;
        /// <summary>
        /// The time ranges, represented in minutes, during which to mute in a given day.
        /// </summary>
        public readonly ImmutableArray<Outputs.MuteTimingIntervalTime> Times;
        /// <summary>
        /// An inclusive range of weekdays, e.g. "monday" or "tuesday:thursday".
        /// </summary>
        public readonly ImmutableArray<string> Weekdays;
        /// <summary>
        /// A positive inclusive range of years, e.g. "2030" or "2025:2026".
        /// </summary>
        public readonly ImmutableArray<string> Years;

        [OutputConstructor]
        private MuteTimingInterval(
            ImmutableArray<string> daysOfMonths,

            string? location,

            ImmutableArray<string> months,

            ImmutableArray<Outputs.MuteTimingIntervalTime> times,

            ImmutableArray<string> weekdays,

            ImmutableArray<string> years)
        {
            DaysOfMonths = daysOfMonths;
            Location = location;
            Months = months;
            Times = times;
            Weekdays = weekdays;
            Years = years;
        }
    }
}
