// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Alerting.Outputs
{

    [OutputType]
    public sealed class AlertEnrichmentSpecStepConditionalIf
    {
        /// <summary>
        /// Annotation matchers for the condition.
        /// </summary>
        public readonly ImmutableArray<Outputs.AlertEnrichmentSpecStepConditionalIfAnnotationMatcher> AnnotationMatchers;
        /// <summary>
        /// Data source condition.
        /// </summary>
        public readonly Outputs.AlertEnrichmentSpecStepConditionalIfDataSourceCondition? DataSourceCondition;
        /// <summary>
        /// Label matchers for the condition.
        /// </summary>
        public readonly ImmutableArray<Outputs.AlertEnrichmentSpecStepConditionalIfLabelMatcher> LabelMatchers;

        [OutputConstructor]
        private AlertEnrichmentSpecStepConditionalIf(
            ImmutableArray<Outputs.AlertEnrichmentSpecStepConditionalIfAnnotationMatcher> annotationMatchers,

            Outputs.AlertEnrichmentSpecStepConditionalIfDataSourceCondition? dataSourceCondition,

            ImmutableArray<Outputs.AlertEnrichmentSpecStepConditionalIfLabelMatcher> labelMatchers)
        {
            AnnotationMatchers = annotationMatchers;
            DataSourceCondition = dataSourceCondition;
            LabelMatchers = labelMatchers;
        }
    }
}
