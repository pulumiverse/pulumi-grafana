// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Alerting.Inputs
{

    public sealed class AlertEnrichmentSpecGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("alertRuleUids")]
        private InputList<string>? _alertRuleUids;

        /// <summary>
        /// UIDs of alert rules this enrichment applies to. If empty, applies to all alert rules.
        /// </summary>
        public InputList<string> AlertRuleUids
        {
            get => _alertRuleUids ?? (_alertRuleUids = new InputList<string>());
            set => _alertRuleUids = value;
        }

        [Input("annotationMatchers")]
        private InputList<Inputs.AlertEnrichmentSpecAnnotationMatcherGetArgs>? _annotationMatchers;

        /// <summary>
        /// Annotation matchers that an alert must satisfy for this enrichment to apply. Each matcher is an object with: 'type' (string, one of: =, !=, =~, !~), 'name' (string, annotation key to match), 'value' (string, annotation value to compare against, supports regex for =~/!~ operators).
        /// </summary>
        public InputList<Inputs.AlertEnrichmentSpecAnnotationMatcherGetArgs> AnnotationMatchers
        {
            get => _annotationMatchers ?? (_annotationMatchers = new InputList<Inputs.AlertEnrichmentSpecAnnotationMatcherGetArgs>());
            set => _annotationMatchers = value;
        }

        /// <summary>
        /// Description of the alert enrichment.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("disableProvenance")]
        public Input<bool>? DisableProvenance { get; set; }

        [Input("labelMatchers")]
        private InputList<Inputs.AlertEnrichmentSpecLabelMatcherGetArgs>? _labelMatchers;

        /// <summary>
        /// Label matchers that an alert must satisfy for this enrichment to apply. Each matcher is an object with: 'type' (string, one of: =, !=, =~, !~), 'name' (string, label key to match), 'value' (string, label value to compare against, supports regex for =~/!~ operators).
        /// </summary>
        public InputList<Inputs.AlertEnrichmentSpecLabelMatcherGetArgs> LabelMatchers
        {
            get => _labelMatchers ?? (_labelMatchers = new InputList<Inputs.AlertEnrichmentSpecLabelMatcherGetArgs>());
            set => _labelMatchers = value;
        }

        [Input("receivers")]
        private InputList<string>? _receivers;

        /// <summary>
        /// Receiver names to match. If empty, applies to all receivers.
        /// </summary>
        public InputList<string> Receivers
        {
            get => _receivers ?? (_receivers = new InputList<string>());
            set => _receivers = value;
        }

        [Input("steps")]
        private InputList<Inputs.AlertEnrichmentSpecStepGetArgs>? _steps;

        /// <summary>
        /// Enrichment step. Can be repeated multiple times to define a sequence of steps. Each step must contain exactly one enrichment block.
        /// </summary>
        public InputList<Inputs.AlertEnrichmentSpecStepGetArgs> Steps
        {
            get => _steps ?? (_steps = new InputList<Inputs.AlertEnrichmentSpecStepGetArgs>());
            set => _steps = value;
        }

        /// <summary>
        /// The title of the alert enrichment.
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        public AlertEnrichmentSpecGetArgs()
        {
        }
        public static new AlertEnrichmentSpecGetArgs Empty => new AlertEnrichmentSpecGetArgs();
    }
}
