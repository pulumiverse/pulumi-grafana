// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Alerting.Inputs
{

    public sealed class ContactPointWebhookHttpConfigOauth2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Client ID to use when authenticating.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret", required: true)]
        private Input<string>? _clientSecret;

        /// <summary>
        /// Client secret to use when authenticating.
        /// </summary>
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("endpointParams")]
        private InputMap<string>? _endpointParams;

        /// <summary>
        /// Optional parameters to append to the access token request.
        /// </summary>
        public InputMap<string> EndpointParams
        {
            get => _endpointParams ?? (_endpointParams = new InputMap<string>());
            set => _endpointParams = value;
        }

        /// <summary>
        /// Optional proxy configuration for OAuth2 requests.
        /// </summary>
        [Input("proxyConfig")]
        public Input<Inputs.ContactPointWebhookHttpConfigOauth2ProxyConfigArgs>? ProxyConfig { get; set; }

        [Input("scopes")]
        private InputList<string>? _scopes;

        /// <summary>
        /// Optional scopes to request when obtaining an access token.
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        /// <summary>
        /// Optional TLS configuration options for OAuth2 requests.
        /// </summary>
        [Input("tlsConfig")]
        public Input<Inputs.ContactPointWebhookHttpConfigOauth2TlsConfigArgs>? TlsConfig { get; set; }

        /// <summary>
        /// URL for the access token endpoint.
        /// </summary>
        [Input("tokenUrl", required: true)]
        public Input<string> TokenUrl { get; set; } = null!;

        public ContactPointWebhookHttpConfigOauth2Args()
        {
        }
        public static new ContactPointWebhookHttpConfigOauth2Args Empty => new ContactPointWebhookHttpConfigOauth2Args();
    }
}
