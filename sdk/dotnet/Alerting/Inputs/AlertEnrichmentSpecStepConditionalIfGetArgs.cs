// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.Alerting.Inputs
{

    public sealed class AlertEnrichmentSpecStepConditionalIfGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotationMatchers")]
        private InputList<Inputs.AlertEnrichmentSpecStepConditionalIfAnnotationMatcherGetArgs>? _annotationMatchers;

        /// <summary>
        /// Annotation matchers for the condition.
        /// </summary>
        public InputList<Inputs.AlertEnrichmentSpecStepConditionalIfAnnotationMatcherGetArgs> AnnotationMatchers
        {
            get => _annotationMatchers ?? (_annotationMatchers = new InputList<Inputs.AlertEnrichmentSpecStepConditionalIfAnnotationMatcherGetArgs>());
            set => _annotationMatchers = value;
        }

        /// <summary>
        /// Data source condition.
        /// </summary>
        [Input("dataSourceCondition")]
        public Input<Inputs.AlertEnrichmentSpecStepConditionalIfDataSourceConditionGetArgs>? DataSourceCondition { get; set; }

        [Input("labelMatchers")]
        private InputList<Inputs.AlertEnrichmentSpecStepConditionalIfLabelMatcherGetArgs>? _labelMatchers;

        /// <summary>
        /// Label matchers for the condition.
        /// </summary>
        public InputList<Inputs.AlertEnrichmentSpecStepConditionalIfLabelMatcherGetArgs> LabelMatchers
        {
            get => _labelMatchers ?? (_labelMatchers = new InputList<Inputs.AlertEnrichmentSpecStepConditionalIfLabelMatcherGetArgs>());
            set => _labelMatchers = value;
        }

        public AlertEnrichmentSpecStepConditionalIfGetArgs()
        {
        }
        public static new AlertEnrichmentSpecStepConditionalIfGetArgs Empty => new AlertEnrichmentSpecStepConditionalIfGetArgs();
    }
}
