// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.OnCall.Outputs
{

    [OutputType]
    public sealed class IntegrationTemplates
    {
        /// <summary>
        /// Template for sending a signal to acknowledge the Incident.
        /// </summary>
        public readonly string? AcknowledgeSignal;
        /// <summary>
        /// Templates for Email.
        /// </summary>
        public readonly Outputs.IntegrationTemplatesEmail? Email;
        /// <summary>
        /// Template for the key by which alerts are grouped.
        /// </summary>
        public readonly string? GroupingKey;
        /// <summary>
        /// Templates for Microsoft Teams. **NOTE**: Microsoft Teams templates are only available on Grafana Cloud.
        /// </summary>
        public readonly Outputs.IntegrationTemplatesMicrosoftTeams? MicrosoftTeams;
        /// <summary>
        /// Templates for Mobile app push notifications.
        /// </summary>
        public readonly Outputs.IntegrationTemplatesMobileApp? MobileApp;
        /// <summary>
        /// Templates for Phone Call.
        /// </summary>
        public readonly Outputs.IntegrationTemplatesPhoneCall? PhoneCall;
        /// <summary>
        /// Template for sending a signal to resolve the Incident.
        /// </summary>
        public readonly string? ResolveSignal;
        /// <summary>
        /// Templates for Slack.
        /// </summary>
        public readonly Outputs.IntegrationTemplatesSlack? Slack;
        /// <summary>
        /// Templates for SMS.
        /// </summary>
        public readonly Outputs.IntegrationTemplatesSms? Sms;
        /// <summary>
        /// Template for a source link.
        /// </summary>
        public readonly string? SourceLink;
        /// <summary>
        /// Templates for Telegram.
        /// </summary>
        public readonly Outputs.IntegrationTemplatesTelegram? Telegram;
        /// <summary>
        /// Templates for Web.
        /// </summary>
        public readonly Outputs.IntegrationTemplatesWeb? Web;

        [OutputConstructor]
        private IntegrationTemplates(
            string? acknowledgeSignal,

            Outputs.IntegrationTemplatesEmail? email,

            string? groupingKey,

            Outputs.IntegrationTemplatesMicrosoftTeams? microsoftTeams,

            Outputs.IntegrationTemplatesMobileApp? mobileApp,

            Outputs.IntegrationTemplatesPhoneCall? phoneCall,

            string? resolveSignal,

            Outputs.IntegrationTemplatesSlack? slack,

            Outputs.IntegrationTemplatesSms? sms,

            string? sourceLink,

            Outputs.IntegrationTemplatesTelegram? telegram,

            Outputs.IntegrationTemplatesWeb? web)
        {
            AcknowledgeSignal = acknowledgeSignal;
            Email = email;
            GroupingKey = groupingKey;
            MicrosoftTeams = microsoftTeams;
            MobileApp = mobileApp;
            PhoneCall = phoneCall;
            ResolveSignal = resolveSignal;
            Slack = slack;
            Sms = sms;
            SourceLink = sourceLink;
            Telegram = telegram;
            Web = web;
        }
    }
}
