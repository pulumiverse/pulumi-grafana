// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.OnCall
{
    public static class GetUserGroup
    {
        /// <summary>
        /// * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/user_groups/)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUserGroup = Grafana.OnCall.GetUserGroup.Invoke(new()
        ///     {
        ///         SlackHandle = "example_slack_handle",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetUserGroupResult> InvokeAsync(GetUserGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserGroupResult>("grafana:onCall/getUserGroup:getUserGroup", args ?? new GetUserGroupArgs(), options.WithDefaults());

        /// <summary>
        /// * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/user_groups/)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUserGroup = Grafana.OnCall.GetUserGroup.Invoke(new()
        ///     {
        ///         SlackHandle = "example_slack_handle",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUserGroupResult> Invoke(GetUserGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserGroupResult>("grafana:onCall/getUserGroup:getUserGroup", args ?? new GetUserGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/user_groups/)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUserGroup = Grafana.OnCall.GetUserGroup.Invoke(new()
        ///     {
        ///         SlackHandle = "example_slack_handle",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUserGroupResult> Invoke(GetUserGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserGroupResult>("grafana:onCall/getUserGroup:getUserGroup", args ?? new GetUserGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("slackHandle", required: true)]
        public string SlackHandle { get; set; } = null!;

        public GetUserGroupArgs()
        {
        }
        public static new GetUserGroupArgs Empty => new GetUserGroupArgs();
    }

    public sealed class GetUserGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("slackHandle", required: true)]
        public Input<string> SlackHandle { get; set; } = null!;

        public GetUserGroupInvokeArgs()
        {
        }
        public static new GetUserGroupInvokeArgs Empty => new GetUserGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserGroupResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string SlackHandle;
        public readonly string SlackId;

        [OutputConstructor]
        private GetUserGroupResult(
            string id,

            string slackHandle,

            string slackId)
        {
            Id = id;
            SlackHandle = slackHandle;
            SlackId = slackId;
        }
    }
}
