// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.OnCall
{
    public static class GetIntegration
    {
        /// <summary>
        /// * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/integrations/)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleIntegration = Grafana.OnCall.GetIntegration.Invoke(new()
        ///     {
        ///         Id = "CEXAMPLEID123",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetIntegrationResult> InvokeAsync(GetIntegrationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIntegrationResult>("grafana:onCall/getIntegration:getIntegration", args ?? new GetIntegrationArgs(), options.WithDefaults());

        /// <summary>
        /// * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/integrations/)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleIntegration = Grafana.OnCall.GetIntegration.Invoke(new()
        ///     {
        ///         Id = "CEXAMPLEID123",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIntegrationResult> Invoke(GetIntegrationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIntegrationResult>("grafana:onCall/getIntegration:getIntegration", args ?? new GetIntegrationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/integrations/)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleIntegration = Grafana.OnCall.GetIntegration.Invoke(new()
        ///     {
        ///         Id = "CEXAMPLEID123",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIntegrationResult> Invoke(GetIntegrationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIntegrationResult>("grafana:onCall/getIntegration:getIntegration", args ?? new GetIntegrationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIntegrationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The integration ID.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetIntegrationArgs()
        {
        }
        public static new GetIntegrationArgs Empty => new GetIntegrationArgs();
    }

    public sealed class GetIntegrationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The integration ID.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetIntegrationInvokeArgs()
        {
        }
        public static new GetIntegrationInvokeArgs Empty => new GetIntegrationInvokeArgs();
    }


    [OutputType]
    public sealed class GetIntegrationResult
    {
        /// <summary>
        /// The integration ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The link for the integration.
        /// </summary>
        public readonly string Link;
        /// <summary>
        /// The integration name.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetIntegrationResult(
            string id,

            string link,

            string name)
        {
            Id = id;
            Link = link;
            Name = name;
        }
    }
}
