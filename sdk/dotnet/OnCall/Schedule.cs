// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana.OnCall
{
    /// <summary>
    /// * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/schedules/)
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import grafana:onCall/schedule:Schedule name "{{ id }}"
    /// ```
    /// </summary>
    [GrafanaResourceType("grafana:onCall/schedule:Schedule")]
    public partial class Schedule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enable overrides via web UI (it will ignore ical*url*overrides).
        /// </summary>
        [Output("enableWebOverrides")]
        public Output<bool?> EnableWebOverrides { get; private set; } = null!;

        /// <summary>
        /// The URL of external iCal calendar which override primary events.
        /// </summary>
        [Output("icalUrlOverrides")]
        public Output<string?> IcalUrlOverrides { get; private set; } = null!;

        /// <summary>
        /// The URL of the external calendar iCal file.
        /// </summary>
        [Output("icalUrlPrimary")]
        public Output<string?> IcalUrlPrimary { get; private set; } = null!;

        /// <summary>
        /// The schedule's name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The list of ID's of on-call shifts.
        /// </summary>
        [Output("shifts")]
        public Output<ImmutableArray<string>> Shifts { get; private set; } = null!;

        /// <summary>
        /// The Slack-specific settings for a schedule.
        /// </summary>
        [Output("slack")]
        public Output<Outputs.ScheduleSlack?> Slack { get; private set; } = null!;

        /// <summary>
        /// The ID of the OnCall team (using the `grafana.onCall.getTeam` datasource).
        /// </summary>
        [Output("teamId")]
        public Output<string?> TeamId { get; private set; } = null!;

        /// <summary>
        /// The schedule's time zone.
        /// </summary>
        [Output("timeZone")]
        public Output<string?> TimeZone { get; private set; } = null!;

        /// <summary>
        /// The schedule's type. Valid values are `ical`, `calendar`, `web`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Schedule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Schedule(string name, ScheduleArgs args, CustomResourceOptions? options = null)
            : base("grafana:onCall/schedule:Schedule", name, args ?? new ScheduleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Schedule(string name, Input<string> id, ScheduleState? state = null, CustomResourceOptions? options = null)
            : base("grafana:onCall/schedule:Schedule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "grafana:index/oncallSchedule:OncallSchedule" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Schedule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Schedule Get(string name, Input<string> id, ScheduleState? state = null, CustomResourceOptions? options = null)
        {
            return new Schedule(name, id, state, options);
        }
    }

    public sealed class ScheduleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable overrides via web UI (it will ignore ical*url*overrides).
        /// </summary>
        [Input("enableWebOverrides")]
        public Input<bool>? EnableWebOverrides { get; set; }

        /// <summary>
        /// The URL of external iCal calendar which override primary events.
        /// </summary>
        [Input("icalUrlOverrides")]
        public Input<string>? IcalUrlOverrides { get; set; }

        /// <summary>
        /// The URL of the external calendar iCal file.
        /// </summary>
        [Input("icalUrlPrimary")]
        public Input<string>? IcalUrlPrimary { get; set; }

        /// <summary>
        /// The schedule's name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("shifts")]
        private InputList<string>? _shifts;

        /// <summary>
        /// The list of ID's of on-call shifts.
        /// </summary>
        public InputList<string> Shifts
        {
            get => _shifts ?? (_shifts = new InputList<string>());
            set => _shifts = value;
        }

        /// <summary>
        /// The Slack-specific settings for a schedule.
        /// </summary>
        [Input("slack")]
        public Input<Inputs.ScheduleSlackArgs>? Slack { get; set; }

        /// <summary>
        /// The ID of the OnCall team (using the `grafana.onCall.getTeam` datasource).
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        /// <summary>
        /// The schedule's time zone.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        /// <summary>
        /// The schedule's type. Valid values are `ical`, `calendar`, `web`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ScheduleArgs()
        {
        }
        public static new ScheduleArgs Empty => new ScheduleArgs();
    }

    public sealed class ScheduleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable overrides via web UI (it will ignore ical*url*overrides).
        /// </summary>
        [Input("enableWebOverrides")]
        public Input<bool>? EnableWebOverrides { get; set; }

        /// <summary>
        /// The URL of external iCal calendar which override primary events.
        /// </summary>
        [Input("icalUrlOverrides")]
        public Input<string>? IcalUrlOverrides { get; set; }

        /// <summary>
        /// The URL of the external calendar iCal file.
        /// </summary>
        [Input("icalUrlPrimary")]
        public Input<string>? IcalUrlPrimary { get; set; }

        /// <summary>
        /// The schedule's name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("shifts")]
        private InputList<string>? _shifts;

        /// <summary>
        /// The list of ID's of on-call shifts.
        /// </summary>
        public InputList<string> Shifts
        {
            get => _shifts ?? (_shifts = new InputList<string>());
            set => _shifts = value;
        }

        /// <summary>
        /// The Slack-specific settings for a schedule.
        /// </summary>
        [Input("slack")]
        public Input<Inputs.ScheduleSlackGetArgs>? Slack { get; set; }

        /// <summary>
        /// The ID of the OnCall team (using the `grafana.onCall.getTeam` datasource).
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        /// <summary>
        /// The schedule's time zone.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        /// <summary>
        /// The schedule's type. Valid values are `ical`, `calendar`, `web`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ScheduleState()
        {
        }
        public static new ScheduleState Empty => new ScheduleState();
    }
}
