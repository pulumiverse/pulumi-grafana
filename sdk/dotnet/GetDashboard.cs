// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana
{
    public static class GetDashboard
    {
        public static Task<GetDashboardResult> InvokeAsync(GetDashboardArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDashboardResult>("grafana:index/getDashboard:getDashboard", args ?? new GetDashboardArgs(), options.WithDefaults());

        public static Output<GetDashboardResult> Invoke(GetDashboardInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDashboardResult>("grafana:index/getDashboard:getDashboard", args ?? new GetDashboardInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDashboardArgs : global::Pulumi.InvokeArgs
    {
        [Input("dashboardId")]
        public int? DashboardId { get; set; }

        [Input("orgId")]
        public string? OrgId { get; set; }

        [Input("uid")]
        public string? Uid { get; set; }

        public GetDashboardArgs()
        {
        }
        public static new GetDashboardArgs Empty => new GetDashboardArgs();
    }

    public sealed class GetDashboardInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dashboardId")]
        public Input<int>? DashboardId { get; set; }

        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        [Input("uid")]
        public Input<string>? Uid { get; set; }

        public GetDashboardInvokeArgs()
        {
        }
        public static new GetDashboardInvokeArgs Empty => new GetDashboardInvokeArgs();
    }


    [OutputType]
    public sealed class GetDashboardResult
    {
        public readonly string ConfigJson;
        public readonly int? DashboardId;
        public readonly int Folder;
        public readonly string FolderUid;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool IsStarred;
        public readonly string? OrgId;
        public readonly string Slug;
        public readonly string Title;
        public readonly string? Uid;
        public readonly string Url;
        public readonly int Version;

        [OutputConstructor]
        private GetDashboardResult(
            string configJson,

            int? dashboardId,

            int folder,

            string folderUid,

            string id,

            bool isStarred,

            string? orgId,

            string slug,

            string title,

            string? uid,

            string url,

            int version)
        {
            ConfigJson = configJson;
            DashboardId = dashboardId;
            Folder = folder;
            FolderUid = folderUid;
            Id = id;
            IsStarred = isStarred;
            OrgId = orgId;
            Slug = slug;
            Title = title;
            Uid = uid;
            Url = url;
            Version = version;
        }
    }
}
