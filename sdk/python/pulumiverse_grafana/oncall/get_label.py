# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetLabelResult',
    'AwaitableGetLabelResult',
    'get_label',
    'get_label_output',
]

@pulumi.output_type
class GetLabelResult:
    """
    A collection of values returned by getLabel.
    """
    def __init__(__self__, id=None, key=None, value=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if key and not isinstance(key, str):
            raise TypeError("Expected argument 'key' to be a str")
        pulumi.set(__self__, "key", key)
        if value and not isinstance(value, str):
            raise TypeError("Expected argument 'value' to be a str")
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the label.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def key(self) -> builtins.str:
        """
        The key for the label.
        """
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def value(self) -> builtins.str:
        """
        The value of the label.
        """
        return pulumi.get(self, "value")


class AwaitableGetLabelResult(GetLabelResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetLabelResult(
            id=self.id,
            key=self.key,
            value=self.value)


def get_label(key: Optional[builtins.str] = None,
              value: Optional[builtins.str] = None,
              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetLabelResult:
    """
    * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/users/)


    :param builtins.str key: The key for the label.
    :param builtins.str value: The value of the label.
    """
    __args__ = dict()
    __args__['key'] = key
    __args__['value'] = value
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('grafana:onCall/getLabel:getLabel', __args__, opts=opts, typ=GetLabelResult).value

    return AwaitableGetLabelResult(
        id=pulumi.get(__ret__, 'id'),
        key=pulumi.get(__ret__, 'key'),
        value=pulumi.get(__ret__, 'value'))
def get_label_output(key: Optional[pulumi.Input[builtins.str]] = None,
                     value: Optional[pulumi.Input[builtins.str]] = None,
                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetLabelResult]:
    """
    * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/users/)


    :param builtins.str key: The key for the label.
    :param builtins.str value: The value of the label.
    """
    __args__ = dict()
    __args__['key'] = key
    __args__['value'] = value
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('grafana:onCall/getLabel:getLabel', __args__, opts=opts, typ=GetLabelResult)
    return __ret__.apply(lambda __response__: GetLabelResult(
        id=pulumi.get(__response__, 'id'),
        key=pulumi.get(__response__, 'key'),
        value=pulumi.get(__response__, 'value')))
