# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetCollectorsCollectorResult',
]

@pulumi.output_type
class GetCollectorsCollectorResult(dict):
    def __init__(__self__, *,
                 enabled: builtins.bool,
                 id: builtins.str,
                 local_attributes: Mapping[str, builtins.str],
                 remote_attributes: Mapping[str, builtins.str]):
        pulumi.set(__self__, "enabled", enabled)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "local_attributes", local_attributes)
        pulumi.set(__self__, "remote_attributes", remote_attributes)

    @property
    @pulumi.getter
    def enabled(self) -> builtins.bool:
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="localAttributes")
    def local_attributes(self) -> Mapping[str, builtins.str]:
        return pulumi.get(self, "local_attributes")

    @property
    @pulumi.getter(name="remoteAttributes")
    def remote_attributes(self) -> Mapping[str, builtins.str]:
        return pulumi.get(self, "remote_attributes")


